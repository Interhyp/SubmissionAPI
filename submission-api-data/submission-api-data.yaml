openapi: 3.0.2
info:
  title: Interhyp Submission API
  version: 2.0.0
  contact:
    name: Interhyp AG (Team Provider Excellence)
    email: support_submission_api@interhyp.de
  license:
    name: Interhyp AG
  description: |-
    ### This document describes the RESTful API and resources provided by Interhyp AG.<p> The RESTful API provides access to resources associated to submission process via *URI* paths, a client application will make an HTTP request using standard HTTP methods like *GET, PUT, POST and DELETE* and parse the response in *JSON* format.<p>
    ### API Audience<p> The API is intended to be consumed by clients who want to integrate Interhyp submission process in their own workflow.
    + **Bank Partners**
    ### API design Principles <p> During API design a set of principles were taken into consideration.
    + **API First**
    + **Mobile First**
    ### API client <p> As an API client you should adhere to the following robustness principle
    + **Tolerant Reader** Be tolerant with unknown fields in the payload. This is required to avoid new API versions if new fields were added, i.e. ignore new fields but do not eliminate them from payload if needed for subsequent *PUT* requests
    + Be prepared to handle HTTP status codes not explicitly specified in endpoint definitions.
servers:
- url: https://api-test.interhyp.de/submission
  description: Test-Staging
- url: https://api.interhyp.de/submission
  description: Production
tags:
- name: submissions
  description: access to submissions
- name: consultation
  description: access mortgage consultation
- name: financing-application
  description: access mortgage financing application
- name: protocol
  description: access to submission protocol
- name: correspondence
  description: access to submission correspondence
- name: commands
  description: access to created commands
paths:
  /v2/commands/{commandId}:
    get:
      summary: Get an existing command
      description: |
        Delivers information about an existing command
      operationId: getCommandsById
      tags:
      - commands
      parameters:
      - $ref: '#/components/parameters/command-id'
      responses:
        '200':
          description: Command is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Command'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested command resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/advisors:
    get:
      summary: Get consultation advisors
      description: Delivers detailed information about the consultation advisors associated
        to this submission.
      operationId: getAdvisorsBySubmissionId
      tags:
      - consultation
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      - $ref: '#/components/parameters/embed'
      - $ref: '#/components/parameters/advisor-filter'
      responses:
        '200':
          description: Requested mortgage advisors are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Advisors'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/advisors/{advisorId}:
    get:
      summary: Get a specific mortgage advisor
      description: Delivers detailed information for mortgage advisor by his id.
      operationId: getAdvisorById
      tags:
      - consultation
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      - $ref: '#/components/parameters/advisor-id'
      responses:
        '200':
          description: Requested advisor is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Advisor'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested advisor resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/informers:
    get:
      summary: Get consultation informers
      description: Delivers detailed information about the consultation informers
        associated to this submission.
      operationId: getInformersBySubmissionId
      tags:
      - consultation
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      - $ref: '#/components/parameters/embed'
      responses:
        '200':
          description: Requested mortgage informers are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Informers'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/informers/{informerId}:
    get:
      summary: Get a specific mortgage informer
      description: Delivers detailed information for mortgage informer by his id.
      operationId: getInformerById
      tags:
      - consultation
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      - $ref: '#/components/parameters/informer-id'
      responses:
        '200':
          description: Requested informer is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Informer'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested informer resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/submissions/{submissionId}/handover:
    get:
      summary: Get consultation handover
      description: Delivers detailed information about the consultation handover associated
        to this submission.
      operationId: getHandoverBySubmissionId
      tags:
      - consultation
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      - $ref: '#/components/parameters/submission-id'
      responses:
        '200':
          description: Requested consultancy handover is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Handover'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/submissions/correspondence:
    get:
      summary: Delivers all submissions correspondence for a provider
      description: Delivers a collection of submission correspondence among involved
        submission process parties for a specific provider filtered by the date of
        correspondence.<p> *By Default*, we will return the first *20* matching records.
        However, this is not a hard limitation! a parameter called `limit` can be
        used to tell the API how many records you want to return all at once *(max
        40)*.<p> To get further matching records, a parameter called `after` or `before`
        can be used to tell the API the start of each page using specified cursor.<p>
        To navigate through the query result, a reference to the following navigations
        are included in the response *(next, prev, first, last, self)*.
      operationId: getSubmissionsCorrespondence
      tags:
      - correspondence
      parameters:
      - $ref: '#/components/parameters/since'
      - $ref: '#/components/parameters/until'
      - $ref: '#/components/parameters/correspondence-type-filter'
      - $ref: '#/components/parameters/sbms-correspondence-limit'
      - $ref: '#/components/parameters/cursor-after'
      - $ref: '#/components/parameters/cursor-before'
      - $ref: '#/components/parameters/embed'
      responses:
        '200':
          description: A paged array of submissions correspondence
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionCorrespondence'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/submissions/{submissionId}/correspondence:
    get:
      summary: Get correspondence for a specific submission
      description: Delivers detailed information about correspondence among involved
        submission process  parties associated with a specific submission. By default
        the result will be sorted based on createdAt ascending.
      operationId: getCorrespondenceBySubmissionId
      tags:
      - correspondence
      parameters:
      - $ref: '#/components/parameters/submission-id'
      - $ref: '#/components/parameters/correspondence-type-filter'
      - $ref: '#/components/parameters/sbms-correspondence-sort'
      responses:
        '200':
          description: Submission correspondence are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Correspondence'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
    post:
      summary: Create new correspondence for a specific submission
      operationId: createSubmissionCorrespondence
      tags:
      - correspondence
      parameters:
      - $ref: '#/components/parameters/submission-id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CorrespondenceItem'
      responses:
        '201':
          description: Correspondence was created
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
          headers:
            Location:
              schema:
                type: string
                description: Link to retrieve a specific resource
                example: http://some-domain/some/link/to/somewhere
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
    delete:
      summary: Delete correspondence assocaited with a specific submission
      operationId: deleteSubmissionCorrespondence
      tags:
      - correspondence
      parameters:
      - $ref: '#/components/parameters/submission-id'
      responses:
        '204':
          description: Submission correspondence are deleted
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/submissions/{submissionId}/correspondence/{itemId}:
    get:
      summary: Get a specific submission correspondence item
      description: Delivers detailed information about a specific submission correspondence
        item.
      operationId: getSubmissionCorrespondenceById
      tags:
      - correspondence
      parameters:
      - $ref: '#/components/parameters/correspondence-item-id'
      - $ref: '#/components/parameters/submission-id'
      responses:
        '200':
          description: Submission corresponcence item is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorrespondenceItem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
    delete:
      summary: Delete a specific submission correspondence item
      operationId: deleteSubmissionCorrespondenceById
      tags:
      - correspondence
      parameters:
      - $ref: '#/components/parameters/correspondence-item-id'
      - $ref: '#/components/parameters/submission-id'
      responses:
        '204':
          description: Submission correspondence item is deleted
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
    put:
      summary: Override a specific submission correspondence item
      operationId: overrideSubmissionCorrespondenceById
      tags:
      - correspondence
      parameters:
      - $ref: '#/components/parameters/correspondence-item-id'
      - $ref: '#/components/parameters/submission-id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CorrespondenceItem'
      responses:
        '204':
          description: Submission correspondence item is updated
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/commands:
    post:
      summary: Create a new financing application
      description: |
        EN: Create a new financing application with detailed information about the consultation application.
      operationId: createFinancingApplication
      tags:
      - financing-application
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinancingApplicationCreationCommand'
      responses:
        '201':
          description: Reference to the created resource.
          headers:
            Location:
              schema:
                type: string
                description: |
                  EN: Link to retrieve a specific resource DE: Link zu einer spezifischen Ressource
                example: http://some-domain/some/link/to/somewhere
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancingApplicationCreationCommandResponse'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/commands:
    post:
      summary: Modify an existing financing application
      description: |
        EN: Create an command to Modify an existing financing application.
      operationId: modifyFinancingApplication
      tags:
      - financing-application
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyFinancingApplicationCommand'
      responses:
        '201':
          description: Reference to the created resource.
          headers:
            Location:
              schema:
                type: string
                description: |
                  EN: Link to retrieve a specific resource DE: Link zu einer spezifischen Ressource
                example: http://some-domain/some/link/to/somewhere
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandId'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}:
    get:
      summary: Get a exisiting financing application
      description: |
        Delivers information about existing financing application
      operationId: getFinancingApplicationById
      tags:
      - financing-application
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      - $ref: '#/components/parameters/embed'
      responses:
        '200':
          description: Financing application is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancingApplication'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested financing application resource
            was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/applicant-relationships:
    get:
      summary: Get a array of applicant-relationship
      description: |
        Delivers information about the relationship of the applicants
      operationId: getApplicantRelationshipsByFinancingApplicationId
      tags:
      - financing-application
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      responses:
        '200':
          description: requested applicant relationsships are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicantRelationshipsQuery'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that the financing application resource was
            not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/households:
    get:
      summary: Get applicants household
      description: Delivers detailed information about the applicants households associated
        to this submission package.
      operationId: getHouseholdsByFinancingApplicationId
      tags:
      - financing-application
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      responses:
        '200':
          description: Requested submission overview is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HouseholdsQuery'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/applicants:
    get:
      summary: Get applicants for a specific submission package.
      description: Delivers detailed information for applicants associated to this
        submission.
      operationId: getApplicantsByFinancingApplicationId
      tags:
      - financing-application
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      - $ref: '#/components/parameters/embed'
      responses:
        '200':
          description: Requested applicants are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Applicants'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/applicants/{applicantId}:
    get:
      summary: Get a specific mortgage applicant
      description: Delivers detailed information for mortgage applicant by his id.
      operationId: getApplicantById
      tags:
      - financing-application
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      - $ref: '#/components/parameters/applicant-id'
      responses:
        '200':
          description: Requested applicant is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Applicant'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested applicant resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/estates:
    get:
      summary: Get estates for a specific submission.
      description: Delivers detailed information for estates associated to this submission.
      operationId: getEstatesByFinancingApplicationId
      tags:
      - financing-application
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      - $ref: '#/components/parameters/embed'
      responses:
        '200':
          description: Requested estate are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Estates'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested financing application resource
            was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/estates/{estateId}:
    get:
      summary: Get a specific mortgage property.
      description: Delivers detailed information for mortgage property by it's id.
      operationId: getEstateById
      tags:
      - financing-application
      parameters:
      - $ref: '#/components/parameters/estate-id'
      - $ref: '#/components/parameters/financing-application-id'
      responses:
        '200':
          description: Requested mortgage property is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Estate'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested mortgage property resource
            was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/venture:
    get:
      summary: Get financing venture
      description: Delivers detailed information about the financing venture associated
        to this submission package.
      operationId: getVentureByFinancingApplicationId
      tags:
      - financing-application
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      responses:
        '200':
          description: Requested financing ventureis returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancingVenture'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/consultation:
    get:
      summary: Get financing consultation
      description: Delivers detailed information about the consultation associated
        to this submission package.
      operationId: getConsultationByFinancingApplicationId
      tags:
      - financing-application
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      responses:
        '200':
          description: Requested financing consultation returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consultation'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/financial-standings:
    get:
      summary: Get applicants financial standings
      description: Delivers detailed information about the applicants financial standings
        associated to this submission package.<br> Including periodical income, expenses,
        general equity and debts
      operationId: getFinanceStandingsByFinancingApplicationId
      tags:
      - financing-application
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      - $ref: '#/components/parameters/financial-standing-filter'
      - $ref: '#/components/parameters/embed'
      responses:
        '200':
          description: Requested applicant financial standings are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialStandings'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/applicants/{applicantId}/financial-standings:
    get:
      summary: Get applicant financial standings
      description: Delivers detailed information about an applicant financial standings
        associated to this submission package.<br> Including periodical income, expenses,
        general equity and debts
      operationId: getFinanceStandingsForApplicant
      tags:
      - financing-application
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      - $ref: '#/components/parameters/applicant-id'
      - $ref: '#/components/parameters/financial-standing-filter'
      - $ref: '#/components/parameters/embed'
      responses:
        '200':
          description: Requested applicant financial standings are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialStandings'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/financial-standings/{financialStandingId}:
    get:
      summary: Get a specific financial standing
      description: Delivers detailed information about a specific financial standing
        associated to this submission package.<br> Including periodical income, expenses,
        general equity and debts
      operationId: getFinanceStandingsById
      tags:
      - financing-application
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      - $ref: '#/components/parameters/financial-standing-id'
      responses:
        '200':
          description: Requested applicant financial standings are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialStanding'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/financial-standings/existing-loans/{debtId}:
    get:
      summary: Get a specific existing loan.
      description: Delivers detailed information for existing loan by it's id.
      operationId: getExistingLoanById
      tags:
      - financing-application
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      - $ref: '#/components/parameters/debt-id'
      responses:
        '200':
          description: Requested existing loan is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExistingLoanDebt'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested existing morgage resource
            was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/submissions/protocol:
    get:
      summary: Delivers all submissions protocol for a provider
      description: Delivers a collection of submission protocol for a specific provider
        filtered by the date of protocol.<p> *By Default*, we will return the first
        *20* matching records. However, this is not a hard limitation! a parameter
        called `limit` can be used to tell the API how many records you want to return
        all at once *(max 40)*.<p> To get further matching records, a parameter called
        `after` or `before` can be used to tell the API the start of each page using
        specified cursor.<p> To navigate through the query result, a reference to
        the following navigations are included in the response *(next, prev, first,
        last, self)*.
      operationId: getSubmissionsProtocol
      tags:
      - protocol
      parameters:
      - $ref: '#/components/parameters/since'
      - $ref: '#/components/parameters/until'
      - $ref: '#/components/parameters/protocol-type-filter'
      - $ref: '#/components/parameters/sbms-protocol-limit'
      - $ref: '#/components/parameters/cursor-after'
      - $ref: '#/components/parameters/cursor-before'
      - $ref: '#/components/parameters/embed'
      responses:
        '200':
          description: A paged array of submissions protocol
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionProtocol'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/submissions/{submissionId}/protocol:
    get:
      summary: Get protocol for a specific submission
      description: Delivers detailed information about protocol associated with a
        specific submission. By default the result will be sorted based on createdAt
        ascending.
      operationId: getProtocolBySubmissionId
      tags:
      - protocol
      parameters:
      - $ref: '#/components/parameters/submission-id'
      - $ref: '#/components/parameters/protocol-type-filter'
      - $ref: '#/components/parameters/sbms-protocol-sort'
      responses:
        '200':
          description: Submission protocol are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Protocol'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/submissions:
    get:
      summary: Delivers all submissions for a provider
      description: Delivers all submissions for a specific provider filtered by the
        date of submission.<p> *By Default*, we will return the first *10* matching
        records. However, this is not a hard limitation! a parameter called `limit`
        can be used to tell the API how many records you want to return all at once
        *(max 10)*.<p> To get further matching records, a parameter called `after`
        or `before` can be used to tell the API the start of each page using specified
        cursor.<p> To navigate through the query result, a reference to the following
        navigations are included in the response *(next, prev, first, last, self)*.
      operationId: getSubmissions
      tags:
      - submissions
      parameters:
      - $ref: '#/components/parameters/since'
      - $ref: '#/components/parameters/until'
      - $ref: '#/components/parameters/bid-id-query'
      - $ref: '#/components/parameters/sbms-limit'
      - $ref: '#/components/parameters/cursor-after'
      - $ref: '#/components/parameters/cursor-before'
      - $ref: '#/components/parameters/embed'
      - $ref: '#/components/parameters/sbms-sort'
      - name: Prefer
        in: header
        required: false
        schema:
          type: string
          enum:
          - return=full
          - return=essential
          example: return=essential
          externalDocs:
            description: Find more info here
            url: https://tools.ietf.org/html/rfc7240
        description: 'Header to anticipate certain behaviors be employed by a server
          while processing a request of clients.<br> Possible values are: <ul> <li>**return=full**
          returns a full set of data which might affect the payload size</li> <li>**return=essential**
          returns a basic set of data which provide a basic overview of the submission</li>
          </ul> *By Default* only essential submission attributes are returned.<br>
          **Note** This header is considered only when query parameter `embed` is
          set to *True*'
      responses:
        '200':
          description: A paged array of submissions data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submissions'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/submissions/{submissionId}:
    get:
      summary: Get a specific submission
      description: Delivers detailed information about a specific submission.
      operationId: getSubmissionById
      tags:
      - submissions
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      - $ref: '#/components/parameters/submission-id'
      - $ref: '#/components/parameters/embed'
      - name: Prefer
        in: header
        required: false
        schema:
          type: string
          enum:
          - return=essential
          - return=full
          example: return=full
          externalDocs:
            description: Find more info here
            url: https://tools.ietf.org/html/rfc7240
        description: Header to anticipate certain behaviors be employed by a server
          while processing a request of clients. <br> *By Default* Essential resource
          attributes are returned.<br> **Note** This header is only consider in considered
          when query parameter `embed` is set to *True*
      responses:
        '200':
          description: Request submission is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submission'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
    patch:
      summary: Patch a specific submission.
      operationId: patchSubmission
      tags:
      - submissions
      parameters:
      - $ref: '#/components/parameters/submission-id'
      - $ref: '#/components/parameters/financing-application-id'
      requestBody:
        description: Patch for Submission according to <a href="https://tools.ietf.org/html/rfc6902">RFC
          6902</a>.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PatchSubmissionOperation'
      responses:
        '202':
          description: The request has been accepted for processing, but the processing
            has not been yet completed.
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/submissions/{submissionId}/commands:
    post:
      summary: Modify an existing submission
      description: |
        EN: Create an command to modify an existing submission.
      operationId: modifySubmission
      tags:
      - submissions
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      - $ref: '#/components/parameters/submission-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifySubmissionCommand'
      responses:
        '201':
          description: Reference to the created resource.
          headers:
            Location:
              schema:
                type: string
                description: |
                  EN: Link to retrieve a specific resource DE: Link zu einer spezifischen Ressource
                example: http://some-domain/some/link/to/somewhere
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandId'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/submissions/{submissionId}/handover-reports:
    get:
      summary: Get handover reports
      description: Delivers the handover reports for a specific submission
      operationId: getHandoverReports
      tags:
      - submissions
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      - $ref: '#/components/parameters/submission-id'
      responses:
        '200':
          description: Requested handover reports are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HandoverReports'
        '202':
          description: Payload is being prepared, try again later
          headers:
            Retry-After:
              schema:
                type: integer
              description: payload is expected to be ready after the specified amout
                of seconds
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/submissions/{submissionId}/handover-reports/{handoverReportName}:
    get:
      summary: Get a specific handover report
      description: Delivers detailed information about a specific handover report.
      operationId: getHandoverReportByName
      tags:
      - submissions
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      - $ref: '#/components/parameters/submission-id'
      - $ref: '#/components/parameters/handover-report-name'
      responses:
        '200':
          description: Requested handover report is returned
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/HandoverReport'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
security:
- BearerAuth: []
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    OtherCapitalFinancing:
      type: object
      required:
      - neededLoan
      allOf:
      - $ref: '#/components/schemas/OwnEstateFinancingNeed'
      - properties:
          neededLoan:
            $ref: '#/components/schemas/OtherCapitalNeededLoan'
    OwnEstateFinancingNeed:
      type: object
      allOf:
      - $ref: '#/components/schemas/FinancingNeed'
      - properties:
          renovationCosts:
            description: |
              EN: Value-conserving actions DE: Werterhaltende Maßnahmen
            allOf:
            - $ref: '#/components/schemas/EuroAmount'
          plannedModernisations:
            $ref: '#/components/schemas/PlannedModernisations'
          reschedulingMortgages:
            description: |
              EN: Mortgage which is to be rescheduled DE: Baufinanzierungen die umgeschuldet werden sollen
            type: array
            items:
              allOf:
              - $ref: '#/components/schemas/ExistingMortgageRef'
    FinancingNeed:
      type: object
      properties:
        additionalCosts:
          $ref: '#/components/schemas/EstateAdditionalCosts'
    EstateAdditionalCosts:
      type: object
      properties:
        inventoryCosts:
          $ref: '#/components/schemas/EuroAmount'
        otherCosts:
          $ref: '#/components/schemas/EuroAmount'
        description:
          type: string
    EuroAmount:
      type: object
      required:
      - value
      properties:
        value:
          type: number
          format: double
    PlannedModernisations:
      type: object
      description: |
        EN: Value-enhancing actions DE: Wertsteigernde Maßnahmen
      properties:
        amount:
          $ref: '#/components/schemas/EuroAmount'
        addedValue:
          $ref: '#/components/schemas/EuroAmount'
        description:
          type: string
        breakdown:
          type: array
          items:
            $ref: '#/components/schemas/PlannedModernisation'
    PlannedModernisation:
      type: object
      required:
      - planedCosts
      properties:
        modernisationTypeAndScope:
          $ref: '#/components/schemas/ModernisationTypeAndScope'
        planedCosts:
          $ref: '#/components/schemas/EuroAmount'
        valueAddingCosts:
          $ref: '#/components/schemas/EuroAmount'
    ExistingMortgageRef:
      type: object
      required:
      - id
      properties:
        _href:
          $ref: '#/components/schemas/ResourceRef'
        id:
          $ref: '#/components/schemas/DebtId'
    OtherCapitalNeededLoan:
      type: object
      required:
      - amount
      properties:
        amount:
          $ref: '#/components/schemas/EuroAmount'
        usage:
          type: string
          description: |
            EN: open ended enum contains other capital needed loan usage, possible values are (OPERATIONAL_COSTS, REPAY_ANOTHER_LOAN, PREPAYMENT_PENALTY, RESIDENTIAL_USE, RENEWABLE_ENERGY, DISBURSMENT_COOWNERS, DISBURSMENT_HEIRS, OTHER, RECONSTRUCTION, BUY, CONSTRUCTION, BUY_CONSTRUCTION, SUPPLEMENTARY_FINANCING) DE: Zusätzlicher Kapitalbedarf (nicht abschließende Aufzählung), z.B. (OPERATIONAL_COSTS, REPAY_ANOTHER_LOAN, PREPAYMENT_PENALTY, RESIDENTIAL_USE, RENEWABLE_ENERGY, DISBURSMENT_COOWNERS, DISBURSMENT_HEIRS, OTHER, RECONSTRUCTION, BUY, CONSTRUCTION, BUY_CONSTRUCTION, SUPPLEMENTARY_FINANCING)
          example: OPERATIONAL_COSTS
          x-extensible-enum:
          - OPERATIONAL_COSTS
          - REPAY_ANOTHER_LOAN
          - PREPAYMENT_PENALTY
          - RESIDENTIAL_USE
          - RENEWABLE_ENERGY
          - DISBURSMENT_COOWNERS
          - DISBURSMENT_HEIRS
          - OTHER
          - RECONSTRUCTION
          - BUY
          - CONSTRUCTION
          - BUY_CONSTRUCTION
          - SUPPLEMENTARY_FINANCING
    RateDetails:
      type: object
      properties:
        rateType:
          $ref: '#/components/schemas/RateDetailsType'
        interestRate:
          $ref: '#/components/schemas/InterestRate'
        payment:
          $ref: '#/components/schemas/RegularPayment'
      discriminator:
        propertyName: rateType
        mapping:
          ANNUITY: '#/components/schemas/AnnuityDetails'
          SUSPENDED_AMORTIZATION: '#/components/schemas/SuspendedAmortizationDetails'
    RateDetailsType:
      type: string
      description: |
        EN: Open ended enum contains possible rates type, possible values are (ANNUITY, SUSPENDED_AMORTIZATION) example: ANNUITY
      x-extensible-enum:
      - ANNUITY
      - SUSPENDED_AMORTIZATION
    InterestRate:
      type: object
      properties:
        nominal:
          $ref: '#/components/schemas/PeriodicalPercentage'
        effective:
          $ref: '#/components/schemas/PeriodicalPercentage'
    PeriodicalPercentage:
      type: object
      required:
      - percentage
      - cycle
      properties:
        percentage:
          $ref: '#/components/schemas/Percentage'
        cycle:
          $ref: '#/components/schemas/Cycle'
    RegularPayment:
      type: object
      properties:
        paymentTime:
          $ref: '#/components/schemas/PaymentTime'
        freePeriod:
          $ref: '#/components/schemas/Duration'
        amount:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        amountAfterFreePeriod:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
    PaymentTime:
      type: string
      description: |
        EN: Open ended enum contains possible payment time types, possible values are (ADVANCE, ARREARS) DE: Mögliche Zahlungszeit-Arten (nicht abschließende Aufzählung), z.B. (ADVANCE=Vorschuss, ARREARS=Rückstand)
      example: ADVANCE
      x-extensible-enum:
      - ADVANCE
      - ARREARS
    Duration:
      type: object
      required:
      - value
      - unit
      properties:
        value:
          type: integer
        unit:
          type: string
          enum:
          - YEARS
          - MONTHS
          - DAYS
    PeriodicalEuroAmount:
      type: object
      required:
      - amount
      - cycle
      properties:
        amount:
          $ref: '#/components/schemas/EuroAmount'
        cycle:
          $ref: '#/components/schemas/Cycle'
    AnnuityDetails:
      type: object
      allOf:
      - $ref: '#/components/schemas/RateDetails'
      - properties:
          rateType:
            type: string
            default: ANNUITY
          amortisationRate:
            $ref: '#/components/schemas/PeriodicalPercentage'
    SuspendedAmortizationDetails:
      type: object
      description: |
        EN: Information on the repayment surrogate in the annuity product DE: Informationen zum Tilgungssurrogat im Annuitätendarlehen
      allOf:
      - $ref: '#/components/schemas/RateDetails'
      - properties:
          rateType:
            type: string
            default: SUSPENDED_AMORTIZATION
          type:
            $ref: '#/components/schemas/SuspendedRepaymentProductType'
          sum:
            $ref: '#/components/schemas/EuroAmount'
          contractSignedWith:
            $ref: '#/components/schemas/ApplicantIdRef'
          contractDuration:
            $ref: '#/components/schemas/Duration'
          upcomingPayments:
            $ref: '#/components/schemas/UpcomingPayments'
          savingBurden:
            $ref: '#/components/schemas/PeriodicalEuroAmount'
          depositValue:
            $ref: '#/components/schemas/EuroAmount'
    SuspendedRepaymentProductType:
      type: string
      description: |
        EN: open ended enum contains type of repayment surrogate, possible values are (DT_KAP_LV, DT_KAP_RV, BRIT_KAP_LV, BRIT_KAP_RV, FONDS_LV, FONDS_RV, FONDS_SPAR, BAU_SPAR, OTHER) DE: Art des Tilgungssurrogats (nicht abschließende Aufzählung), z.B. (DT_KAP_LV, DT_KAP_RV, BRIT_KAP_LV, BRIT_KAP_RV, FONDS_LV, FONDS_RV, FONDS_SPAR, BAU_SPAR, OTHER)
      example: DT_KAP_LV
      x-extensible-enum:
      - DT_KAP_LV
      - DT_KAP_RV
      - BRIT_KAP_LV
      - BRIT_KAP_RV
      - FONDS_LV
      - FONDS_RV
      - FONDS_SPAR
      - BAU_SPAR
      - OTHER
    ApplicantIdRef:
      type: object
      description: |
        EN: Id of the applicant DE: ID des Antragstellers
      properties:
        _href:
          $ref: '#/components/schemas/ResourceRef'
        applicantId:
          $ref: '#/components/schemas/ApplicantId'
    UpcomingPayments:
      type: object
      description: |
        EN: Upcoming payments for repayment surrogate product DE: Kosten für das Tilgungssurrogat in den Folgejahren
      properties:
        upcomingFees:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        closingFee:
          description: |
            EN: Acquisition fee for the repayment surrogate product DE: Kaufgebühr für das Tilgungssurrogat
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        paymentDuration:
          $ref: '#/components/schemas/Duration'
    Households:
      type: object
      properties:
        _href:
          $ref: '#/components/schemas/ResourceRef'
        embedded:
          $ref: '#/components/schemas/HouseholdsQuery'
    ResourceRef:
      required:
      - href
      properties:
        href:
          type: string
          description: |
            EN: Link to retrieve a specific resource DE: Link zu einer spezifischen Ressource
          example: http://some-domain/some/link/to/somewhere
    HouseholdsQuery:
      type: array
      items:
        $ref: '#/components/schemas/Household'
      minItems: 1
    Household:
      type: object
      description: |
        EN: Household information DE: Informationen zum Haushalt
      required:
      - applicants
      properties:
        applicants:
          type: array
          items:
            $ref: '#/components/schemas/ApplicantIdRef'
        carsHousehold:
          type: integer
          format: int32
          description: |
            EN: Number of cars in household DE: Anzahl Fahrzeuge im Haushalt
        numberOfChildren:
          type: integer
          format: int32
          description: |
            EN: Number of children in household DE: Anzahl der Kinder im Haushalt
        personsHousehold:
          type: integer
          format: int32
          description: |
            EN: Number of persons in the same household DE: Anzahl der Personen im (gleichen) Haushalt
    Applicant:
      type: object
      description: |
        EN: Personal information of the applicant DE: Informationen über den Antragsteller
      required:
      - id
      - person
      properties:
        id:
          $ref: '#/components/schemas/ApplicantId'
        person:
          $ref: '#/components/schemas/Person'
        contact:
          $ref: '#/components/schemas/Contact'
        address:
          $ref: '#/components/schemas/Address'
        previousAddress:
          $ref: '#/components/schemas/Address'
        birthPlace:
          type: string
          example: London
          description: |
            EN: The birth place of the applicant DE: Geburtsort des Antragstellers
        nationalities:
          type: array
          items:
            $ref: '#/components/schemas/Nationality'
        maritalStatus:
          $ref: '#/components/schemas/MaritalStatus'
        maritalPropertyStatus:
          $ref: '#/components/schemas/MaritalPropertyStatus'
        children:
          type: array
          items:
            $ref: '#/components/schemas/Child'
        creditWorthiness:
          $ref: '#/components/schemas/CreditWorthiness'
        occupationalActivity:
          $ref: '#/components/schemas/Occupation'
        taxId:
          type: string
          description: |
            EN: Tax identification number DE: Steueridentifikationsnummer
        passportID:
          type: string
          example: CY887232L
          description: |
            EN: Passport ID Number DE: Ausweisnummer
        bankAccount:
          $ref: '#/components/schemas/BankAccount'
        financialStandings:
          type: object
          description: |
            EN: All information about financing situation for a specific applicant DE: Alle Informationen über die finanzielle Situation eines spezifischen Antragsstellers
          allOf:
          - $ref: '#/components/schemas/ResourceRef'
    ApplicantId:
      type: object
      properties:
        applicantId:
          type: string
          example: '1'
    Person:
      type: object
      required:
      - name
      properties:
        name:
          $ref: '#/components/schemas/PersonName'
        birthDate:
          $ref: '#/components/schemas/ISODate'
    Contact:
      type: object
      properties:
        phoneNumbers:
          type: array
          items:
            $ref: '#/components/schemas/Phone'
        email:
          type: string
          description: |
            EN: E-Mail of the customer
          format: E-Mail des Antragstellers
          example: primary@example.com
    Address:
      type: object
      required:
      - street
      - houseNumber
      - postalCode
      - city
      - country
      properties:
        street:
          type: string
          example: Mainsteet
          description: |
            EN: Street name of the address DE: Straßenname (Teil der Adresse)
        houseNumber:
          type: string
          example: 42
          description: |
            EN: House number of the address DE: Hausnummer (Teil der Adresse)
        apartmentNumber:
          type: string
          example: 3
          description: |
            EN: Apartment number within the building DE: Wohnungsnummer
        postalCode:
          type: string
          example: 80807
          description: |
            EN: Postal code of the address DE: Postleitzahl (Teil der Adresse)
        city:
          type: string
          example: Munich
          description: |
            EN: City of the address DE: Stadt (Teil der Adresse)
        federalState:
          type: string
          example: DE_BY
          description: |
            EN: Federal state of the address in ISO_3166-2:alpha-2_country_code format DE: Bundesland (Teil der Adresse) nach ISO_3166-2:alpha-2_country_code format
        country:
          type: string
          example: DE
          description: |
            EN: Official alpha-2 country code of the address" DE: Länder-Code (Teil der Adresse) nach ISO 3166 2-stellig
    Nationality:
      type: object
      required:
      - countryCode
      - type
      properties:
        countryCode:
          type: string
          description: |
            EN: The official alpha-2 code (ISO 3166-1) of the first nationality DE: Staatsangehörigkeit des Antragstellers nach Länder-Code (ISO 3166 2-stellig)
          example: DE
          pattern: ^[A-Z]{2}$
        type:
          type: string
          description: |
            open ended enum contains values for the Nationality, possible values are (FIRST, SECOND, THIRD)
          x-extensible-enum:
          - FIRST
          - SECOND
          - THIRD
    MaritalStatus:
      type: string
      description: |
        EN: open ended enum contains values for the marital status, possible values are (SINGLE, MARRIED, REGISTERED_PARTNER, WIDOWED, DIVORCED, SEPARATED) DE: Familienstand des Antragstellers (nicht abschließende Aufzählung). Beispielwerte: (SINGLE = LEDIG, MARRIED = VERHEIRATET, REGISTERED_PARTNERSHIP = EINGETRAGENE LEBENSPARTNERSCHAFT, WIDOWED = VERWITWET, DIVORCED = GESCHIEDEN, SEPARATED=GETRENNT)
      example: SINGLE
      x-extensible-enum:
      - SINGLE
      - MARRIED
      - REGISTERED_PARTNER
      - WIDOWED
      - DIVORCED
      - SEPARATED
    MaritalPropertyStatus:
      type: string
      description: |
        EN: open ended enum contains values for the matrimonial property, possible values are (COMMUNITY_OF_ACQUESTS_AND_GAINS, SEPARATE_PROPERTY, ABSOLUTE_COMMUNITY_PROPERTY) DE: Beschreibung des ehelichen Güterstandes (nicht abschließende Aufzählung). Beispielwerte: (UNKNOWN = UNBEKANNT, JOINT_OWNERSHIP = ZUGEWINNGEMEINSCHAFT, SEPARATION_OF_PROPERTY = GÜTERTRENNUNG, COMMUNITY_OF_PROPERTY = GÜTERGEMEINSCHAFT)
      example: COMMUNITY_OF_ACQUESTS_AND_GAINS
      x-extensible-enum:
      - COMMUNITY_OF_ACQUESTS_AND_GAINS
      - SEPARATE_PROPERTY
      - ABSOLUTE_COMMUNITY_PROPERTY
    Child:
      type: object
      description: |
        EN: Information about a child DE: Informationen über ein Kind des Antragstellers
      properties:
        birthDate:
          $ref: '#/components/schemas/ISODate'
    ISODate:
      description: |
        EN: Date according to <a href="https://tools.ietf.org/html/rfc3339#section-5.6"/> DE: Datum, Syntax nach <a href="https://tools.ietf.org/html/rfc3339#section-5.6"/>
      type: string
      format: date
      example: 2019-12-29T00:00:00Z
    CreditWorthiness:
      type: object
      description: |
        EN: Informations regarding credit worthiness (like Schufa-Score) DE: Informationen über die Kreditwürdigkeit des Antragstellers (z.B. Schufa Score)
      properties:
        negativeWorthiness:
          type: boolean
          description: |
            EN: TRUE, if there is a negative credit worthiness DE: WAHR, wenn die Kreditwürdigkeit negativ ist
        worthinessRating:
          $ref: '#/components/schemas/WorthinessRating'
    WorthinessRating:
      type: object
      required:
      - type
      properties:
        type:
          type: string
          description: |
            EN: open ended enum contains possible Worthiness Ratings, possible values are (SCHUFA)
          x-extensible-enum:
          - SCHUFA
      discriminator:
        propertyName: type
        mapping:
          SCHUFA: '#/components/schemas/SchufaRating'
    SchufaRating:
      type: object
      allOf:
      - $ref: '#/components/schemas/WorthinessRating'
      - properties:
          type:
            type: string
            default: SCHUFA
          ratingStep:
            type: string
            description: |
              EN: open ended enum contains a rating value of the credit worthiness if any, possible values are (A, B, C, D, E, F, G, H, I, J, K, L, M). More information: <a href="https://www.finanzcheck.de/schufa/schufa-score/">Schufa-Score</a> DE: Schufa Rating-Stufe zur Kreditwürdigkeit (nicht abschließende Aufzählung). Zum Beispiel: (A, B, C, D, E, F, G, H, I, J, K, L, M). Mehr Informationen unter: <a href="https://www.meineschufa.de/aktion/faq-scoring">Schufa-Score</a>
            example: A
            x-extensible-enum:
            - A
            - B
            - C
            - D
            - E
            - F
            - G
            - H
            - I
            - J
            - K
            - L
            - M
          score:
            type: number
            minimum: 0
            maximum: 100
            format: float
            example: 97.5
            description: |
              EN: Contains a score value of the credit worthiness if any (e.g. Schufa 97.5 -> very low risk). DE: Schufa Basisscore der Kreditwürdigkeit (z.B.: 97.55 -> sehr geringes Risiko).
    Occupation:
      type: object
      required:
      - type
      properties:
        type:
          $ref: '#/components/schemas/OccupationType'
        crosser:
          type: boolean
          description: |
            EN: TRUE, if applicant is cross-border commuter DE: WAHR, wenn der Antragsteller Grenzgänger ist
        retirementDate:
          $ref: '#/components/schemas/ISODate'
      discriminator:
        propertyName: type
        mapping:
          EMPLOYEE: '#/components/schemas/Employment'
          WORKER: '#/components/schemas/Employment'
          UNEMPLOYED: '#/components/schemas/OtherOccupation'
          OFFICIAL: '#/components/schemas/Employment'
          PARENTAL_LEAVE: '#/components/schemas/Employment'
          FREELANCER: '#/components/schemas/SelfEmployment'
          MARGINALLY_EMPLOYED: '#/components/schemas/Employment'
          STOCKHOLDER: '#/components/schemas/OtherOccupation'
          HOUSE_WIFE_OR_HUSBAND: '#/components/schemas/OtherOccupation'
          INDEPENDENT_GENTLEMAN: '#/components/schemas/OtherOccupation'
          SELF_EMPLOYED_WITH_BALANCING: '#/components/schemas/SelfEmployment'
          SELF_EMPLOYED_WITHOUT_BALANCING: '#/components/schemas/SelfEmployment'
          PENSIONER: '#/components/schemas/OtherOccupation'
          STUDENT: '#/components/schemas/OtherOccupation'
          SOLDIER: '#/components/schemas/Employment'
          EXECUTIVE: '#/components/schemas/Executive'
    OccupationType:
      type: string
      description: |
        EN: open ended enum contains values for the employment types, possible values are (EMPLOYEE, WORKER, UNEMPLOYED, OFFICIAL, PARENTAL_LEAVE, FREELANCER, MARGINALLY_EMPLOYED, STOCKHOLDER, HOUSE_WIFE_OR_HUSBAND, INDEPENDENT_GENTLEMAN, SELF_EMPLOYED_WITH_BALANCING, SELF_EMPLOYED_WITHOUT_BALANCING, PENSIONER, STUDENT, SOLDIER, EXECUTIVE) DE: Beschreibung der Beschäftigungsart (nicht abschließende Aufzählung). Beispielwerte: (EMPLOYEE = ANGESTELLTE/R, WORKER = ARBEITER/IN, UNEMPLOYED = ARBEITSLOSE/R, OFFICIAL = BEAMTE/R, PARENTAL_LEAVE = ELTERNZEIT, FREELANCER = FREIBERUFLER/IN, MARGINALLY_EMPLOYED = GERINFÜGIG BESCHÄFTIGT, STOCKHOLDER  = GESCHÄFTSF. GESELLSCHAFTER/IN, HOUSE_WIFE_OR_HUSBAND = HAUSMANN/FRAU, INDEPENDENT_GENTLEMAN = PRIVATIER/E, SELF_EMPLOYED_WITH_BALANCING = SELBSTSTÄNDIGE/R (bilanzierend), SELF_EMPLOYED_WITHOUT_BALANCING = SELBSTSTÄNDIGE/R (nicht bil.), PENSIONER = RENTNER/IN oder PENSIONÄR/IN, STUDENT = STUDENT/IN, SOLDIER = SOLDAT/IN, EXECUTIVE = VORSTAND/VORSTÄNDIN)
      example: EMPLOYEE
      x-extensible-enum:
      - EMPLOYEE
      - WORKER
      - UNEMPLOYED
      - OFFICIAL
      - PARENTAL_LEAVE
      - FREELANCER
      - MARGINALLY_EMPLOYED
      - STOCKHOLDER
      - HOUSE_WIFE_OR_HUSBAND
      - INDEPENDENT_GENTLEMAN
      - SELF_EMPLOYED_WITH_BALANCING
      - SELF_EMPLOYED_WITHOUT_BALANCING
      - PENSIONER
      - STUDENT
      - SOLDIER
      - EXECUTIVE
    Employment:
      type: object
      description: |
        EN: Informations regarding employment data DE: Informationen über das Beschäftigungsverhältnis des Antragstellers
      allOf:
      - $ref: '#/components/schemas/Occupation'
      - properties:
          jobInformation:
            $ref: '#/components/schemas/JobInformation'
          contractLimitation:
            $ref: '#/components/schemas/ContractLimitation'
    JobInformation:
      type: object
      properties:
        jobDescription:
          type: string
          description: |
            EN: The description/name of the employment DE: Stellenbeschreibung des Antragstellers (notsure -> falls richtig EN anpassen)
        businessLine:
          $ref: '#/components/schemas/BusinessLine'
        employer:
          type: string
          description: |
            EN: The name of the employer DE: Name des Auftraggebers
        startDate:
          $ref: '#/components/schemas/ISODate'
    BusinessLine:
      type: string
      description: |
        EN: open ended enum contains alues for the business line, possible values are (AGRICULTURE, CAR_DEALER, CAR_REPAIR, CHURCH, CONSTRUCTION_INDUSTRY, COURIER_SERVICE, DATING_SERVICE, EDUCATION, ENERGY, EROTIC_INDUSTRY, FINANCES, FINANCIAL_SERVICES, FITNESS, GAS_STATION, GASTRONOMY, HANDCRAFT, HEALTH_SERVICE, HOTEL_INDUSTRY, IT_CONSULTING, KIOSK, OTHER, PRODUCTION_AND_INDUSTRY, PUBLIC_SERVICE, REAL_ESTATE, TAXI, TRANSPORT, TRAVEL_AGENCY, WHOLE_AND_RETAIL_SALE) DE: Branche des Antragstellers (nicht abschließende Aufzählung)
      example: AGRICULTURE
      x-extensible-enum:
      - AGRICULTURE
      - CAR_DEALER
      - CAR_REPAIR
      - CHURCH
      - CONSTRUCTION_INDUSTRY
      - COURIER_SERVICE
      - DATING_SERVICE
      - EDUCATION
      - ENERGY
      - EROTIC_INDUSTRY
      - FINANCES
      - FINANCIAL_SERVICES
      - FITNESS
      - GAS_STATION
      - GASTRONOMY
      - HANDCRAFT
      - HEALTH_SERVICE
      - HOTEL_INDUSTRY
      - IT_CONSULTING
      - KIOSK
      - OTHER
      - PRODUCTION_AND_INDUSTRY
      - PUBLIC_SERVICE
      - REAL_ESTATE
      - TAXI
      - TRANSPORT
      - TRAVEL_AGENCY
      - WHOLE_AND_RETAIL_SALE
    ContractLimitation:
      type: object
      required:
      - limited
      properties:
        limited:
          type: boolean
      discriminator:
        propertyName: limited
        mapping:
          true: '#/components/schemas/LimitedContract'
          false: '#/components/schemas/UnlimitedContract'
    LimitedContract:
      type: object
      allOf:
      - $ref: '#/components/schemas/ContractLimitation'
      - properties:
          limited:
            type: boolean
            default: true
          fixedTermEndDate:
            $ref: '#/components/schemas/ISODate'
          fixedTermRenewalCount:
            type: integer
            format: int32
            example: 3
            description: |
              EN: Count of fixed term renewals DE: Anzahl befristeter Verlängerungen
    UnlimitedContract:
      type: object
      allOf:
      - $ref: '#/components/schemas/ContractLimitation'
      - properties:
          limited:
            type: boolean
            default: false
    OtherOccupation:
      type: object
      allOf:
      - $ref: '#/components/schemas/Occupation'
    SelfEmployment:
      type: object
      allOf:
      - $ref: '#/components/schemas/Occupation'
      - properties:
          jobInformation:
            $ref: '#/components/schemas/JobInformation'
          shareHolding:
            $ref: '#/components/schemas/ShareHolding'
          freelancerJobType:
            $ref: '#/components/schemas/FreeLancerJobType'
    ShareHolding:
      description: |
        EN: Shareholding quota of the company DE: Anteilsquote am Unternehmen
      type: object
      properties:
        value:
          type: number
          format: double
          minimum: 0
          maximum: 100
    FreeLancerJobType:
      type: string
      description: |
        EN: open ended enum contains alues for the freelancer job types, possible values are (CARER, AMBORDERLY, ADVOCATE, APOTHECARY, ARCHITECT, PHYSICIAN, UNDERTAKER, ACCOUNTANT, REVISOR, FED_DP_COMMISSIONER, DECORATOR, DIETICIAN, INTERPRET, ERGOTHERAPIST, NUTRITIONIST, GEOGRAPHER, CONSULTANT, IT_CONSULT, FINANCSERV, PHOTOGRAPH, DESIGNER, MIDWIFE, HEALERMASSEUR, HEALER, HISTORIAN, COMPUTER_SPEC, ENGINEER, INSOLVENCY_ADMIN, JOURNALIST, PHYSIOTHER, ORDERLY, NURSE, MUSICIAN, CONSTRUCTOR, THERAPIST, MASSEUR, PARAMEDIC, NOTARY, OPTICIAN, OPERA_SINGER, HR_ADVISR, PSYCHOLOG, PSYCHOTHER, PHYSTHERAP, INTER_DECORATOR, RADIO_ANNOUNCER, EXPERT, TOWN_PLANER, STRUCT_ENG, TAX_ADVISR, TAX_AGENT, VETERINARY, TRANSLATOR, UNDER_ADVISR, AUDITOR, DENTAL_TECH, DENTIST, OTHER) DE: Freiberufliche Tätigkeit des Antragstellers (nicht abschließende Aufzählung)
      example: ARCHITECT
      x-extensible-enum:
      - CARER
      - AMBORDERLY
      - ADVOCATE
      - APOTHECARY
      - ARCHITECT
      - PHYSICIAN
      - UNDERTAKER
      - ACCOUNTANT
      - REVISOR
      - FED_DP_COMMISSIONER
      - DECORATOR
      - DIETICIAN
      - INTERPRET
      - ERGOTHERAPIST
      - NUTRITIONIST
      - GEOGRAPHER
      - CONSULTANT
      - IT_CONSULT
      - FINANCSERV
      - PHOTOGRAPH
      - DESIGNER
      - MIDWIFE
      - HEALERMASSEUR
      - HEALER
      - HISTORIAN
      - COMPUTER_SPEC
      - ENGINEER
      - INSOLVENCY_ADMIN
      - JOURNALIST
      - PHYSIOTHER
      - ORDERLY
      - NURSE
      - MUSICIAN
      - CONSTRUCTOR
      - THERAPIST
      - MASSEUR
      - PARAMEDIC
      - NOTARY
      - OPTICIAN
      - OPERA_SINGER
      - HR_ADVISR
      - PSYCHOLOG
      - PSYCHOTHER
      - PHYSTHERAP
      - INTER_DECORATOR
      - RADIO_ANNOUNCER
      - EXPERT
      - TOWN_PLANER
      - STRUCT_ENG
      - TAX_ADVISR
      - TAX_AGENT
      - VETERINARY
      - TRANSLATOR
      - UNDER_ADVISR
      - AUDITOR
      - DENTAL_TECH
      - DENTIST
      - OTHER
    Executive:
      type: object
      allOf:
      - $ref: '#/components/schemas/Occupation'
      - properties:
          jobInformation:
            $ref: '#/components/schemas/JobInformation'
          contractLimitation:
            $ref: '#/components/schemas/ContractLimitation'
          shareHolding:
            $ref: '#/components/schemas/ShareHolding'
    BankAccount:
      type: object
      description: |
        EN: Bank account data DE: Daten zum Bankaccount
      required:
      - iban
      - accountOwner
      properties:
        iban:
          type: string
          example: DE46500210000010130383
          description: |
            EN: The International Bank Account Number DE: Internationale Bankkontonummer
          pattern: ^[A-Z]{2}[0-9]{3,32}$
        accountOwner:
          type: string
          description: |
            EN: The name of the account owner DE: Name des Kontobesitzers
        bic:
          type: string
          description: |
            EN: The Business Identifier Code DE: Bankleitzahl
          example: INGBDEFF
          pattern: ^[A-Z]{6}[2-9A-Z]{1}[0-9A-Z]{1}([0-9A-Z]{3})?$
        bank:
          type: string
          description: |
            EN: The name of the bank DE: Name der Bank
    FinancingApplicationRef:
      type: object
      required:
      - id
      properties:
        _href:
          $ref: '#/components/schemas/ResourceRef'
        id:
          $ref: '#/components/schemas/FinancingApplicationId'
    FinancingApplicationId:
      description: |
        EN: Financing Application identifier DE: ID des Finanzierungsantrages
      type: object
      properties:
        value:
          type: string
    EstateVendor:
      description: |
        EN: Information about the estate vendor DE: Informationen ueber den Immobilienverkäufer
      type: object
      required:
      - vendorType
      properties:
        vendorType:
          type: string
          description: |
            EN: open ended enum contains type of the vendor, possible values are (PERSON, COMPANY) DE: Art des Immobilienverkäufers (nicht abschließende Aufzählung), z.B. (PERSON, COMPANY)
          example: PERSON
          x-extensible-enum:
          - PERSON
          - COMPANY
        contact:
          $ref: '#/components/schemas/Contact'
        address:
          $ref: '#/components/schemas/Address'
      discriminator:
        propertyName: vendorType
        mapping:
          PERSON: '#/components/schemas/PersonVendor'
          COMPANY: '#/components/schemas/CompanyVendor'
    PersonVendor:
      type: object
      required:
      - person
      allOf:
      - $ref: '#/components/schemas/EstateVendor'
      - properties:
          vendorType:
            type: string
            default: PERSON
          person:
            $ref: '#/components/schemas/Person'
    CompanyVendor:
      type: object
      required:
      - company
      allOf:
      - $ref: '#/components/schemas/EstateVendor'
      - properties:
          vendorType:
            type: string
            default: COMPANY
          company:
            type: string
            description: |
              EN: The name of the estate vendor company DE: Name der Firma, fuer welche der Immobilienverkäufer arbeitet
    RenovateEstateFinancing:
      allOf:
      - $ref: '#/components/schemas/OwnEstateFinancingNeed'
    PeriodicalEuroAmountPerSquareMeter:
      type: object
      required:
      - periodicalAmount
      properties:
        periodicalAmount:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
    Cycle:
      type: string
      description: |
        EN: Open ended enum contains possible cycle values, possible values are (MONTHLY, QUARTERLY, HALF_YEARLY, ANNUAL) DE: Mögliche Zykluswerte (nicht abschließende Aufzählung), z.B. (MONTHLY, QUARTERLY, HALF_YEARLY, ANNUAL)
      example: ANNUAL
      x-extensible-enum:
      - MONTHLY
      - QUARTERLY
      - HALF_YEARLY
      - ANNUAL
    RFC7807Problem:
      type: object
      description: Holds information regarding the returned error
      required:
      - timestamp
      - traceId
      - instance
      - title
      - status
      properties:
        timestamp:
          type: string
          format: date-time
          description: A UTC date-time indicates the error timestamp (https://en.wikipedia.org/wiki/Coordinated_Universal_Time)
        type:
          type: string
          format: uri
          description: URL refers to more information about the error.
          default: about:blank
        title:
          type: string
          description: Error short description
          example: Bad Request
        status:
          type: integer
          format: int32
          description: HTTP status code following standared error codes (https://tools.ietf.org/html/rfc2616#section-10)
          example: 400
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
        detail:
          type: string
          description: Detailed description for the returned error
          example: JSON parse error
        traceId:
          type: string
          description: Unique trace id for problematic request
          example: avx1234asd
        instance:
          type: string
          format: uri
          description: Path of requested resource
        violations:
          type: array
          description: Collection of the invalid content of the request
          items:
            $ref: '#/components/schemas/Violation'
    Violation:
      description: Description of the invalid field value
      type: object
      properties:
        field:
          type: string
          description: Invalid field name
          example: customer.name
        message:
          type: string
          description: Description of the invalid field value
          example: must be greater than or equal to 0
    ModernisationTypeAndScope:
      type: object
      required:
      - modernisationType
      properties:
        modernisationType:
          $ref: '#/components/schemas/ModernisationType'
        modernisationScope:
          $ref: '#/components/schemas/ModernisationScope'
    ModernisationType:
      type: string
      description: |
        EN: open ended enum contains types of modernisation, possible values are (ELECTRIC, FASSADE, FLOOR_PLAN, FLOORING, HEATING, INSTALLATION, INSULATION, ROOF, SANITARY, WINDOW, OTHER) DE: Typ der Modernisierung (nicht abschließende Aufzählung), z.B. (ELECTRIC, FASSADE, FLOOR_PLAN=Raumaufteilung, FLOORING=Bodenbeläge, HEATING, INSTALLATION, INSULATION=Wärmedämmung, ROOF, SANITARY=Sanitärobjekte, WINDOW, OTHER)
      example: ELECTRIC
      x-extensible-enum:
      - ELECTRIC
      - FASSADE
      - FLOOR_PLAN
      - FLOORING
      - HEATING
      - INSTALLATION
      - INSULATION
      - ROOF
      - SANITARY
      - WINDOW
      - OTHER
    ModernisationScope:
      type: string
      description: |
        EN: open ended enum contains scope of the modernisation, possible values are (COMPLETE, PARTIAL, UNKNOWN) DE: Umfang der Modernisierung (nicht abschließende Aufzählung), z.B. (COMPLETE=komplett, PARTIAL=teilweise, UNKNOWN=unbekannt) Anmerkung: Woher bekommen wir diese Info? Habe im BO nichts gefunden
      example: COMPLETE
      x-extensible-enum:
      - COMPLETE
      - PARTIAL
      - UNKNOWN
    Advisor:
      type: object
      description: |
        EN: Information about the advisor DE: Informationen über den Berater
      required:
      - advisorId
      - advisorCompany
      properties:
        advisorId:
          $ref: '#/components/schemas/AdvisorId'
        advisorCompany:
          description: |
            EN: Company involved in the brokerage process DE: An der Vermittlung beteiligte Firma
          allOf:
          - $ref: '#/components/schemas/CompanyAdvisor'
        responsiblePersons:
          description: |
            EN: Persons responsible for the brokerage DE: Für die Vermittlung zuständige Personen
          type: array
          items:
            $ref: '#/components/schemas/ResponsiblePerson'
    AdvisorId:
      type: object
      required:
      - value
      properties:
        value:
          type: string
    CompanyAdvisor:
      type: object
      properties:
        companyName:
          type: string
          description: |
            EN: The name of the advisors company DE: Name der Firma für welche der Berater arbeitet
        companyAddress:
          type: object
          description: |
            EN: Address of the company DE: Adresse des Unternehmens
          allOf:
          - $ref: '#/components/schemas/Address'
        regulatoryAuthorities:
          description: |
            EN: Responsible supervisory authority DE: Zuständige Aufsichtsbehörde
          allOf:
          - $ref: '#/components/schemas/RegulatoryAuthority'
    RegulatoryAuthority:
      description: |
        EN: Responsible supervisory authority of the company DE: Zuständige Aufsichtsbehörde der Firma
      type: object
      properties:
        legalBasis:
          type: string
          description: |
            EN: Open ended enum contains the relevant legal norm, possible values are (34_C_GEWO, 34_I_GEWO) DE: Relevante Rechtsnorm (nicht abschließende Aufzählung), z.B. (34_C_GEWO, 34_I_GEWO siehe auch (https://www.gesetze-im-internet.de/gewo/))
          x-extensible-enum:
          - 34_C_GEWO
          - 34_I_GEWO
        name:
          description: |
            EN: Name of the responsible supervisory authority DE: Name der Aufsichtsbehörde.
          type: string
        addressSummary:
          description: |
            EN: Address of the responsible supervisory authority DE: Adresse der Aufsichtsbehörde.
          type: string
        url:
          type: string
          description: |
            EN: Website of the responsible supervisory authority DE: Internetseite der Aufsichtsbehrde.
    ResponsiblePerson:
      type: object
      required:
      - type
      - personName
      properties:
        type:
          type: string
          description: |
            EN: Open ended enum contains the role of the responsible person , possible values are (PROCESSOR, MANAGER) DE: Rolle der zuständigen Person (nicht abschließende Aufzählung), z.B. (PROCESSOR=Ansprechpartner, MANAGER=Führungskraft)
          x-extensible-enum:
          - PROCESSOR
          - MANAGER
        personName:
          $ref: '#/components/schemas/PersonName'
        contact:
          $ref: '#/components/schemas/Contact'
    PersonName:
      type: object
      required:
      - gender
      - firstName
      - lastName
      properties:
        gender:
          type: string
          description: |
            EN: gender of the person DE: Geschlecht der Person
          enum:
          - M
          - F
        title:
          type: string
          description: |
            EN: open ended enum contains possible title values, possible values are (DR, PH_D, PD_DR, PROF, PROF_DR) DE: Akademischer Titel des Antragstellers (nicht abschließende Aufzählung). Zum Beispiel: (DR, PH_D, PD_DR, PROF, PROF_DR)
          example: DIPL_ING
          x-extensible-enum:
          - DR
          - PH_D
          - PD_DR
          - PROF
          - PROF_DR
        firstName:
          type: string
          description: |
            EN: First name of the person DE: Vorname der Person
        lastName:
          type: string
          description: |
            EN: Last name of the person DE: Nachname der Person
        maidenName:
          type: string
          description: |
            EN: Maiden name of the person DE: Geburtsname der Person
    FinancingApplicationCreationCommandResponse:
      type: object
      required:
      - id
      - financingApplicationRef
      properties:
        id:
          $ref: '#/components/schemas/CommandId'
        financingApplicationRef:
          $ref: '#/components/schemas/FinancingApplicationRef'
    CommandId:
      type: object
      properties:
        value:
          type: string
    AdditionalInfo:
      type: object
      description: |
        EN: Additional Information as key-value pairs DE: Zusätzliche Informationen als Schlüssel-Wert Paar
      properties:
        key:
          type: string
        value:
          type: string
    Estates:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EstateItem'
          minItems: 1
    EstateItem:
      type: object
      required:
      - estateId
      - type
      properties:
        ref:
          $ref: '#/components/schemas/EstateRef'
        type:
          $ref: '#/components/schemas/PropertyType'
        embedded:
          $ref: '#/components/schemas/Estate'
    EstateRef:
      type: object
      required:
      - estateId
      properties:
        _href:
          $ref: '#/components/schemas/ResourceRef'
        estateId:
          $ref: '#/components/schemas/EstateId'
    EstateId:
      type: object
      required:
      - value
      description: |
        EN: ID of the estate DE: ID eines Objektes
      properties:
        value:
          type: string
    PropertyType:
      type: string
      description: |
        EN: open ended enum contains property type details, possible values are (APARTMENT, DETACHED_HOUSE, SEMI_DETACHED_HOUSE, TWO_FAMILY_HOUSE, END_TERRACE_HOUSE, MID_TERRACE_HOUSE, APARTMENT_BUILDING, RESIDENTIAL_AND_COMMERCIAL_BUILDING, PROPERTY) DE: Art des Gebäudes (nicht abschließende Aufzählung), z.B. (APARTMENT=Wohnung, DETACHED_HOUSE=Einfamilienhaus, SEMIDETACHED_HOUSE=Doppelhaushälfte, DUPLEX_HOUSE=Zweifamilienhaus, TOWNHOUSE_CORNER=Reiheneckhaus, TOWNHOUSE_CENTER=Reihenmittelhaus, APARTMENT_HOUSE=Mehrfamilienhaus, RES_OFFICE_HOUSE=Wohn_und_Geschäftshaus, PLOT=nur_Grundstueck)
      example: APARTMENT
      x-extensible-enum:
      - APARTMENT
      - DETACHED_HOUSE
      - SEMI_DETACHED_HOUSE
      - TWO_FAMILY_HOUSE
      - END_TERRACE_HOUSE
      - MID_TERRACE_HOUSE
      - APARTMENT_BUILDING
      - RESIDENTIAL_AND_COMMERCIAL_BUILDING
      - PROPERTY
      - COMMERCIAL_PROPERTY
    Estate:
      type: object
      required:
      - id
      - type
      - address
      properties:
        id:
          $ref: '#/components/schemas/EstateId'
        type:
          $ref: '#/components/schemas/PropertyType'
        address:
          $ref: '#/components/schemas/Address'
        propertyRegister:
          description: |
            EN: Information on the entries in the land register DE: Informationen zu den Einträgen im Grundbuchblatt
          allOf:
          - $ref: '#/components/schemas/PropertyRegister'
        location:
          $ref: '#/components/schemas/PropertyLocation'
        leaseInfo:
          $ref: '#/components/schemas/LeaseInfo'
        existingMortgages:
          type: array
          items:
            $ref: '#/components/schemas/ExistingMortgageRef'
        description:
          type: string
      discriminator:
        propertyName: type
        mapping:
          APARTMENT: '#/components/schemas/Apartment'
          DETACHED_HOUSE: '#/components/schemas/House'
          SEMI_DETACHED_HOUSE: '#/components/schemas/House'
          TWO_FAMILY_HOUSE: '#/components/schemas/House'
          END_TERRACE_HOUSE: '#/components/schemas/House'
          MID_TERRACE_HOUSE: '#/components/schemas/House'
          APARTMENT_BUILDING: '#/components/schemas/House'
          RESIDENTIAL_AND_COMMERCIAL_BUILDING: '#/components/schemas/House'
          PROPERTY: '#/components/schemas/Plot'
          COMMERCIAL_PROPERTY: '#/components/schemas/Plot'
    PropertyRegister:
      description: |
        EN: Information according to the property / land register (hereinafter referred to as land register) DE: Informationen entsprechend dem [Grundbuchblatt](http://www.gesetze-im-internet.de/gbvfg/BJNR706370935.html#BJNR706370935BJNG000402307)
      type: object
      required:
      - cover
      properties:
        cover:
          description: |
            EN: General information on the land register (title of land register sheet) DE: Allgemeine Information zum Grundbuchblatt (Aufschrift des Grundbuchblattes)
          allOf:
          - $ref: '#/components/schemas/RegisterCover'
        inventories:
          description: |
            EN: Land and porperty (inventory of the land register sheet) DE: Grundstück und Eigentum (Bestandsverzeichnis des Grundbuchblattes)
          type: array
          items:
            $ref: '#/components/schemas/PropertiesRegisterInventory'
        owner:
          description: |
            EN: Current owners (first section of the land register sheet) DE: Derzeitige Eigentümer (Erste Abteilung des Grundbuchblattes)
          type: array
          items:
            $ref: '#/components/schemas/PropertyRegisterOwnerEntry'
        restrictions:
          description: |
            EN: Burdens and restrictions (second section of the land register sheet) DE: Lasten und Beschränkungen (Zweite Abteilung des Grundbuchblattes)
          type: array
          items:
            $ref: '#/components/schemas/PropertyRegisterRestriction'
        mortgages:
          description: |
            EN: Mortgages, land charges, annuity charges (third section of the land register sheet) DE: Hypotheken, Grundschulden, Rentenschulden (Dritte Abteilung)
          type: array
          items:
            $ref: '#/components/schemas/PropertyRegisterMortgage'
    PropertyLocation:
      description: |
        EN: Information about the location DE: Informationen über die Lage des Gebäudes
      type: object
      properties:
        neighbourhood:
          $ref: '#/components/schemas/Neighbourhood'
        negativeEffectsInNeighbourhood:
          type: array
          example: |
            EN: Lies in close distance of a highway DE: Liegt in unmittelbarer Nähe einer Autobahn
          items:
            type: string
        locationInhabitants:
          description: |
            EN: Total of inhabitants DE: Einwohnerzahl
          allOf:
          - $ref: '#/components/schemas/Inhabitants'
    Neighbourhood:
      type: string
      description: |
        EN: open ended enum contains neighbourhood details, possible values are (RESIDENTIAL, COMMERCIAL, MIXED, INDUSTRIAL, OUTSIDE) DE: Umgebung (nicht abschließende Aufzählung), z.B. (RESIDENTIAL_COMPLETE=reines_Wohngebiet, COMMERCIAL_MAINLY=ueberwiegend_Gewerbegebiet, MIXED=Mischgebiet, INDUSTRIAL=Industriegebiet, OUTSIDE_CITY=Einzellage_außerhalb_des_Ortes)
      example: RESIDENTIAL
      x-extensible-enum:
      - RESIDENTIAL
      - COMMERCIAL
      - MIXED
      - INDUSTRIAL
      - OUTSIDE
    Inhabitants:
      type: string
      description: |
        EN: open ended enum contains umber of inhabitants in the city, possible values are (UP_TO_1000, UP_TO_10000, UP_TO_50000, UP_TO_100000, UP_TO_200000, UP_TO_500000, UP_TO_1000000, MORE_THEN_1000000) DE: Anzahl Einwohner im Ort (nicht abschließende Aufzählung), z.B. (UP_TO_1000, UP_TO_10000, UP_TO_50000, UP_TO_100000, UP_TO_200000, UP_TO_500000, UP_TO_1000000, MORE_THEN_1000000)
      example: UP_TO_1000
      x-extensible-enum:
      - UP_TO_1000
      - UP_TO_10000
      - UP_TO_50000
      - UP_TO_100000
      - UP_TO_200000
      - UP_TO_500000
      - UP_TO_1000000
      - MORE_THEN_1000000
    LeaseInfo:
      type: object
      description: |
        EN: Estate leasehold information DE: Informationen über ein Erbbaurecht
      required:
      - leasehold
      properties:
        leasehold:
          description: |
            EN: Leasehold DE: Erbbaurecht
          type: boolean
      discriminator:
        propertyName: leasehold
        mapping:
          true: '#/components/schemas/LeaseHold'
          false: '#/components/schemas/NoLeaseHold'
    LeaseHold:
      type: object
      allOf:
      - $ref: '#/components/schemas/LeaseInfo'
      - properties:
          leasehold:
            type: boolean
            default: true
          leaseholdEndingDate:
            $ref: '#/components/schemas/ISODate'
          leaseholdStandstill:
            description: |
              EN: Leasehold Declaration of standstill DE: Erbbaurecht Stillhalteerklärung
            type: boolean
          lessorType:
            $ref: '#/components/schemas/LessorType'
          salesAllowance:
            description: |
              EN: Pre-emption right DE: Vorkaufsrecht bei Erbau
            type: boolean
          subOrdination:
            description: |
              EN: Subordination (Resignation of priority) DE: Rangruecktritt
            type: boolean
    LessorType:
      type: string
      description: |
        EN: open ended enum contains building lease owner, possible values are (CHURCH, CITY, INDIVIDUAL, COMPANY, OTHER) DE: Erbbaurechtgeber (nicht abschließende Aufzählung)
      example: CHURCH
      x-extensible-enum:
      - CHURCH
      - CITY
      - INDIVIDUAL
      - COMPANY
      - OTHER
    NoLeaseHold:
      type: object
      allOf:
      - $ref: '#/components/schemas/LeaseInfo'
      - properties:
          leasehold:
            type: boolean
            default: false
    Apartment:
      type: object
      allOf:
      - $ref: '#/components/schemas/RealEstate'
      - properties:
          rating:
            $ref: '#/components/schemas/RealEstateRating'
          numberOfApartmentsPerResidence:
            description: |
              EN: Total number of apartments within the whole residence building DE: Anzahl der Wohnungen im gesamten Wohnhaus
            type: integer
            format: int32
          apartmentsPerEntrance:
            description: |
              EN: Apartments per building entrance (staircase) DE: Anzahl der Wohnungen pro Hausaufgang
            type: integer
            format: int32
          apartmentsPerBuilding:
            description: |
              EN: Apartments per building DE: Anzahl der Wohnungen pro Haus
            type: integer
            format: int32
          apartmentsPerDivision:
            description: |
              EN: Apartments per apartment declaration of division DE; Anzahl Wohnung pro Teilungserklärung
            type: integer
            format: int32
          apartmentFloor:
            $ref: '#/components/schemas/ApartmentFloor'
          specialCharacteristics:
            $ref: '#/components/schemas/SpecialRealEstateCharacteristics'
    RealEstate:
      type: object
      allOf:
      - $ref: '#/components/schemas/Estate'
      - properties:
          originalPurchase:
            description: |
              EN: Information about the original purchase DE: Informationen zum urspruenglichem Kauf der Immobilie
            allOf:
            - $ref: '#/components/schemas/OriginalPurchase'
          building:
            $ref: '#/components/schemas/Building'
          condition:
            $ref: '#/components/schemas/RealEstatePropertyCondition'
          furnishing:
            description: |
              EN: Assesment of the equipment of the porperty (e.g. used floor etc.) DE: Beurteilung der Austattung der Immobilie (Einflussfaktoren sind z. B. verwendete Böden, etc.)
            allOf:
            - $ref: '#/components/schemas/Furnishing'
          parkingSpaces:
            description: |
              EN: Parking spaces and garages of the property DE: Stellplätze und Garagen der Immobilie
            type: array
            items:
              $ref: '#/components/schemas/ParkingSpace'
          existingModernisations:
            $ref: '#/components/schemas/ExistingModernisations'
          area:
            $ref: '#/components/schemas/AreaInfo'
          rent:
            $ref: '#/components/schemas/RentInfo'
    OriginalPurchase:
      type: object
      properties:
        price:
          description: |
            EN: Initial purchase price DE: Urspruenglicher Kaufpreis
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        year:
          description: |
            EN: Year of payment / Year of completion DE: Jahr des Kaufes / der Fertigstellung
          allOf:
          - $ref: '#/components/schemas/Year'
    Year:
      type: object
      required:
      - value
      properties:
        value:
          type: string
          format: date-fullyear
          example: 2019
          description: |
            EN: Date-fullyear format following ISO8601 <a href="<a href="https://tools.ietf.org/html/rfc6902">RFC 6902</a>">ISO8601</a> DE: Datum-Volljahr Format nach ISO8601 <a href="<a href="https://tools.ietf.org/html/rfc6902">RFC 6902</a>">ISO8601</a>
    Building:
      type: object
      description: |
        EN: Information about the building DE: Informationen über das (zu finanzierende) Gebäude
      properties:
        construction:
          $ref: '#/components/schemas/Construction'
        yearOfConstruction:
          description: |
            EN: Year of construction DE: Baujahr
          allOf:
          - $ref: '#/components/schemas/Year'
        lift:
          description: |
            EN: Existing elevator DE: vorhandener Aufzug
          type: boolean
        stories:
          description: |
            EN: Number of floors (without basement/attic) DE: Anzahl der Vollgeschosse (ohne Keller/Dachboden)
          type: integer
          format: int32
        buildingVolume:
          $ref: '#/components/schemas/CubicMeter'
        prefabrication:
          $ref: '#/components/schemas/Prefabrication'
    Construction:
      type: string
      description: |
        EN: open ended enum contains construction of the property, possible values are (SOLID, CONCRETE_SLAB, WOOD_STAND, WOOD, TIMBER_FRAMING, LOG_BUILDING, COB, OTHER) DE: Bauweise des Gebäudes (nicht abschließende Aufzählung), z.B. (MASSIVE=Massivbauweise, PREFABRICATED=Plattenbauweise, WOOD_FRAME=Holzständerbauweise, WOOD=Holzbauweise, HALF_TIMBERED=Fachwerkbauweise, LOG_BUILDING=Blockhausbauweise, LOAM=Lehmbauweise
      example: SOLID
      x-extensible-enum:
      - SOLID
      - CONCRETE_SLAB
      - WOOD_STAND
      - WOOD
      - TIMBER_FRAMING
      - LOG_BUILDING
      - COB
      - OTHER
    CubicMeter:
      type: object
      description: |
        EN: Specification in cubic metres DE: Angabe in Kubikmetern
      required:
      - value
      properties:
        value:
          type: number
          format: double
    Prefabrication:
      type: string
      description: |
        EN: open ended enum contains special construction design, possible values are (NO_SPECIFICS, PREFABRICATED_HOUSE, GROW_HOUSE, SELF_BUILD_HOUSE) DE: Besonderheiten der Bauart (nicht abschließende Aufzählung), z.B (NORMAL=keine_Besonderheiten, PREFABRICATED_Fertighaus, BAREBONES_HOUSE_Ausbauhaus, CONSTRUCTION_KIT_Bausatzhaus)
      example: NO_SPECIFICS
      x-extensible-enum:
      - NO_SPECIFICS
      - PREFABRICATED_HOUSE
      - GROW_HOUSE
      - SELF_BUILD_HOUSE
    RealEstatePropertyCondition:
      type: string
      description: |
        EN: open ended enum contains general condition of the real estate, possible values are (IN_TOTAL_RENOVATION_NEED, IN_EXTENSIVE_MODERNISATION_NEEED, IN_RENOVATION_NEED, IN_MODERNISATION_NEED, WELL_KEPT, AS_NEW) DE: Zustand des Gebäudes (nicht abschließende Aufzählung)
      example: IN_RENOVATION_NEED
      x-extensible-enum:
      - IN_TOTAL_RENOVATION_NEED
      - IN_EXTENSIVE_MODERNISATION_NEEED
      - IN_RENOVATION_NEED
      - IN_MODERNISATION_NEED
      - WELL_KEPT
      - AS_NEW
    Furnishing:
      type: string
      description: |
        EN: open ended enum contains property configuration (furnishing) details, possible values are (SIMPLE, GOOD, VERY_GOOD) DE: Beurteilung der Austattung der Immobilie (nicht abschließende Aufzählung).Einflussfaktoren sind z. B. verwendete Böden, etc
      example: SIMPLE
      x-extensible-enum:
      - SIMPLE
      - GOOD
      - VERY_GOOD
    ParkingSpace:
      type: object
      required:
      - type
      description: |
        EN: Information about the parking space DE: Informationen über den Parkplatz
      properties:
        type:
          type: string
          x-extensible-enum:
          - OUTSIDE_PARKING_SPACE
          - UNDERGOUND_GARAGE
          - DUPLEX_GARAGE
          - CARPORT_GARAGE
          - SEPARATE_GARAGE
          - DOUBLE_GARAGE
        pitchNumber:
          description: |
            EN: Parking Space Number DE: Stellplatznummer
          type: string
        count:
          description: |
            EN: Number of parking spaces of this type DE: Anzahl Parkplätze von diesem Typ
          type: integer
    ExistingModernisations:
      type: object
      description: |
        EN: Complete information about existing modernisations DE: Informationen über durchgefuehrte Modernisierungen
      properties:
        yearOfLastRefurbishment:
          type: object
          description: |
            EN: Year of a the last refurbishment DE: Jahr der letzten Modernisierung
          allOf:
          - $ref: '#/components/schemas/Year'
        yearOfTotalRefurbishment:
          type: object
          description: |
            EN: Year of a completed refurbishment DE: Jahr der Totalsanierung
          allOf:
          - $ref: '#/components/schemas/Year'
        description:
          type: string
        totalCosts:
          $ref: '#/components/schemas/EuroAmount'
        breakdown:
          items:
            $ref: '#/components/schemas/ExistingModernisation'
    AreaInfo:
      type: object
      description: |
        EN: Information about the total residential and useful area DE: Informationen über die gesamte Wohn- und Nutzfläche
      properties:
        areaRented:
          $ref: '#/components/schemas/SquareMeter'
        areaTotal:
          $ref: '#/components/schemas/SquareMeter'
        commercialArea:
          $ref: '#/components/schemas/SquareMeter'
        commercialAreaForOwnUse:
          $ref: '#/components/schemas/SquareMeter'
    SquareMeter:
      type: object
      description: |
        EN: Specification in square metres DE: Angabe in Quadratmetern
      required:
      - value
      properties:
        value:
          type: number
          format: double
    RentInfo:
      type: object
      description: |
        EN: Rent information DE: Informationen über die Vermietung
      properties:
        sustainableRent:
          $ref: '#/components/schemas/PeriodicalEuroAmountPerSquareMeter'
        expectedRent:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        expectedRentCommercial:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        expectedRentResidential:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        garageRent:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
    RealEstateRating:
      description: |
        EN: Rating of a real estate valuation DE: Informationen laut Immobilionbewertung
      type: object
      properties:
        marketValue:
          description: |
            DE: Estimated market value DE: Geschätzter Marktwert
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        marketValueEvaluation:
          description: |
            EN: Market value according to an information source (e.g. Sprengnetter) DE: Marktwert entsprechend einer Infoquelle (z. B. Sprengnetter)
          allOf:
          - $ref: '#/components/schemas/MarketValueEvaluation'
    MarketValueEvaluation:
      type: object
      description: |
        EN: Information about external market value evaluation DE: Informationen über eine externen Marktwert
      required:
      - marketValue
      properties:
        marketValue:
          $ref: '#/components/schemas/EuroAmount'
        evaluationInformation:
          $ref: '#/components/schemas/EvaluationInformation'
    EvaluationInformation:
      type: object
      properties:
        source:
          description: |
            EN: Source for the current market or land value evaluation DE: Infoquelle des aktuellen Marktwert des Gebäudes oder Grundstuecks
          allOf:
          - $ref: '#/components/schemas/StatSource'
        date:
          description: |
            EN: Date of the evaluation DE: Datum der Bewertung
          allOf:
          - $ref: '#/components/schemas/ISODate'
        contact:
          description: |
            EN: Contact information for the evaluation DE: Kontaktinformationen bei Rückfragen zur Bewertung
          allOf:
          - $ref: '#/components/schemas/EvaluationInformationContactData'
    StatSource:
      type: string
      description: |
        EN: open ended enum contains source for the current market or land value evaluation, possible values are (MAP, GSD, EVAL_COM, HVB, IMMOSCOUT, IMMOPOOL, LBS_LOCAL, PLOETZ, IVD_SPIEGEL, BANK_LOCAL, CITY, SPGNET, ING, OTHER) DE: Infoquelle fuer den aktuellen Marktwert des Gebäudes oder Grundstuecks, z.B. (MAP=Bodenrichtwertkarte, GSD, EVAL_COM=Gutachterausschuss, HVB, IMMOSCOUT, IMMOPOOL, LBS_LOCA=LBS_Zweigstelle, PLOETZ, IVD_SPIEGEL, BANK_LOCAL=Bank_vor_Ort, CITY, SPGNET=Sprengnetter, ING=ING_Objektbewertung, OTHER)
      example: MAP
      x-extensible-enum:
      - MAP
      - GSD
      - EVAL_COM
      - EXPERT
      - HVB
      - IMMOSCOUT
      - IMMOPOOL
      - LBS_LOCAL
      - PLOETZ
      - IVD_SPIEGEL
      - BANK_LOCAL
      - CITY
      - SPGNET
      - ING
      - OTHER
      - BHW
      - RDM_SPIEGEL
    EvaluationInformationContactData:
      type: object
      properties:
        description:
          example: Gemeinde Musterstadt
          description: |
            EN: Information about the contact.
          type: string
        phone:
          description: |
            EN: Phone number of the contact person for evaluation DE: Telefonnummer des Ansprechspartner für die Bewertung
          type: string
    ApartmentFloor:
      type: string
      description: |
        EN: open ended enum contains position of the apartment in the building, possible values are (BASEMENT, GROUND_FLOOR, UPPER_FLOOR, SECOND_FLOOR, THIRD_FLOOR, FOURTH_FLOOR, FIFTH_FLOOR, SIXTH_FLOOR_OR_HIGHER) DE: Lage des Appartments im Gebäude (nicht abschließende Aufzählung), zum Beispiel: (BASEMENT=Untergeschoss, GROUND_FLOOR=Erdgeschoss, UPPER_FLOOR=Obergeschoss/Erster Stock, SECOND_FLOOR=Zweiter Stock etc.)
      example: BASEMENT
      x-extensible-enum:
      - BASEMENT
      - GROUND_FLOOR
      - UPPER_FLOOR
      - SECOND_FLOOR
      - THIRD_FLOOR
      - FOURTH_FLOOR
      - FIFTH_FLOOR
      - SIXTH_FLOOR_OR_HIGHER
    SpecialRealEstateCharacteristics:
      description: |
        EN: Special use of property DE: Spezielle Nutzung der Immobilie
      type: object
      properties:
        careProperty:
          description: |
            EN: Assisted living DE: Betreutes Wohnen
          type: boolean
        holidayProp:
          description: |
            EN: Holiday property DE: Ferienimmobilie
          type: boolean
        luxury:
          description: |
            EN: Luxury estate DE: Luxusobjekt
          type: boolean
        monumentProtection:
          description: |
            EN: Estate under monument protection DE: Objekt unter Denkmalschutz
          type: boolean
    House:
      type: object
      allOf:
      - $ref: '#/components/schemas/RealEstate'
      - properties:
          rating:
            $ref: '#/components/schemas/HouseRating'
          attic:
            $ref: '#/components/schemas/AtticDetail'
          basement:
            $ref: '#/components/schemas/Basement'
          specialCharacteristics:
            $ref: '#/components/schemas/SpecialHouseCharacteristics'
          separatedByWEG:
            description: |
              EN: Separated based on the WEG law DE: Geteilt nach dem Wohneigentumsgesetz (WEG)
            type: boolean
    HouseRating:
      description: |
        EN: Rating of a house (building and property) DE: Bewertung eines Hauses (Gebäude und Grundstueck)
      type: object
      allOf:
      - $ref: '#/components/schemas/RealEstateRating'
      - properties:
          landValueEvaluation:
            $ref: '#/components/schemas/LandValueEvaluation'
    LandValueEvaluation:
      type: object
      description: |
        EN: Information about land value evaluation DE: Informationen über den Marktwert des Grundstuecks
      required:
      - groundValue
      properties:
        groundValue:
          $ref: '#/components/schemas/EuroAmount'
        evaluationInformation:
          $ref: '#/components/schemas/EvaluationInformation'
    AtticDetail:
      type: string
      description: |
        EN: open ended enum contains attic details, possible values are (DEVELOPED, UPGRADEABLE, NOT_UPGRADEABLE) DE: Details zum Dachgeschoss (nicht abschließende Aufzählung), z.B (DEVELOPED=ausgebaut, UPGRADEABLE=ausbaufähig, NOT_UPGRADEABLE=nicht_ausbaufähig)
      example: DEVELOPED
      x-extensible-enum:
      - DEVELOPED
      - PARTIALY_DEVELOPED
      - UPGRADEABLE
      - NOT_UPGRADEABLE
    Basement:
      type: object
      description: |
        EN: Information about building basement DE: Informationen über den Keller
      properties:
        basementDetail:
          $ref: '#/components/schemas/BasementDetail'
        basementArea:
          $ref: '#/components/schemas/SquareMeter'
    BasementDetail:
      type: string
      description: |
        EN: open ended enum contains basement details, possible values are (DEVELOPED, PARTIALY_DEVELOPED, NONE) DE: Details zum Keller (nicht abschließende Aufzählung), z.B (DEVELOPED=voll_unterkellert, PARTIALY_DEVELOPED=teil_unterkellert, NONE=nicht_unterkellert)
      example: DEVELOPED
      x-extensible-enum:
      - DEVELOPED
      - PARTIALY_DEVELOPED
      - NONE
    SpecialHouseCharacteristics:
      description: |
        EN: Special use of house DE: Spezielle Nutzung des Hauses
      type: object
      allOf:
      - $ref: '#/components/schemas/SpecialRealEstateCharacteristics'
      - properties:
          farm:
            description: |
              EN: Farm DE: Bauernhof
            type: boolean
    Plot:
      type: object
      allOf:
      - $ref: '#/components/schemas/Estate'
      - properties:
          rating:
            $ref: '#/components/schemas/LandValueEvaluation'
    ExistingModernisation:
      type: object
      description: |
        EN: Complete information about existing and planned modernisation DE: Informationen über durchgefuehrte und geplante Modernisierungen
      required:
      - modernisationTypeAndScope
      - modernisationCost
      properties:
        modernisationTypeAndScope:
          $ref: '#/components/schemas/ModernisationTypeAndScope'
        year:
          description: |
            EN: Year of modernisation DE: Jahr der Modernisierung
          allOf:
          - $ref: '#/components/schemas/Year'
        modernisationCost:
          $ref: '#/components/schemas/EuroAmount'
    BuyExistingEstateFinancing:
      type: object
      required:
      - purchasePrice
      allOf:
      - $ref: '#/components/schemas/ForeignEstateFinancingNeed'
      - properties:
          renovationCosts:
            description: |
              EN: Value-conserving actions DE: Werterhaltenden Maßnahmen
            allOf:
            - $ref: '#/components/schemas/EuroAmount'
          plannedModernisations:
            $ref: '#/components/schemas/PlannedModernisations'
          purchasePrice:
            $ref: '#/components/schemas/EuroAmount'
          priceDue:
            $ref: '#/components/schemas/ISODate'
    ForeignEstateFinancingNeed:
      type: object
      required:
      - estateAcquisitionCosts
      allOf:
      - $ref: '#/components/schemas/FinancingNeed'
      - properties:
          estateAcquisitionCosts:
            $ref: '#/components/schemas/EstateAcquisitionCosts'
    EstateAcquisitionCosts:
      type: object
      required:
      - costsNotary
      - purchaseTax
      description: |
        EN: Estate costs DE: Kosten fuer den Grundstueckwerwerb
      properties:
        brokerage:
          $ref: '#/components/schemas/EuroAmount'
        costsNotary:
          $ref: '#/components/schemas/EuroAmount'
        purchaseTax:
          $ref: '#/components/schemas/EuroAmount'
    ConsultationItem:
      type: object
      required:
      - _href
      properties:
        _href:
          $ref: '#/components/schemas/ResourceRef'
        embedded:
          $ref: '#/components/schemas/Consultation'
    Consultation:
      type: object
      required:
      - broker
      properties:
        broker:
          $ref: '#/components/schemas/Advisor'
        subBroker:
          $ref: '#/components/schemas/Advisor'
        informers:
          type: array
          items:
            $ref: '#/components/schemas/Informer'
        recommendation:
          $ref: '#/components/schemas/Recommendation'
    Informer:
      type: object
      description: |
        EN: Information about informer DE: Informationen über den Zuträger
      properties:
        informerId:
          $ref: '#/components/schemas/InformerId'
        externalId:
          type: string
          description: External Informer-ID
        person:
          $ref: '#/components/schemas/PersonName'
        contact:
          $ref: '#/components/schemas/Contact'
        address:
          $ref: '#/components/schemas/Address'
        company:
          type: string
          description: |
            EN: Company of the informer DE: Firma des Zuträgers
    Recommendation:
      type: object
      description: |
        EN: Financing advisor recommendations DE: Empfehlung des Beraters
      properties:
        chefsSuggestion:
          type: boolean
          description: |
            EN: Offer is recommended from the financing advisor DE: Angebot vom Berater empfohlen
        explanation:
          type: string
          description: |
            EN: Explanation of the financing advisor's recommendation DE: Erläuterung zur Empfehlung des Beraters
    Credit:
      type: object
      properties:
        sendContractDate:
          $ref: '#/components/schemas/ISODate'
        signContractDate:
          $ref: '#/components/schemas/ISODate'
        cancelContractDate:
          $ref: '#/components/schemas/ISODate'
        loans:
          type: array
          items:
            $ref: '#/components/schemas/Loan'
          minItems: 1
    Loan:
      type: object
      description: |
        EN: Financial Loan object information DE: Informationen zum Darlehen(-objekt)
      required:
      - id
      - type
      - amount
      - loanPartner
      properties:
        id:
          $ref: '#/components/schemas/LoanId'
        type:
          $ref: '#/components/schemas/LoanType'
        amount:
          $ref: '#/components/schemas/EuroAmount'
        maturity:
          $ref: '#/components/schemas/InterestMaturity'
        specialRepayment:
          $ref: '#/components/schemas/SpecialRepayment'
        payout:
          $ref: '#/components/schemas/PayoutInfo'
        duration:
          $ref: '#/components/schemas/Duration'
        loanPartner:
          $ref: '#/components/schemas/LoanPartnerProcessingUnit'
        financedMortgageProperty:
          $ref: '#/components/schemas/EstateRef'
        contractNumber:
          type: string
          description: |
            EN: Loan number / contract number DE: Darlehensnummer / Vertragsnummer
        commission:
          $ref: '#/components/schemas/CommissionInfo'
      discriminator:
        propertyName: type
        mapping:
          MAIN_LOAN: '#/components/schemas/MainLoan'
          KFW_PROMOTION_LOAN: '#/components/schemas/KfwPromotionLoan'
          AUXILIARY_LOAN: '#/components/schemas/AuxiliaryLoan'
    FinancingVenture:
      type: object
      description: |
        EN: Operational (venture) assets used in the financing process DE: Vermögenswerte, welche (operativ) in die Finanzierung aufgenommen werden sollen
      required:
      - reason
      - mortgageProperty
      properties:
        reason:
          $ref: '#/components/schemas/FinancingApplicationReason'
        mortgageProperty:
          description: |
            EN: The Financing Asset / Property to which the financing process relates DE: Das Beleihungsobjekt/Finanzierungsobjekt auf das sich das Finanzierungsvorhaben bezieht
          allOf:
          - $ref: '#/components/schemas/EstateRef'
        collateralMortgageProperties:
          $ref: '#/components/schemas/CollateralMortgageProperties'
        investEquity:
          $ref: '#/components/schemas/InvestEquity'
        utilization:
          $ref: '#/components/schemas/Utilization'
      discriminator:
        propertyName: reason
        mapping:
          BUY_NEW: '#/components/schemas/FinancingVentureBuyNew'
          BUY_EXISTING: '#/components/schemas/FinancingVentureBuyExisting'
          BUILD: '#/components/schemas/FinancingVentureConstruction'
          REFINANCE: '#/components/schemas/FinancingVentureDebtRescheduling'
          RENOVATE: '#/components/schemas/FinancingVentureRenovation'
          RAISE_CAPITAL: '#/components/schemas/FinancingVentureOtherCapitalFinancing'
    FinancingApplicationReason:
      type: string
      description: |
        EN: Open ended enum contains type of the financing reason, possible values are (BUY_NEW, BUY_EXISTING, BUILD, REFINANCE, RENOVATE, RAISE_CAPITAL) DE: Gruende fuer die Finanzierung (nicht abschließende Aufzählung), z.B. (BUY_NEW, BUY_EXISTING, BUILD, REFINANCE, RENOVATE, RAISE_CAPITAL)
      example: BUY_EXISTING
      x-extensible-enum:
      - BUY_NEW
      - BUY_EXISTING
      - BUILD
      - REFINANCE
      - RENOVATE
      - RAISE_CAPITAL
    CollateralMortgageProperties:
      description: |
        EN: Other properties to be pledged as security DE: Weitere Beleihungsobjekte die als Sicherheit verwendet werden
      type: object
      properties:
        estates:
          type: array
          items:
            $ref: '#/components/schemas/EstateRef'
          minItems: 1
    InvestEquity:
      type: object
      description: |
        EN: Operational (venture) assets used in the financing process
         DE: Vermögenswerte, welche (operativ) in die Finanzierung aufgenommen werden sollen
      properties:
        cash:
          $ref: '#/components/schemas/EuroAmount'
        mortgageSaving:
          $ref: '#/components/schemas/EuroAmount'
        otherEstates:
          $ref: '#/components/schemas/EuroAmount'
        personalContribution:
          $ref: '#/components/schemas/EuroAmount'
        stock:
          $ref: '#/components/schemas/EuroAmount'
        depositPaidInAdvance:
          $ref: '#/components/schemas/EuroAmount'
        landPaidInAdvance:
          $ref: '#/components/schemas/EuroAmount'
        relevantLoans:
          type: array
          items:
            $ref: '#/components/schemas/VentureRelevantLoan'
    VentureRelevantLoan:
      type: object
      required:
      - amount
      - type
      description: |
        EN: Existing loans added to the mortgage
      properties:
        amount:
          $ref: '#/components/schemas/EuroAmount'
        type:
          $ref: '#/components/schemas/VentureRelevantLoanType'
        until:
          $ref: '#/components/schemas/ISODate'
        description:
          type: string
    VentureRelevantLoanType:
      type: string
      description: |
        EN: open ended enum contains existing loan debt type, possible values are (EMPLOYMENT, PRIVATE, MORTGAGE_SAVING_PLAN, PUBLIC, OTHER)
      example: EMPLOYMENT
      x-extensible-enum:
      - EMPLOYMENT
      - PRIVATE
      - MORTGAGE_SAVING_PLAN
      - PUBLIC
      - OTHER
    Utilization:
      type: string
      description: |
        EN: Open ended enum contains utilization of the property, possible values are (SELF_OCCUPIED, PARTLY_RENT_OUT, RENT_OUT) DE: Nutzung des Ojektes (nicht abschließende Aufzählung), z.B. (SELF_OCCUPIED, PARTLY_RENT_OUT, RENT_OUT)
      example: SELF_OCCUPIED
      x-extensible-enum:
      - SELF_OCCUPIED
      - PARTLY_RENT_OUT
      - RENT_OUT
    FinancingVentureBuyNew:
      required:
      - financingNeed
      - financingDetails
      allOf:
      - $ref: '#/components/schemas/FinancingVenture'
      - properties:
          reason:
            type: string
            default: BUY_NEW
          financingNeed:
            $ref: '#/components/schemas/BuyNewEstateFinancing'
          financingDetails:
            $ref: '#/components/schemas/ForeignEstateFinancingDetails'
    BuyNewEstateFinancing:
      type: object
      required:
      - purchasePrice
      allOf:
      - $ref: '#/components/schemas/ForeignEstateFinancingNeed'
      - properties:
          optionalEquipment:
            $ref: '#/components/schemas/EuroAmount'
          purchasePrice:
            $ref: '#/components/schemas/EuroAmount'
          priceDue:
            $ref: '#/components/schemas/ISODate'
    ForeignEstateFinancingDetails:
      type: object
      allOf:
      - $ref: '#/components/schemas/FinancingDetails'
      - properties:
          newOwners:
            description: |
              EN: Owner at the Time of Financing (First Section of the Land Register Page) DE: Eigentuemer zum Zeitpunkt der Finanzierung (Erste Abteilung des Grundbuchblattes)
            type: array
            items:
              $ref: '#/components/schemas/PropertyRegisterOwner'
          saleInfo:
            $ref: '#/components/schemas/SaleInformation'
          vendor:
            $ref: '#/components/schemas/EstateVendor'
    FinancingDetails:
      type: object
      properties:
        payoutDate:
          $ref: '#/components/schemas/ISODate'
        amortisationStartDate:
          $ref: '#/components/schemas/ISODate'
        loanQuota:
          description: |
            DE: Beleihungsauslauf
          allOf:
          - $ref: '#/components/schemas/LoanQuota'
    LoanQuota:
      type: object
      description: |
        EN: Value and percentage for a loan quota DE: Wert und Prozentsatz für die Darlehensquote
      properties:
        type:
          type: string
          description: |
            EN: Open ended enum contains loan quota values, possible values are (CALCULATED, EXTERNAL) DE: Ursprung des Wertes der Darlehensquote (nicht abschließende Aufzählung), z.B. (CALCULATED, EXTERNAL)
          example: CALCULATED
          x-extensible-enum:
          - CALCULATED
          - EXTERNAL
        lendingValue:
          $ref: '#/components/schemas/EuroAmount'
        percentage:
          $ref: '#/components/schemas/Percentage'
        conditional:
          $ref: '#/components/schemas/Percentage'
    PropertyRegisterOwner:
      type: object
      required:
      - type
      properties:
        type:
          type: string
          x-extensible-enum:
          - APPLICANT
          - THIRD_PERSON
      discriminator:
        propertyName: type
        mapping:
          APPLICANT: '#/components/schemas/PropertyRegisterOwnerApplicant'
          THIRD_PERSON: '#/components/schemas/PropertyRegisterOwnerThirdPerson'
    SaleInformation:
      type: object
      description: |
        EN: Sales information for an object DE: Informationen ueber den Objektverkauf
      properties:
        familySale:
          description: |
            EN: Sold within family DE: Familienverkauf
          type: boolean
        forcedSale:
          $ref: '#/components/schemas/ForeclosureSale'
    ForeclosureSale:
      description: |
        EN: Foreclosure sale DE: Zwangsversteigerung
      type: object
      properties:
        previousOwner:
          $ref: '#/components/schemas/PreviousOwner'
        estimatedValue:
          $ref: '#/components/schemas/EuroAmount'
        auction:
          $ref: '#/components/schemas/AuctionInfo'
    PreviousOwner:
      type: string
      description: |
        EN: Open ended enum contains previous owner of the estate, possible values are (THIRD_PERSON, FAMILY_MEMBER) DE: Vorheriger Immobilienbesitzer (nicht abschließende Aufzählung), z.B. (THIRD_PERSON, FAMILY_MEMBER)
      example: THIRD_PERSON
      x-extensible-enum:
      - THIRD_PERSON
      - FAMILY_MEMBER
    AuctionInfo:
      type: object
      description: |
        EN: Information about the estate auction DE: Informationen zur Immobilienauktion
      properties:
        auctionDate:
          $ref: '#/components/schemas/ISODate'
        auctionMaxBid:
          $ref: '#/components/schemas/EuroAmount'
        bidAccepted:
          description: Auction bid already accepted
          type: boolean
    FinancingVentureBuyExisting:
      required:
      - financingNeed
      - financingDetails
      allOf:
      - $ref: '#/components/schemas/FinancingVenture'
      - properties:
          reason:
            type: string
            default: BUY_EXISTING
          financingNeed:
            $ref: '#/components/schemas/BuyExistingEstateFinancing'
          financingDetails:
            $ref: '#/components/schemas/ForeignEstateFinancingDetails'
    FinancingVentureConstruction:
      required:
      - financingNeed
      - financingDetails
      allOf:
      - $ref: '#/components/schemas/FinancingVenture'
      - properties:
          reason:
            type: string
            default: BUILD
          financingNeed:
            $ref: '#/components/schemas/BuildEstateFinancing'
          financingDetails:
            $ref: '#/components/schemas/ForeignEstateFinancingDetails'
    BuildEstateFinancing:
      type: object
      required:
      - landPrice
      - buildCosts
      allOf:
      - $ref: '#/components/schemas/ForeignEstateFinancingNeed'
      - properties:
          buildCosts:
            $ref: '#/components/schemas/EstateBuildingCosts'
          completionDate:
            $ref: '#/components/schemas/ISODate'
    FinancingVentureDebtRescheduling:
      required:
      - financingNeed
      - financingDetails
      allOf:
      - $ref: '#/components/schemas/FinancingVenture'
      - properties:
          reason:
            type: string
            default: REFINANCE
          financingNeed:
            $ref: '#/components/schemas/DebtReschedulingFinancing'
          financingDetails:
            $ref: '#/components/schemas/OwnEstateFinancingDetails'
    DebtReschedulingFinancing:
      type: object
      allOf:
      - $ref: '#/components/schemas/OwnEstateFinancingNeed'
      - properties:
          additionalLoan:
            $ref: '#/components/schemas/EstateAdditionalLoan'
    OwnEstateFinancingDetails:
      type: object
      allOf:
      - $ref: '#/components/schemas/FinancingDetails'
      - properties:
          acquisitionYear:
            description: |
              EN: Year of payment / Year of completion DE: Jahr der Zahlung / Jahr der Fertigstellung
            allOf:
            - $ref: '#/components/schemas/Year'
    FinancingVentureRenovation:
      required:
      - financingNeed
      - financingDetails
      allOf:
      - $ref: '#/components/schemas/FinancingVenture'
      - properties:
          reason:
            type: string
            default: RENOVATE
          financingNeed:
            $ref: '#/components/schemas/RenovateEstateFinancing'
          financingDetails:
            $ref: '#/components/schemas/OwnEstateFinancingDetails'
    FinancingVentureOtherCapitalFinancing:
      required:
      - financingNeed
      - financingDetails
      allOf:
      - $ref: '#/components/schemas/FinancingVenture'
      - properties:
          reason:
            type: string
            default: RAISE_CAPITAL
          financingNeed:
            $ref: '#/components/schemas/OtherCapitalFinancing'
          financingDetails:
            $ref: '#/components/schemas/OwnEstateFinancingDetails'
    CorrespondenceItem:
      type: object
      required:
      - type
      properties:
        type:
          $ref: '#/components/schemas/SubmissionCorrespondenceType'
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        author:
          type: string
      discriminator:
        propertyName: type
        mapping:
          MESSAGE: '#/components/schemas/SubmissionMessage'
          NOTE: '#/components/schemas/SubmissionNote'
    SubmissionCorrespondenceType:
      type: string
      description: |
        EN: Open ended enum contains correspondence types, possible values are (MESSAGE, NOTE) DE: Art der Korrespondenz (nicht abschließende Aufzählung), z.B. (MESSAGE, NOTE)
      example: MESSAGE
      x-extensible-enum:
      - MESSAGE
      - NOTE
    SubmissionMessage:
      type: object
      description: |
        EN: Contains messages related to a specific submission. Messages target a certain recipient DE: Enthält Nachrichten, die sich auf eine bestimmte Einreichung beziehen. Die Nachrichten richten sich an einen bestimmten Empfänger
      allOf:
      - $ref: '#/components/schemas/CorrespondenceItem'
      - properties:
          to:
            type: string
          text:
            type: string
    SubmissionNote:
      type: object
      description: |
        EN: Contains notes related to a specific submission DE: Enthält Notizen in Bezug auf eine bestimmte Einreichung
      allOf:
      - $ref: '#/components/schemas/CorrespondenceItem'
      - properties:
          category:
            type: string
          text:
            type: string
    DebtId:
      type: object
      properties:
        value:
          type: string
    ModifySubmissionCommand:
      type: object
      required:
      - operation
      properties:
        operation:
          type: string
          x-extensible-enum:
          - REVOKE
      discriminator:
        propertyName: operation
        mapping:
          REVOKE: '#/components/schemas/RevokeSubmissionCommand'
    RevokeSubmissionCommand:
      type: object
      required:
      - reason
      - revokedOn
      allOf:
      - $ref: '#/components/schemas/ModifySubmissionCommand'
      - properties:
          operation:
            type: string
            default: REVOKE
          reason:
            type: string
          reasonDescription:
            type: string
          remark:
            type: string
          revokedOn:
            type: string
            format: date-time
    SubmissionProtocol:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SubmissionProtocolItem'
        paging:
          $ref: '#/components/schemas/Paging'
    SubmissionProtocolItem:
      type: object
      properties:
        submission:
          $ref: '#/components/schemas/SubmissionProtocolRefItem'
        protocol:
          $ref: '#/components/schemas/SubmissionProtocolRef'
    SubmissionProtocolRefItem:
      type: object
      allOf:
      - $ref: '#/components/schemas/SubmissionRef'
      - properties:
          legacyId:
            description: |
              EN: Legacy submission id DE: Submission ID (Altsystem)
            type: string
    SubmissionRef:
      type: object
      properties:
        _href:
          $ref: '#/components/schemas/ResourceRef'
        id:
          type: string
          description: |
            EN: Submission id DE: ID der Einreichung
    SubmissionProtocolRef:
      type: object
      properties:
        _href:
          $ref: '#/components/schemas/ResourceRef'
        embedded:
          $ref: '#/components/schemas/EmbeddedSubmissionProtocol'
    EmbeddedSubmissionProtocol:
      type: object
      properties:
        protocol:
          type: array
          items:
            $ref: '#/components/schemas/ProtocolItem'
    ProtocolItem:
      type: object
      required:
      - type
      properties:
        type:
          $ref: '#/components/schemas/ProtocolItemType'
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        author:
          type: string
      discriminator:
        propertyName: type
        mapping:
          DOCUMENT: '#/components/schemas/SubmissionDocumentUpdate'
          DATA: '#/components/schemas/SubmissionDataUpdate'
          STATUS: '#/components/schemas/SubmissionStatusUpdate'
          NEW_SUBMISSION: '#/components/schemas/NewSubmission'
    ProtocolItemType:
      type: string
      description: |
        EN: open ended enum contains possible protocol item types, possible values are (DOCUMENT, DATA, STATUS, NEW_SUBMISSION) DE: Art des Protokollitems (nicht abschließende Aufzählung), z.B. (DOCUMENT, DATA, STATUS, NEW_SUBMISSION)
      example: DOCUMENT
      x-extensible-enum:
      - DOCUMENT
      - DATA
      - STATUS
      - NEW_SUBMISSION
    SubmissionDocumentUpdate:
      type: object
      description: |
        EN: Contains submission document related updates which may require action to be taken DE: Aktualisierungen der Einreichungsdokumente, die ggf. weitere Maßnahmen erfordern
      allOf:
      - $ref: '#/components/schemas/ProtocolItem'
      - properties:
          action:
            type: string
            description: |
              EN: Open ended enum contains possible actions, possible values are (ADDED, REMOVED, CHANGED) DE: Mögliche Aktualisierungen (nicht abschließende Aufzählung), z.B. (ADDED, REMOVED, CHANGED)
            example: ADDED
            x-extensible-enum:
            - ADDED
            - REMOVED
            - CHANGED
          document:
            $ref: '#/components/schemas/ResourceRef'
    SubmissionDataUpdate:
      type: object
      description: |
        EN: Contains submission data related state transitions and updates DE: Enthält den Zustand und ggf. Aktualisierungen der Einreichungsdaten
      allOf:
      - $ref: '#/components/schemas/ProtocolItem'
      - properties:
          field:
            type: string
          change:
            $ref: '#/components/schemas/StateTransitionValue'
          reason:
            type: string
          remark:
            type: string
    StateTransitionValue:
      type: object
      properties:
        old:
          type: string
        new:
          type: string
    SubmissionStatusUpdate:
      type: object
      description: |
        EN: Contains submission status related updates which require actions to be taken, or show state transition DE: Statusänderungen zur Einreichung, die ggf. weitere Maßnahmen erfordern bzw. Anzeige des aktuellen Zustand der Einreichung
      allOf:
      - $ref: '#/components/schemas/SubmissionDataUpdate'
    NewSubmission:
      type: object
      description: |
        EN: Contains information when the new submission was created DE: Informationen, wann die neue Einreichung erzeugt wurde
      allOf:
      - $ref: '#/components/schemas/ProtocolItem'
      - properties:
          documents:
            $ref: '#/components/schemas/SubmissionRef'
    Paging:
      properties:
        cursor:
          $ref: '#/components/schemas/Cursor'
        previous:
          type: string
          format: uri
        next:
          type: string
          format: uri
        first:
          type: string
          format: uri
        last:
          type: string
          format: uri
        self:
          type: string
          format: uri
    InformerId:
      type: object
      required:
      - value
      description: |
        EN: Informer id DE: ID des Zuträgers
      properties:
        value:
          type: string
    ApplicantRelationships:
      type: object
      properties:
        _href:
          $ref: '#/components/schemas/ResourceRef'
        embedded:
          $ref: '#/components/schemas/ApplicantRelationshipsQuery'
    ApplicantRelationshipsQuery:
      type: array
      items:
        $ref: '#/components/schemas/ApplicantRelationship'
    ApplicantRelationship:
      type: object
      properties:
        applicants:
          type: array
          minItems: 2
          maxItems: 2
          items:
            $ref: '#/components/schemas/ApplicantIdRef'
        relationType:
          description: |
            EN: open ended enum contains values for relation type, possible values are (MARRIED, REGISTERED_PARTNERSHIP, PARTNERSHIP)
          allOf:
          - $ref: '#/components/schemas/ApplicantRelationshipType'
    ApplicantRelationshipType:
      type: string
      x-extensible-enum: MARRIED, REGISTERED_PARTNERSHIP, PARTNERSHIP
    Percentage:
      type: object
      required:
      - value
      properties:
        value:
          type: number
          format: double
    Phone:
      type: object
      properties:
        phoneNumber:
          type: string
          description: |
            EN: Mobile or landline telephone number of the customer DE: Mobil- oder Festnetztelefonnummer des Antragstellers
          example: +49 160 123456
    FinancialStandings:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/FinancialStandingItem'
    FinancialStandingItem:
      type: object
      properties:
        financialStandingRef:
          $ref: '#/components/schemas/FinancialStandingRef'
        type:
          $ref: '#/components/schemas/FinancialStandingType'
        applicantId:
          $ref: '#/components/schemas/ApplicantIdRef'
        embedded:
          $ref: '#/components/schemas/FinancialStanding'
    FinancialStandingRef:
      type: object
      properties:
        _href:
          $ref: '#/components/schemas/ResourceRef'
        financialStandingId:
          $ref: '#/components/schemas/FinancialStandingId'
    FinancialStandingId:
      type: object
      properties:
        id:
          type: string
    FinancialStandingType:
      type: string
      description: |
        EN: open ended enum contains possible types financial standing, possible values are (EQUITY, DEBT, INCOME, EXPENSE) DE: Art des Finanzmittels (nicht abschließende Aufzählung), z.B. (EQUITY, DEBT, INCOME, EXPENSE)
      example: EQUITY
      x-extensible-enum:
      - EQUITY
      - DEBT
      - INCOME
      - EXPENSE
    FinancialStanding:
      type: object
      required:
      - financialStandingId
      - applicantId
      - type
      description: Applicant Financial Standing at the Application creation time.
      properties:
        financialStandingId:
          $ref: '#/components/schemas/FinancialStandingId'
        applicantId:
          description: |
            EN: Reference to whom belongs this Financial Standing
          allOf:
          - $ref: '#/components/schemas/ApplicantIdRef'
        type:
          $ref: '#/components/schemas/FinancialStandingType'
      discriminator:
        propertyName: type
        mapping:
          EQUITY: '#/components/schemas/FinancialEquity'
          DEBT: '#/components/schemas/FinancialDebt'
          INCOME: '#/components/schemas/Income'
          EXPENSE: '#/components/schemas/Expense'
    FinancialEquity:
      type: object
      description: |
        EN: Financial equity information before the financing process DE: Informationen zum Eigenkapital vor Beginn des Finanzierungsprozesses
      allOf:
      - $ref: '#/components/schemas/FinancialStanding'
      - properties:
          type:
            type: string
            default: EQUITY
          cash:
            $ref: '#/components/schemas/EuroAmount'
          stock:
            description: |
              EN: Stock assets information DE: Informationen über Aktienbestaende
            allOf:
            - $ref: '#/components/schemas/EuroAmount'
          mortgageSaving:
            $ref: '#/components/schemas/EuroAmount'
          insurance:
            description: |
              EN: Surrender value life-/pension insurance equity DE: Informationen zu Rückkaufwerte von Lebens-/Pensionsversicherungen
            allOf:
            - $ref: '#/components/schemas/EuroAmount'
          realEstate:
            $ref: '#/components/schemas/RealEstateEquity'
          other:
            $ref: '#/components/schemas/OtherEquity'
    RealEstateEquity:
      type: object
      required:
      - total
      description: |
        EN: Real estate equity DE: Eigenkapital durch Immobilienvermögen
      properties:
        total:
          $ref: '#/components/schemas/EuroAmount'
        guarantee:
          $ref: '#/components/schemas/EuroAmount'
        items:
          type: array
          items:
            $ref: '#/components/schemas/RealEstateEquityItem'
        description:
          type: string
    RealEstateEquityItem:
      type: object
      required:
      - estateId
      - equity
      description: |
        EN: Details about a specific real estate equity DE: Informationen zu einem bestimmten Eigenkapital durch Immobilienvermögen
      properties:
        estateId:
          $ref: '#/components/schemas/EstateId'
        description:
          type: string
        equity:
          $ref: '#/components/schemas/RealEstateEquityDetails'
        guarantees:
          $ref: '#/components/schemas/RealEstateGuarantees'
    RealEstateEquityDetails:
      type: object
      required:
      - equity
      description: |
        EN: Details about equites associated to the real estate DE: Informationen zum Eigenkapital durch Immobilienvermögen
      properties:
        equity:
          $ref: '#/components/schemas/EuroAmount'
    RealEstateGuarantees:
      type: object
      description: |
        EN: Guarantees assocaited to the real estate DE: Bürgschaften für die Immobilie
      properties:
        plannedSell:
          description: |
            EN: Flag indicates whether the real estate to be sold before the financing DE: Flag, ob das Immobilienvermögen vor dem Finanzierungsprozess verkauft werden soll
          type: boolean
        secureFinancing:
          description: |
            EN: Flag indicates whether the real estate to be used to secure the financing DE: Flag, ob das Immobilienvermögen als Zusatzsicherheit verwendet werden soll
          type: boolean
    OtherEquity:
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/EuroAmount'
        description:
          type: string
    FinancialDebt:
      type: object
      description: |
        EN: Financial debts information before the financing process DE: Informationen über (finanzielle) Schulden vor Beginn der angefragten Finanzierung
      allOf:
      - $ref: '#/components/schemas/FinancialStanding'
      - properties:
          type:
            type: string
            default: DEBT
          liability:
            $ref: '#/components/schemas/LiabilityDebt'
          existingLoans:
            type: array
            description: |
              EN: Set of current loans debts DE: Alle laufenden Schulden aus Darlehen
            items:
              $ref: '#/components/schemas/ExistingLoanDebt'
          other:
            $ref: '#/components/schemas/EuroAmount'
    LiabilityDebt:
      type: object
      required:
      - guarantee
      description: |
        EN: Liability obligations before the financing process DE: Verbindlichkeiten vor Beginn der angefragten Finanzierung
      properties:
        guarantee:
          $ref: '#/components/schemas/EuroAmount'
        other:
          $ref: '#/components/schemas/EuroAmount'
        description:
          type: string
    ExistingLoanDebt:
      type: object
      required:
      - debtId
      - type
      description: |
        EN: Existing loan debt DE: (bestehende) Darlehensschuld
      properties:
        debtId:
          $ref: '#/components/schemas/DebtId'
        type:
          $ref: '#/components/schemas/ExistingDebtType'
      discriminator:
        propertyName: type
        mapping:
          EMPLOYMENT: '#/components/schemas/SimpleLoanDebt'
          PRIVATE: '#/components/schemas/SimpleLoanDebt'
          MORTGAGE_SAVING_PLAN: '#/components/schemas/SimpleLoanDebt'
          OTHER: '#/components/schemas/SimpleLoanDebt'
          PUBLIC: '#/components/schemas/SimpleLoanDebt'
          SOLVENCY: '#/components/schemas/SolvencyCreditDebt'
          EXISTING_MORTGAGE: '#/components/schemas/ExistingMortgageDebt'
          EXISTING_REALESTATE: '#/components/schemas/ExistingRealEstateDebt'
          OPEN_PROPERTY_SALE: '#/components/schemas/SimpleLoanDebt'
    ExistingDebtType:
      type: string
      description: |
        EN: open ended enum contains existing loan debt type, possible values are (EMPLOYMENT, PRIVATE, MORTGAGE_SAVING_PLAN, PUBLIC, OTHER, SOLVENCY, EXISTING_MORTGAGE, OPEN_PROPERTY_SALE) DE: Art der Darlehensschulden (nicht abschließende Aufzaehlung (EMPLOYMENT, PRIVATE, MORTGAGE_SAVING_PLAN, PUBLIC, OTHER, SOLVENCY, EXISTING_MORTGAGE, OPEN_PROPERTY_SALE)
      example: EMPLOYMENT
      x-extensible-enum:
      - EMPLOYMENT
      - PRIVATE
      - MORTGAGE_SAVING_PLAN
      - PUBLIC
      - SOLVENCY
      - OTHER
      - EXISTING_MORTGAGE
      - OPEN_PROPERTY_SALE
    SimpleLoanDebt:
      type: object
      required:
      - until
      description: |
        EN: Information about existing debts DE: Informationen zu bestehenden Darlehensschulden
      allOf:
      - $ref: '#/components/schemas/ExistingLoanDebt'
      - properties:
          amount:
            $ref: '#/components/schemas/EuroAmount'
          residualDebt:
            $ref: '#/components/schemas/EuroAmount'
          interestFixDate:
            $ref: '#/components/schemas/ISODate'
          description:
            description: |
              EN: Description of the provided public debt DE: BEschreibung der öffentlich bereitgestellten Schuld
            type: string
    SolvencyCreditDebt:
      type: object
      required:
      - type
      - debtId
      - residualDebt
      description: |
        EN: Installment and leasing credits DE: Raten- und Leasingkredite
      allOf:
      - $ref: '#/components/schemas/ExistingLoanDebt'
      - properties:
          type:
            type: string
            default: SOLVENCY
          residualDebt:
            $ref: '#/components/schemas/EuroAmount'
          repay:
            description: |
              EN: Flag indicates taking over the credit before the financing DE: Flag ob die Ablösung des Kredites vor der Finanzierung geplant ist
            type: boolean
          until:
            $ref: '#/components/schemas/ISODate'
    ExistingMortgageDebt:
      type: object
      required:
      - type
      - debtId
      - estate
      description: |
        EN: Existing Mortgage of the property DE: Bestehende Hypothek auf die Immobilie
      allOf:
      - $ref: '#/components/schemas/ExistingLoanDebt'
      - properties:
          type:
            type: string
            default: EXISTING_MORTGAGE
          estate:
            $ref: '#/components/schemas/EstateRef'
          amount:
            $ref: '#/components/schemas/EuroAmount'
          debitor:
            $ref: '#/components/schemas/Debitor'
          payoutDate:
            $ref: '#/components/schemas/ISODate'
          contractNumber:
            description: |
              EN: Loan number DE: Darlehensnummer
            type: string
          promotionalLoan:
            description: |
              EN: Promotional loan DE: Förderdarlehen
            type: boolean
          interestFixDate:
            $ref: '#/components/schemas/ISODate'
          forward:
            $ref: '#/components/schemas/ForwardExistingMortgage'
          residualDebt:
            $ref: '#/components/schemas/EuroAmount'
          collateral:
            description: |
              EN: Collateral DE: Sicherheit
            type: string
          repay:
            description: |
              EN: Repayment of the loan desired DE: Ablösung des Darlehens gewünscht
            type: boolean
    Debitor:
      type: object
      properties:
        bic:
          description: |
            EN: BIC code of loaner DE: BIC-Code des Darlehensgebers
          type: string
        name:
          description: |
            EN: Debitor DE: Schuldner
          type: string
    ForwardExistingMortgage:
      type: object
      description: |
        EN: Loan should be released DE: Das Darlehen soll erst nach einer bestimmten Vorlaufzeit ausgezahlt werden
      properties:
        date:
          $ref: '#/components/schemas/ISODate'
    ExistingRealEstateDebt:
      type: object
      required:
      - estate
      allOf:
      - $ref: '#/components/schemas/ExistingLoanDebt'
      - properties:
          type:
            type: string
            default: EXISTING_REALESTATE
          estate:
            $ref: '#/components/schemas/EstateRef'
          residualDebt:
            $ref: '#/components/schemas/EuroAmount'
          repay:
            description: |
              EN: Flag indicates taking over the credit before the financing DE: Flag ob die Ablösung des Kredites vor der Finanzierung geplant ist
            type: boolean
          until:
            $ref: '#/components/schemas/ISODate'
          interestFixDate:
            $ref: '#/components/schemas/ISODate'
          description:
            type: string
    Income:
      type: object
      allOf:
      - $ref: '#/components/schemas/FinancialStanding'
      - properties:
          type:
            type: string
            default: INCOME
          regularEmployment:
            $ref: '#/components/schemas/RegularEmploymentIncome'
          selfEmployment:
            $ref: '#/components/schemas/SelfEmploymentIncome'
          auxiliary:
            $ref: '#/components/schemas/AuxiliaryIncome'
          family:
            $ref: '#/components/schemas/FamilyIncome'
          pension:
            $ref: '#/components/schemas/PensionIncome'
          capital:
            $ref: '#/components/schemas/CapitalIncome'
          other:
            $ref: '#/components/schemas/OtherIncome'
    RegularEmploymentIncome:
      type: object
      description: |
        EN: Information about regular employment income DE: Informationen über regelmäßiges Einkommen aus einem Beschaeftigungsverhaeltnis
      properties:
        salary:
          $ref: '#/components/schemas/Salary'
        variable:
          $ref: '#/components/schemas/VariableIncome'
        grossIncomePreviousYear:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
    Salary:
      type: object
      required:
      - net
      - numberOfPayments
      description: |
        EN: Information regarding salary DE: Informationen über das Gehalt
      properties:
        gross:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        net:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        numberOfPayments:
          type: number
          format: double
          description: |
            EN: Number of payments DE: Anzahl an Gehaltszahlungen
        assuredNumber:
          type: number
          format: double
          description: |
            EN: Annually secured number of salaries as per employment contract (if numberOfPayments > 12) DE: Vertraglich zugesicherte Gehaltszahlungen (wenn numberOfPayments > 12)
    VariableIncome:
      type: object
      required:
      - amount
      properties:
        amount:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        breakdown:
          $ref: '#/components/schemas/VariableIncomeBreakdown'
    VariableIncomeBreakdown:
      type: object
      properties:
        bonus:
          $ref: '#/components/schemas/BonusIncome'
        shift:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        overtime:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        travelAllowance:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        commission:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
    BonusIncome:
      description: |
        EN: Additional periodical bonus income DE: Zustaetzliches regelmaeßiges Einkommen durch Boni/Tantiemen
      type: object
      properties:
        abroad:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        performance:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        profitSharing:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
    SelfEmploymentIncome:
      type: object
      description: |
        EN: Information about self-employment Income DE: Informationen über Einkommen aus einer selbststaendigen Taetigkeit
      properties:
        income:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        details:
          $ref: '#/components/schemas/SelfEmploymentIncomeDetails'
    SelfEmploymentIncomeDetails:
      type: object
      description: |
        EN: Calculation of independent (self employment) income DE: Berechnung des selbstständigen Einkommens
      properties:
        method:
          type: string
          description: |
            EN: open ended enum contains method for profit calculation, possible values are (CUSTOMER_SPECIFICATION, PROFIT_AND_LOSS_ACCOUNT, NO_METHOD) DE: Berechnungsmethode für das Einkommen (nicht abschließende Aufzaehlung), z.B. (CUSTOMER_SPECIFICATION=Kundenangabe, PROFIT_AND_LOSS_ACCOUNT=Gewinn- und Verlustrechnung, NO_METHOD)
          example: CUSTOMER_SPECIFICATION
          x-extensible-enum:
          - CUSTOMER_SPECIFICATION
          - PROFIT_AND_LOSS_ACCOUNT
          - NO_METHOD
        description:
          type: string
          description: |
            EN: Note on the balance DE: Anmerkung zur Bilanz
        averageNetProfit:
          $ref: '#/components/schemas/EuroAmount'
        values:
          type: array
          items:
            $ref: '#/components/schemas/SelfEmploymentIncomeItem'
    SelfEmploymentIncomeItem:
      type: object
      description: |
        EN: Describes the self employment income information for a year DE: Beschreibt die Informationen zum Einkommen aus selbständiger Tätigkeit für ein Jahr
      properties:
        year:
          type: integer
          format: int32
          description: The balance year
        netProfit:
          $ref: '#/components/schemas/EuroAmount'
        surplus:
          $ref: '#/components/schemas/EuroAmount'
        deficit:
          $ref: '#/components/schemas/EuroAmount'
        taxes:
          $ref: '#/components/schemas/EuroAmount'
    AuxiliaryIncome:
      type: object
      required:
      - income
      description: |
        EN: Periodical auxiliary Income DE: Regelmaeßige variable Einkünfte
      properties:
        income:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        since:
          $ref: '#/components/schemas/ISODate'
    FamilyIncome:
      description: |
        EN: Additional periodical income for children / family DE: Zustzatzliches regelmaeßiges Einkommen durch bzw. für Kinder / Familie
      type: object
      properties:
        alimony:
          $ref: '#/components/schemas/AlimonyInfo'
        childAllowance:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        parentalAllowance:
          $ref: '#/components/schemas/ParentalAllowanceInfo'
    AlimonyInfo:
      type: object
      required:
      - alimony
      description: |
        EN: Information regarding alimony DE: Informationen über Unterhaltszahlungen
      properties:
        alimony:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        maritalPart:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        childPart:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
    ParentalAllowanceInfo:
      type: object
      required:
      - parentalAllowance
      description: |
        EN: Informations regarding parental/child-raising allowance DE: Informationen über Elterngeld
      properties:
        parentalAllowance:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        endDate:
          $ref: '#/components/schemas/ISODate'
    PensionIncome:
      type: object
      required:
      - pension
      description: |
        EN: Additional periodical income from pension DE: Zusaetzliches regelmaeßiges Einkommen aus Rente/Pension
      properties:
        pension:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        breakdown:
          $ref: '#/components/schemas/PensionIncomeBreakdown'
    PensionIncomeBreakdown:
      type: object
      properties:
        claimState:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        claimInsurance:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
    CapitalIncome:
      type: object
      description: |
        EN: Additional periodical income from capital DE: Zusaetzliches regelmaeßiges Einkommen durch Kapitalvermögen
      properties:
        capitalYield:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        stocksAndBondsIncome:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        rentalIncome:
          type: array
          items:
            $ref: '#/components/schemas/RentalIncomeItem'
    RentalIncomeItem:
      type: object
      required:
      - estate
      - rent
      description: |
        EN: The rental income for a specific real estate DE: Mieteinnahmen aus einem bestimmten Objekt
      properties:
        rent:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        estate:
          $ref: '#/components/schemas/EstateRef'
    OtherIncome:
      type: object
      required:
      - other
      description: |
        EN: Other periodical income DE: Anderes (zusaetzliches) regelmaeßiges Einkommen
      properties:
        other:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        external:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        description:
          type: string
    Expense:
      type: object
      allOf:
      - $ref: '#/components/schemas/FinancialStanding'
      - properties:
          type:
            type: string
            default: EXPENSE
          housing:
            $ref: '#/components/schemas/HousingExpense'
          insurance:
            $ref: '#/components/schemas/InsuranceExpense'
          alimony:
            $ref: '#/components/schemas/AlimonyExpense'
          existingLoans:
            $ref: '#/components/schemas/ExistingLoanExpenses'
          other:
            $ref: '#/components/schemas/OtherExpense'
    HousingExpense:
      type: object
      required:
      - costs
      - currentHousingSituation
      description: |
        EN: Information regarding housing expenses DE: Informationen zu Wohnungsausgaben
      properties:
        currentHousingSituation:
          $ref: '#/components/schemas/HousingSituation'
        costs:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        costsObsolete:
          type: boolean
          description: |
            EN: True if accommodation/housing costs are obsolete after financing DE: Wahr, wenn die Wohnungsausgaben nach der Finanzierung entfallen
    HousingSituation:
      type: string
      description: |
        EN: open ended enum contains value for the current housing/accomodation types, possible values are (RENT, RATE, DEBT_FREE, PARENTS, PARENTS, OWN_PROPERTY, FIRST_APPLICANT) DE: Art der aktuellen Wohnsituation (nicht abschließende Aufzaehlung), z.B. (RENT, RATE, DEBT_FREE, PARENTS, PARENTS, OWN_PROPERTY, FIRST_APPLICANT)
      example: RENT
      x-extensible-enum:
      - RENT
      - RATE
      - DEBT_FREE
      - PARENTS
      - OWN_PROPERTY
      - FIRST_APPLICANT
    InsuranceExpense:
      type: object
      description: |
        EN: Informations related insurance expences DE: Informationen über Ausgaben durch Versicherungen
      properties:
        healthInsurance:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        lifeInsurance:
          $ref: '#/components/schemas/InsuranceBurden'
        accidentInsurance:
          $ref: '#/components/schemas/InsuranceBurden'
        disabilityInsurance:
          $ref: '#/components/schemas/InsuranceBurden'
    InsuranceBurden:
      type: object
      required:
      - burden
      properties:
        burden:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        minimum:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
    AlimonyExpense:
      type: object
      required:
      - alimony
      description: |
        EN: Expenses for alimony DE: Ausgaben durch Unterhalt
      properties:
        alimony:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
    ExistingLoanExpenses:
      type: object
      properties:
        credits:
          type: array
          items:
            $ref: '#/components/schemas/DebtExpense'
    DebtExpense:
      type: object
      required:
      - debtId
      - burden
      properties:
        debtId:
          $ref: '#/components/schemas/DebtId'
        burden:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
    OtherExpense:
      type: object
      required:
      - value
      description: |
        EN: Other periodical expenses DE: Andere (zusaetzliche) regelmaeßige Ausgaben
      properties:
        value:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        additional:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        description:
          type: string
    InterestMaturity:
      type: object
      required:
      - type
      properties:
        type:
          $ref: '#/components/schemas/InterestMaturityType'
      discriminator:
        propertyName: type
        mapping:
          VARIABLE: '#/components/schemas/VariableInterestMaturity'
          FIXED_PERIOD: '#/components/schemas/FixedInterestMaturity'
    InterestMaturityType:
      type: string
      description: |
        EN: Open ended enum contains types of the interest maturity, possible values are (FIXED_PERIOD, VARIABLE) DE: Art der Sollzinsbindung (nicht abschließende Aufzählung9, z.B. (FIXED_PERIOD, VARIABLE)
      example: FIXED_PERIOD
      x-extensible-enum:
      - FIXED_PERIOD
      - VARIABLE
    VariableInterestMaturity:
      type: object
      required:
      - type
      allOf:
      - $ref: '#/components/schemas/InterestMaturity'
      - properties:
          type:
            type: string
            default: VARIABLE
    FixedInterestMaturity:
      type: object
      required:
      - type
      - period
      allOf:
      - $ref: '#/components/schemas/InterestMaturity'
      - properties:
          type:
            type: string
            default: FIXED_PERIOD
          period:
            $ref: '#/components/schemas/Duration'
    FinancialVentureItem:
      type: object
      required:
      - _href
      - reason
      - mortgageProperty
      properties:
        _href:
          $ref: '#/components/schemas/ResourceRef'
        reason:
          $ref: '#/components/schemas/FinancingApplicationReason'
        mortgageProperty:
          description: |
            EN: The Financing Asset / Property to which the financing process relates DE: Das Beleihungsobjekt/Finanzierungsobjekt auf das sich das Finanzierungsvorhaben bezieht
          allOf:
          - $ref: '#/components/schemas/EstateRef'
        embedded:
          $ref: '#/components/schemas/FinancingVenture'
    EstateBuildingCosts:
      type: object
      required:
      - landPrice
      - construction
      properties:
        landPrice:
          $ref: '#/components/schemas/EuroAmount'
        construction:
          $ref: '#/components/schemas/EuroAmount'
        additional:
          $ref: '#/components/schemas/EuroAmount'
        outside:
          $ref: '#/components/schemas/EuroAmount'
    Informers:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/InformerItem'
    InformerItem:
      type: object
      properties:
        _href:
          $ref: '#/components/schemas/ResourceRef'
        embedded:
          $ref: '#/components/schemas/Informer'
    Handover:
      type: object
      description: |
        EN: Advisory Handover notes and recommendations DE: Beratunsprotokoll und Empfehlung des Beraters
      properties:
        hints:
          type: string
          description: |
            EN: Hints provided by the financing advisor DE: Hinweise des Beraters
    Correspondence:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CorrespondenceItem'
    MainLoan:
      type: object
      required:
      - type
      - product
      allOf:
      - $ref: '#/components/schemas/Loan'
      - properties:
          type:
            type: string
            default: MAIN_LOAN
          product:
            $ref: '#/components/schemas/MainProduct'
          rateDetails:
            $ref: '#/components/schemas/RateDetails'
          additionalInfo:
            $ref: '#/components/schemas/MainLoanAdditionalInfo'
    MainProduct:
      type: object
      description: |
        EN: Annuity product information DE: Informationen zum Annuitätendarlehen
      required:
      - type
      - product
      properties:
        product:
          $ref: '#/components/schemas/MainProductType'
      discriminator:
        propertyName: product
        mapping:
          ANNUITAET: '#/components/schemas/RegularMainProduct'
          W_RIESTER: '#/components/schemas/RegularMainProduct'
          ZWIFI: '#/components/schemas/BridgingFinancingMainProduct'
          FLEX_PLUS: '#/components/schemas/RegularMainProduct'
          FLEX: '#/components/schemas/RegularMainProduct'
          FORWARD: '#/components/schemas/RegularMainProduct'
          KOMBI: '#/components/schemas/RegularMainProduct'
          KONSTANT: '#/components/schemas/RegularMainProduct'
          KONST_KOMBI: '#/components/schemas/RegularMainProduct'
          VERSICHER: '#/components/schemas/RegularMainProduct'
          VOLLTILGER: '#/components/schemas/RegularMainProduct'
          OTHER: '#/components/schemas/RegularMainProduct'
    MainProductType:
      type: string
      description: |
        EN: open ended enum contains loan product type, possible values are (ANNUITAET, W_RIESTER, ZWIFI, FLEX_PLUS, FLEX, FORWARD, KOMBI, KONSTANT, KONST_KOMBI, VERSICHER, VOLLTILGER, OTHER) EN: Produkttyp des Darlehens (nicht abschließende Aufzählung), z.B. (ANNUITAET=Annuitätendarlehen, W_RIESTER=Wohnriesterdarlehen, ZWIFI=Zwischenfinanzierung, FLEX_PLUS, FLEX, FORWARD, KOMBI, KONSTANT, KONST_KOMBI, VERSICHER, VOLLTILGER, OTHER)
      example: ANNUITAET
      x-extensible-enum:
      - ANNUITAET
      - W_RIESTER
      - ZWIFI
      - FLEX_PLUS
      - FLEX
      - FORWARD
      - KOMBI
      - KONSTANT
      - KONST_KOMBI
      - VERSICHER ==> Ist das ein "Zinszahlungsdarlehen" / wenn ja umbennen, wenn
        nein was dann?
      - VOLLTILGER
      - OTHER
    RegularMainProduct:
      allOf:
      - $ref: '#/components/schemas/MainProduct'
    BridgingFinancingMainProduct:
      type: object
      description: |
        EN: Information on the bridging financing product in the annuity product DE: Informationen zur Zwischenfinanzierung im Annuitätendarlehen
      allOf:
      - $ref: '#/components/schemas/MainProduct'
      - properties:
          product:
            type: string
            default: ZWIFI
          details:
            $ref: '#/components/schemas/BridgingLoanDetails'
    BridgingLoanDetails:
      type: object
      required:
      - neededAmount
      - reason
      description: |
        EN: Details about bridging loan DE: Informationen zu Schulden durch Überbrückungskredite
      properties:
        reason:
          type: string
          description: |
            EN: open ended enum contains bridging loan debt reason, possible values are (OPEN_PROPERTY_SALE, CLOSED_PROPERTY_SALE, UNAVAILABLE, PUBLIC_PRE_FINANCE) DE: Grund für den Überbrückungskredit (nicht abschließende Aufzaehlung), z.B. (OPEN_PROPERTY_SALE, CLOSED_PROPERTY_SALE, UNAVAILABLE, PUBLIC_PRE_FINANCE)
          example: OPEN_PROPERTY_SALE
          x-extensible-enum:
          - OPEN_PROPERTY_SALE
          - CLOSED_PROPERTY_SALE
          - UNAVAILABLE
          - PUBLIC_PRE_FINANCE
        neededAmount:
          $ref: '#/components/schemas/EuroAmount'
        equityAvailabilityDate:
          $ref: '#/components/schemas/ISODate'
      discriminator:
        propertyName: reason
        mapping:
          OPEN_PROPERTY_SALE: '#/components/schemas/OpenPropertySale'
          CLOSED_PROPERTY_SALE: '#/components/schemas/ClosedPropertySale'
          UNAVAILABLE: '#/components/schemas/UnavailableEquity'
          PUBLIC_PRE_FINANCE: '#/components/schemas/PublicPreFinancing'
    OpenPropertySale:
      type: object
      description: |
        EN: Information about bridging debt associated to property sale DE: Informationen zu einem Überbrückungskredit im Zusammenhang mit einem Immobilienverkauf
      allOf:
      - $ref: '#/components/schemas/BridgingLoanDetails'
      - properties:
          reason:
            type: string
            default: OPEN_PROPERTY_SALE
          debtAmount:
            $ref: '#/components/schemas/EuroAmount'
          residualDebt:
            $ref: '#/components/schemas/EuroAmount'
    ClosedPropertySale:
      description: |
        EN: Bridging Debt associated to a closed property sale DE: Überbrückungskredit Zusammenhang mit einem abgeschlossenen Immobilienverkauf
      allOf:
      - $ref: '#/components/schemas/BridgingLoanDetails'
      - properties:
          reason:
            type: string
            default: CLOSED_PROPERTY_SALE
    UnavailableEquity:
      type: object
      required:
      - investmentType
      - investmentAmount
      description: |
        EN: Bridging Debt associated to unavailable equity DE: Überbrückungskredit Zusammenhang mit nicht verfügbaren Eigenkapital
      allOf:
      - $ref: '#/components/schemas/BridgingLoanDetails'
      - properties:
          reason:
            type: string
            default: UNAVAILABLE
          investmentType:
            description: |
              EN: Type of the equity investment DE: Art der Kapitalbeteiligung
            type: string
          investmentCompany:
            description: |
              EN: Company in which the equity is invested with DE: Unternehmen in welches das Kapital investiert wurde
            type: string
          investmentAmount:
            $ref: '#/components/schemas/EuroAmount'
    PublicPreFinancing:
      type: object
      required:
      - amount
      - type
      description: |
        EN: Bridging Debt associated to public pre financing DE: Überbrückungskredit Zusammenhang mit einer öffentlichen Vorfinanzierung
      allOf:
      - $ref: '#/components/schemas/BridgingLoanDetails'
      - properties:
          reason:
            type: string
            default: PUBLIC_PRE_FINANCE
          type:
            description: |
              EN: Type of the public pre financing DE: Art der öffentlichen Vorfinanzierung
            type: string
          company:
            description: |
              EN: Company that provided the pre financing DE: Unternehmen, welches die öffentlichen Vorfinanzierung bereitgestellt hat
            type: string
          amount:
            $ref: '#/components/schemas/EuroAmount'
    MainLoanAdditionalInfo:
      type: object
      description: |
        EN: Additional informations for annuity loans DE: Zustzäliche Informationen zum Annuitätendarlehen
      properties:
        conditionDetails:
          type: array
          description: |
            EN: Additional condition details for the main loan (key-value pairs) DE: Zusätzliche Konditionsdetails für das Hauptdarlehen (Schlüssel-Werte Paar)
          items:
            $ref: '#/components/schemas/AdditionalInfo'
        provisionDetails:
          type: array
          description: |
            EN: Additional commission (provision) details for the main loan (key-value pairs) DE: Zusätzliche Provisionsdetails für das Hauptdarlehen (Schlüssel-Werte Paar)
          items:
            $ref: '#/components/schemas/AdditionalInfo'
    FinancingApplicationCommandData:
      type: object
      required:
      - venture
      - applicants
      - financialStanding
      - estates
      - offers
      properties:
        status:
          $ref: '#/components/schemas/FinancingApplicationStatus'
        subType:
          $ref: '#/components/schemas/ApplicationSubType'
        applicants:
          type: array
          items:
            $ref: '#/components/schemas/Applicant'
        applicantRelationships:
          type: array
          items:
            $ref: '#/components/schemas/ApplicantRelationship'
        households:
          type: array
          items:
            $ref: '#/components/schemas/Household'
          minItems: 1
        estates:
          type: array
          items:
            $ref: '#/components/schemas/Estate'
          minItems: 1
        financialStanding:
          type: array
          items:
            $ref: '#/components/schemas/FinancialStanding'
          minItems: 1
        venture:
          $ref: '#/components/schemas/FinancingVenture'
        consultation:
          $ref: '#/components/schemas/ConsultationCommand'
        offers:
          type: array
          items:
            $ref: '#/components/schemas/FinancingOffer'
          minItems: 1
    FinancingApplicationStatus:
      type: string
      description: |
        EN: Status of the application. DE: Status des Finanzierungsantrages.
      x-extensible-enum:
      - QUALIFIED_FOR_SUBMISSION
      - SUBMITTED
    ApplicationSubType:
      type: string
      description: |
        EN: Open ended enum contains application sub type, possible values are (NEW_CUSTOMER, PROLONGATION, SUPPLEMENTARY_FINANCING) DE: Unterkategorie des Antragstyp (nicht abschließende Aufzählung), z.B. (NEW_CUSTOMER, PROLONGATION, SUPPLEMENTARY_FINANCING)
      example: NEW_APPLICANT
      x-extensible-enum:
      - NEW_APPLICANT
      - PROLONGATION
      - SUPPLEMENTARY_FINANCING
    ConsultationCommand:
      type: object
      required:
      - broker
      properties:
        broker:
          description: |
            EN: Company information about the main Broker (Interhp, Prohyp, MLP Hyp or Prohyp-WhiteLabel-Partner)
          allOf:
          - $ref: '#/components/schemas/Advisor'
        subBroker:
          description: |
            EN: Company information about the sub broker.
          allOf:
          - $ref: '#/components/schemas/Advisor'
        informers:
          type: array
          items:
            $ref: '#/components/schemas/Informer'
        recommendation:
          $ref: '#/components/schemas/Recommendation'
    FinancingOffer:
      type: object
      required:
      - id
      - status
      properties:
        id:
          $ref: '#/components/schemas/OfferId'
        financingConfirmationRequired:
          description: |
            EN: Indicates if financing confirmation should be provided DE: Gibt an, ob eine Finanzierungsbestätigung vorgelegt werden soll
          type: boolean
        status:
          $ref: '#/components/schemas/FinancingOfferStatus'
        loanQuota:
          $ref: '#/components/schemas/LoanQuota'
        financingNeed:
          $ref: '#/components/schemas/OfferFinancingNeed'
        financingStructures:
          $ref: '#/components/schemas/FinancingStructures'
        validity:
          type: string
          format: date-time
          description: |
            EN: A UTC date-time indicates the offer validity date time
          example: 2019-12-29T10:22:50Z
        baserateIssueDate:
          $ref: '#/components/schemas/ISODate'
        additionalInfos:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalInfo'
    Applicants:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ApplicantItem'
          minItems: 1
    ApplicantItem:
      type: object
      required:
      - applicantRef
      - person
      properties:
        applicantRef:
          $ref: '#/components/schemas/ApplicantIdRef'
        person:
          $ref: '#/components/schemas/Person'
        embedded:
          $ref: '#/components/schemas/Applicant'
    Command:
      type: object
      required:
      - commandId
      - status
      properties:
        commandId:
          $ref: '#/components/schemas/CommandId'
        status:
          type: string
          x-extensible-enum:
          - SUCESSFULL
          - FAILED
      discriminator:
        propertyName: status
        mapping:
          SUCESSFULL: '#/components/schemas/SuccessfulCommand'
          FAILED: '#/components/schemas/FailedCommand'
    SuccessfulCommand:
      type: object
      required:
      - modifiedResources
      allOf:
      - $ref: '#/components/schemas/Command'
      - properties:
          modifiedResources:
            type: array
            items:
              $ref: '#/components/schemas/ResourceRef'
    FailedCommand:
      type: object
      allOf:
      - $ref: '#/components/schemas/SuccessfulCommand'
      - properties:
          errorMessage:
            type: string
    HandoverReport:
      type: string
      format: binary
    SubmissionRequest:
      type: object
      properties:
        submitted:
          $ref: '#/components/schemas/SubmissionDate'
        submittedBy:
          $ref: '#/components/schemas/Advisor'
        submissionRequestComponents:
          type: array
          items:
            $ref: '#/components/schemas/SubmissionRequestComponent'
    SubmissionDate:
      description: |
        EN: Submission Request creation date DE: Erstellungsdatum der Einreichungsanforderung
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
    SubmissionRequestComponent:
      type: object
      properties:
        loanPartnerProcessingUnit:
          $ref: '#/components/schemas/LoanPartnerProcessingUnit'
        initialEstimate:
          $ref: '#/components/schemas/InitialSubmissionEstimate'
        loanTypes:
          $ref: '#/components/schemas/LoanTypes'
        handover:
          $ref: '#/components/schemas/Handover'
    LoanPartnerProcessingUnit:
      description: |
        EN: Information about the processing unit of the loan partner DE: Informationen zur Einheit des Kreditgebers, welche die Einreichung bearbeitet
      type: object
      required:
      - id
      properties:
        id:
          $ref: '#/components/schemas/LoanPartnerProcessingUnitId'
        name:
          $ref: '#/components/schemas/LoanPartnerProcessingUnitName'
        parentUnit:
          $ref: '#/components/schemas/LoanPartnerProcessingUnit'
    LoanPartnerProcessingUnitId:
      description: |
        EN: Id of loan partner processing unit DE: ID der Einheit des Kreditgebers, welche die Einreichung bearbeitet
      required:
      - value
      properties:
        value:
          type: string
    LoanPartnerProcessingUnitName:
      description: |
        EN: Name of the loan partner processing unit DE: Bezeichnung / Name der Einheit des Kreditgebers, welche die Einreichung bearbeitet
      type: object
      properties:
        value:
          type: string
    InitialSubmissionEstimate:
      description: |
        EN: estimated decision date DE: voraussichtliches Entscheidungsdatum
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
    LoanTypes:
      type: object
      required:
      - loanTypes
      properties:
        loanTypes:
          type: array
          items:
            $ref: '#/components/schemas/LoanType'
    PropertyRegisterOwnerApplicant:
      type: object
      required:
      - applicant
      allOf:
      - $ref: '#/components/schemas/PropertyRegisterOwner'
      - properties:
          type:
            type: string
            default: APPLICANT
          applicant:
            $ref: '#/components/schemas/ApplicantIdRef'
    PropertyRegisterOwnerThirdPerson:
      type: object
      allOf:
      - $ref: '#/components/schemas/PropertyRegisterOwner'
      - properties:
          type:
            type: string
            default: THIRD_PERSON
          fullName:
            type: string
          person:
            $ref: '#/components/schemas/Person'
    EstateAdditionalLoan:
      type: object
      required:
      - amount
      properties:
        amount:
          $ref: '#/components/schemas/EuroAmount'
        description:
          type: string
        usage:
          type: string
          description: |
            EN: open ended enum contains possible estate additional loan usages, possible values are (OPERATIONAL_COSTS, REPAY_ANOTHER_LOAN, PREPAYMENT_PENALTY, CONSTRUCTION, RENOVATION, OTHER) DE: Zusätzliche Verwendung der Hypothek (nicht abschließende Aufzählung), z.B. (OPERATIONAL_COSTS, REPAY_ANOTHER_LOAN, PREPAYMENT_PENALTY, CONSTRUCTION, RENOVATION, OTHER)
          example: OPERATIONAL_COSTS
          x-extensible-enum:
          - OPERATIONAL_COSTS
          - REPAY_ANOTHER_LOAN
          - PREPAYMENT_PENALTYC
          - CONSTRUCTION
          - RENOVATION
          - OTHER
    FinancingApplication:
      type: object
      required:
      - id
      - applicants
      - venture
      - financialStanding
      - estates
      properties:
        id:
          $ref: '#/components/schemas/FinancingApplicationId'
        status:
          $ref: '#/components/schemas/FinancingApplicationStatus'
        subType:
          $ref: '#/components/schemas/ApplicationSubType'
        applicantRelationships:
          $ref: '#/components/schemas/ApplicantRelationships'
        applicants:
          $ref: '#/components/schemas/Applicants'
        households:
          $ref: '#/components/schemas/Households'
        estates:
          $ref: '#/components/schemas/Estates'
        financialStanding:
          $ref: '#/components/schemas/FinancialStandings'
        venture:
          $ref: '#/components/schemas/FinancialVentureItem'
        consultation:
          $ref: '#/components/schemas/ConsultationItem'
    Protocol:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProtocolItem'
    Submissions:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SubmissionItem'
        paging:
          $ref: '#/components/schemas/Paging'
    SubmissionItem:
      type: object
      required:
      - id
      - statusInfo
      - date
      allOf:
      - $ref: '#/components/schemas/SubmissionRef'
      - properties:
          statusInfo:
            $ref: '#/components/schemas/SubmissionStatusInfo'
          date:
            type: string
            format: date-time
            description: |
              EN: A UTC date-time indicates the submission date DE: UTC Datum-Zeit der Einreichung
            example: 2019-12-29T10:22:50Z
          embedded:
            $ref: '#/components/schemas/Submission'
    SubmissionStatusInfo:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/SubmissionStatus'
        remark:
          type: string
      required:
      - status
      discriminator:
        propertyName: status
        mapping:
          SUBMITTED: '#/components/schemas/SimpleStatus'
          ONHOLD: '#/components/schemas/SubmissionStatusOnhold'
          INWORK: '#/components/schemas/SimpleStatus'
          REJECT: '#/components/schemas/SubmissionStatusReject'
          CREDIT_ACCEPTED: '#/components/schemas/SimpleStatus'
          CREDIT_VERIFIED: '#/components/schemas/SimpleStatus'
          CONTRACT_SIGN: '#/components/schemas/SimpleStatus'
          CANCELED: '#/components/schemas/SubmissionStatusCancel'
          REVOKE: '#/components/schemas/SimpleStatus'
    Submission:
      required:
      - submissionId
      - financingApplicationId
      properties:
        submissionId:
          $ref: '#/components/schemas/SubmissionId'
        financingApplication:
          $ref: '#/components/schemas/FinancingApplicationRef'
        overview:
          $ref: '#/components/schemas/SubmissionOverview'
        offer:
          $ref: '#/components/schemas/FinancingOffer'
        consultation:
          $ref: '#/components/schemas/Consultation'
        credit:
          $ref: '#/components/schemas/Credit'
    SubmissionId:
      type: object
      properties:
        value:
          type: string
    SubmissionOverview:
      type: object
      description: |
        EN: General Submission information DE: Generelle Informationen ueber die Einreichung
      properties:
        mode:
          $ref: '#/components/schemas/SubmissionMode'
        statusInfo:
          $ref: '#/components/schemas/SubmissionStatusInfo'
        date:
          type: string
          format: date-time
          description: |
            EN: A UTC date-time indicates the submission date DE: UTC Datum-Zeit der Einreichung
          example: 2019-12-29T10:22:50Z
        decisionDate:
          $ref: '#/components/schemas/ISODate'
        loanPartnerProcessingInfo:
          $ref: '#/components/schemas/LoanPartnerProcessingInfo'
    SubmissionMode:
      type: string
      description: |
        EN: open ended enum contains type of submission, possible values are (NORMAL, PHYP_DIRECT, DIBA_DIRECT, PHYP_PROLO, PHYP_SELECT, IHYP, PROHYP_SELE, EXPRESS) DE: Art der Einreichung (nicht abschließende Aufzählung), z.B. (NORMAL, PHYP_DIRECT, DIBA_DIRECT, PHYP_PROLO, PHYP_SELECT, IHYP, PROHYP_SELE, EXPRESS)
      example: NORMAL
      x-extensible-enum:
      - NORMAL
      - PHYP_DIRECT
      - DIBA_DIRECT
      - PHYP_PROLO
      - PHYP_SELECT
      - IHYP
      - PROHYP_SELE
      - EXPRESS
    LoanPartnerProcessingInfo:
      description: |
        EN: Processing Unit and current processor of the loan partner DE: Einheit des Kreditgebers, welche die Einreichung bearbeitet und aktueller (Kredit-)Bearbeiter
      type: object
      properties:
        unit:
          $ref: '#/components/schemas/LoanPartnerProcessingUnit'
        processorId:
          $ref: '#/components/schemas/LoanPartnerProcessorId'
    LoanPartnerProcessorId:
      description: |
        EN: Id of loan partner processor DE: ID des (Kredit-)Bearbeiters
      required:
      - value
      properties:
        value:
          type: string
    SubmissionCorrespondence:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SubmissionCorrespondenceItem'
        paging:
          $ref: '#/components/schemas/Paging'
    SubmissionCorrespondenceItem:
      type: object
      properties:
        submission:
          $ref: '#/components/schemas/SubmissionRef'
        correspondence:
          $ref: '#/components/schemas/SubmissionCorrespondenceRef'
    SubmissionCorrespondenceRef:
      type: object
      properties:
        _href:
          $ref: '#/components/schemas/ResourceRef'
        embedded:
          $ref: '#/components/schemas/EmbeddedSubmissionCorrespondence'
    EmbeddedSubmissionCorrespondence:
      type: object
      properties:
        correspondence:
          type: array
          items:
            $ref: '#/components/schemas/CorrespondenceItem'
    LoanId:
      type: object
      description: |
        EN: Loan identifier DE: ID des Darlehens
      properties:
        value:
          type: string
    LoanType:
      type: string
      description: |
        EN: Open ended enum contains possible loan types, possible values are (MAIN_LOAN, AUXILIARY_LOAN, KFW_PROMOTION_LOAN) DE: Art des Darlehens (nicht abschließende Aufzählung), z.B. (MAIN_LOAN, AUXILIARY_LOAN, KFW_PROMOTION_LOAN)
      example: MAIN_LOAN
      x-extensible-enum:
      - MAIN_LOAN
      - AUXILIARY_LOAN
      - KFW_PROMOTION_LOAN
    SpecialRepayment:
      type: object
      required:
      - type
      description: |
        EN: Special repayment information DE: (spezielle) Informationen zur Rueckzahlung
      properties:
        type:
          $ref: '#/components/schemas/SpecialRepaymentType'
      discriminator:
        propertyName: type
        mapping:
          PERCENTAGE: '#/components/schemas/PercentageSpecialRepayment'
          TEXT: '#/components/schemas/TextSpecialRepayment'
    SpecialRepaymentType:
      type: string
      description: |
        EN: Open ended enum contains possible special repayment types, possible values are (PERCENTAGE, TEXT)
      example: PERCENTAGE
      x-extensible-enum:
      - PERCENTAGE
      - TEXT
    PercentageSpecialRepayment:
      type: object
      required:
      - type
      - percent
      allOf:
      - $ref: '#/components/schemas/SpecialRepayment'
      - properties:
          type:
            type: string
            default: PERCENTAGE
          description:
            description: |
              EN: Special repayment description DE: Beschreibung der speziellen Rueckzahlung
            type: string
          percent:
            $ref: '#/components/schemas/PeriodicalPercentage'
    TextSpecialRepayment:
      type: object
      required:
      - type
      - text
      allOf:
      - $ref: '#/components/schemas/SpecialRepayment'
      - properties:
          type:
            type: string
            default: TEXT
          text:
            description: |
              EN: Special repayment text DE: Beschreibung der speziellen Rueckzahlung
            type: string
    PayoutInfo:
      type: object
      description: |
        EN: Loan payout information DE: Informationen zur Auszahlung des Darlehens
      properties:
        firstPayout:
          $ref: '#/components/schemas/ISODate'
        freeAllocationPeriod:
          $ref: '#/components/schemas/Duration'
        payoutRate:
          $ref: '#/components/schemas/Percentage'
    CommissionInfo:
      type: object
      required:
      - percent
      description: |
        EN: Complete information about commissions DE: Abschließende Informationen zur Provision
      properties:
        percent:
          $ref: '#/components/schemas/Percentage'
        amount:
          $ref: '#/components/schemas/EuroAmount'
    KfwPromotionLoan:
      type: object
      allOf:
      - $ref: '#/components/schemas/Loan'
      - properties:
          type:
            type: string
            default: KFW_PROMOTION_LOAN
          program:
            $ref: '#/components/schemas/KfwProgram'
          annuityDetails:
            $ref: '#/components/schemas/AnnuityDetails'
          reservations:
            type: array
            items:
              $ref: '#/components/schemas/KfwReservationInfo'
    AuxiliaryLoan:
      type: object
      required:
      - type
      - product
      allOf:
      - $ref: '#/components/schemas/Loan'
      - properties:
          type:
            type: string
            default: AUXILIARY_LOAN
          annuityDetails:
            $ref: '#/components/schemas/AnnuityDetails'
          product:
            $ref: '#/components/schemas/AuxProductType'
    JsonPatchOperation:
      description: |
        EN: JSON Patch definition according to <a href="https://tools.ietf.org/html/rfc6902">RFC 6902</a> DE: JSON Patch-Definition nach <a href="https://tools.ietf.org/html/rfc6902">RFC 6902</a>
      required:
      - op
      - path
      properties:
        op:
          type: string
          description: |
            EN: open ended enum contains possible patch operations, possible values are (ADD, REMOVE, REPLACE) DE: Mögliche Patch-Befehle (nicht abschließende Aufzählung), z.B. (ADD, REMOVE, REPLACE)
          example: add
          x-extensible-enum:
          - ADD
          - REMOVE
          - REPLACE
        path:
          type: string
        value:
          type: object
    PatchSubmissionOperation:
      description: 'Schema to patch a submission Supported paths: <ul><li>overview/loanParnterProcessingInfo
        (changes the loan partner processing unit including a new processor)</li>
        <li>overview/loanPartnerProcessingInfo/processor (changes the loan partner
        processor)</li> <li>overview/statusInfo</li> <li>credit/sendContractDate</li>
        <li>credit/signContractDate</li> <li>credit/cancelContractDate</li> <li>credit/loans
        (changes the loans of a accepted credit)</li></ul>'
      type: object
      required:
      - path
      allOf:
      - $ref: '#/components/schemas/JsonPatchOperation'
      - properties:
          path:
            type: string
            description: |
              EN: Open ended enum contains supported path values, possible values are ("overview/loanParnterProcessingInfo", "overview/loanPartnerProcessingInfo/processor", "overview/statusInfo", "credit/sendContractDate", "credit/signContractDate", "credit/cancelContractDate", "credit/loans") DE: Unterstuetze Pfäde (nicht abschließende Aufzählung), z.B. ("overview/loanParnterProcessingInfo", "overview/loanPartnerProcessingInfo/processor", "overview/statusInfo", "credit/sendContractDate", "credit/signContractDate", "credit/cancelContractDate", "credit/loans")
            example: overview/loanParnterProcessingInfo
            x-extensible-enum:
            - overview/loanParnterProcessingInfo
            - overview/loanPartnerProcessingInfo/processor
            - overview/statusInfo
            - credit/sendContractDate
            - credit/signContractDate
            - credit/cancelContractDate
            - credit/loans
      discriminator:
        propertyName: path
        mapping:
          overview/loanParnterProcessingInfo: '#/components/schemas/PatchLoanPartnerProcessingInfo'
          overview/loanPartnerProcessingInfo/processor: '#/components/schemas/PatchLoanPartnerProcessorOfSubmission'
          overview/statusInfo: '#/components/schemas/PatchSubmissionStatusInfo'
          credit/sendContractDate: '#/components/schemas/PatchSendContractDate'
          credit/signContractDate: '#/components/schemas/PatchSignContractDate'
          credit/cancelContractDate: '#/components/schemas/PatchCancelContractDate'
          credit/loans: '#/components/schemas/PatchCreditLoans'
    PatchLoanPartnerProcessingInfo:
      type: object
      allOf:
      - $ref: '#/components/schemas/PatchSubmissionOperation'
      - properties:
          value:
            $ref: '#/components/schemas/PatchLoanPartnerProcessingInfoValue'
    PatchLoanPartnerProcessingInfoValue:
      description: |
        EN: Schema to patch the processing info DE: Schema fuer einen Patch der Bearbeitungshinweise
      type: object
      required:
      - unitId
      properties:
        unitId:
          $ref: '#/components/schemas/LoanPartnerProcessingUnitId'
        processorId:
          $ref: '#/components/schemas/LoanPartnerProcessorId'
    PatchLoanPartnerProcessorOfSubmission:
      type: object
      allOf:
      - $ref: '#/components/schemas/PatchSubmissionOperation'
      - properties:
          value:
            $ref: '#/components/schemas/LoanPartnerProcessorId'
    PatchSubmissionStatusInfo:
      description: |
        EN: Schema to patch the submission status DE: Schema fuer einen Patch des Einreichungsstatus
      type: object
      allOf:
      - $ref: '#/components/schemas/PatchSubmissionOperation'
      - properties:
          value:
            $ref: '#/components/schemas/SubmissionStatusInfo'
    PatchSendContractDate:
      description: |
        EN: Schema to patch the contract date of a submission DE: Schema fuer einen Patch des Vertragserstellungsdatums einer Einreichung
      type: object
      allOf:
      - $ref: '#/components/schemas/PatchSubmissionOperation'
      - properties:
          value:
            $ref: '#/components/schemas/ISODate'
    PatchSignContractDate:
      description: |
        EN: Schema to patch the date the contract is signed DE: Schema fuer einen Patch des Datums der Vertragsunterzeichnung
      type: object
      allOf:
      - $ref: '#/components/schemas/PatchSubmissionOperation'
      - properties:
          value:
            $ref: '#/components/schemas/ISODate'
    PatchCancelContractDate:
      description: |
        EN: Schema to patch the date the contract is canceled DE: Schema fuer einen Patch des Widerrufs des Vertrages
      type: object
      allOf:
      - $ref: '#/components/schemas/PatchSubmissionOperation'
      - properties:
          value:
            $ref: '#/components/schemas/ISODate'
    PatchCreditLoans:
      description: |
        EN: Schema to patch the credit loans DE: Schema fuer einen Patch des Darlehens
      type: object
      allOf:
      - $ref: '#/components/schemas/PatchSubmissionOperation'
      - properties:
          value:
            type: array
            items:
              $ref: '#/components/schemas/Loan'
    HandoverReports:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/HandoverReportItem'
    HandoverReportItem:
      type: object
      required:
      - name
      - description
      - createdAt
      - content
      properties:
        name:
          type: string
        description:
          type: string
        createdAt:
          type: string
          format: date-time
        content:
          $ref: '#/components/schemas/ResourceRef'
    ModifyFinancingApplicationCommand:
      type: object
      required:
      - operation
      properties:
        operation:
          type: string
          x-extensible-enum:
          - REPLACE
          - SUBMIT
      discriminator:
        propertyName: operation
        mapping:
          REPLACE: '#/components/schemas/FinancingApplicationReplaceCommand'
          SUBMIT: '#/components/schemas/FinancingApplicationSubmitCommand'
    FinancingApplicationReplaceCommand:
      type: object
      allOf:
      - $ref: '#/components/schemas/ModifyFinancingApplicationCommand'
      - properties:
          operation:
            type: string
            default: REPLACE
          data:
            $ref: '#/components/schemas/FinancingApplicationCommandData'
    FinancingApplicationSubmitCommand:
      type: object
      allOf:
      - $ref: '#/components/schemas/ModifyFinancingApplicationCommand'
      - properties:
          operation:
            type: string
            default: SUBMIT
          submissionRequest:
            $ref: '#/components/schemas/SubmissionRequest'
    SubmissionStatus:
      type: string
      description: |
        EN: Open ended enum contains submission status value, possible values are (CREDIT_ACCEPTED, CREDIT_VERIFIED, ONHOLD, INWORK, REJECTED, CONTRACT_SIGN, CANCELED, REVOKED, SUBMITTED) DE: Mögliche Status der Einreichung (nicht abschließende Aufzählung), z.B. (CREDIT_ACCEPTED, CREDIT_VERIFIED, ONHOLD, INWORK, REJECTED, CONTRACT_SIGN, CANCELED, REVOKED, SUBMITTED)
      example: CREDIT_ACCEPTED
      x-extensible-enum:
      - CREDIT_ACCEPTED
      - CREDIT_VERIFIED
      - ONHOLD
      - INWORK
      - REJECTED
      - CONTRACT_SIGN
      - CANCELED
      - REVOKED
      - SUBMITTED
    SimpleStatus:
      type: object
      allOf:
      - $ref: '#/components/schemas/SubmissionStatusInfo'
    SubmissionStatusOnhold:
      type: object
      required:
      - onHoldReason
      - expectedOnholdDuration
      allOf:
      - $ref: '#/components/schemas/SubmissionStatusInfo'
      - properties:
          onHoldReason:
            $ref: '#/components/schemas/OnHoldReason'
          expectedOnholdDuration:
            $ref: '#/components/schemas/ExpectedOnholdDuration'
    OnHoldReason:
      type: string
      description: |
        EN: Open ended enum contains possible reasons for status 'ONHOLD', possible values are (MISSING_DOCUMENTS, DOCUMENTS_DELIVER_IN_ADDITIONAL, INFORMATION_DELIVER_IN_ADDITIONAL, INFORMATION_DELIVER_IN_ADDITIONAL, CUSTOMER_WISH, SECURE_FINANCING_CONDITIONS, EXPERT_REPORT_IS_CREATED, WATING_FOR_ORIGINAL_CONTRACT, REJECT_SOON, TRANSFER_FOR_FINAL_APPROVEMENT) DE: Mögliche Gruende fur den Status ONHOLD (nicht abschließende Aufzählung), z.B. (MISSING_DOCUMENTS, DOCUMENTS_DELIVER_IN_ADDITIONAL, INFORMATION_DELIVER_IN_ADDITIONAL, INFORMATION_DELIVER_IN_ADDITIONAL, CUSTOMER_WISH, SECURE_FINANCING_CONDITIONS, EXPERT_REPORT_IS_CREATED, WATING_FOR_ORIGINAL_CONTRACT, REJECT_SOON, TRANSFER_FOR_FINAL_APPROVEMENT)
      example: MISSING_DOCUMENTS
      x-extensible-enum:
      - MISSING_DOCUMENTS
      - DOCUMENTS_DELIVER_IN_ADDITIONAL
      - INFORMATION_DELIVER_IN_ADDITIONAL
      - CUSTOMER_WISH
      - SECURE_FINANCING_CONDITIONS
      - EXPERT_REPORT_IS_CREATED
      - WATING_FOR_ORIGINAL_CONTRACT
      - REJECT_SOON
      - TRANSFER_FOR_FINAL_APPROVEMENT
    ExpectedOnholdDuration:
      type: object
      description: |
        EN: Expected duration of status ONHOLD DE: Erwartete Dauer des Status ONHOLD
      required:
      - processingContinuesOn
      - processingTime
      properties:
        processingContinuesOn:
          $ref: '#/components/schemas/ISODate'
        processingTime:
          $ref: '#/components/schemas/Duration'
    SubmissionStatusReject:
      type: object
      required:
      - rejectReason
      allOf:
      - $ref: '#/components/schemas/SubmissionStatusInfo'
      - properties:
          rejectReason:
            type: string
    SubmissionStatusCancel:
      type: object
      required:
      - cancelContractDate
      allOf:
      - $ref: '#/components/schemas/SubmissionStatusInfo'
      - properties:
          cancelContractDate:
            $ref: '#/components/schemas/ISODate'
    OAuthProblem:
      type: object
      description: Error while Authentication
      required:
      - error
      - error_description
      properties:
        error:
          type: string
          description: Summary of the error type
          example: invalid_token
        error_description:
          type: string
          description: Detailed information about the error
          example: Access token expired
    RegisterCover:
      description: |
        EN: General information about the land register sheet DE: Aufschrift des Grundbuchblattes
      type: object
      required:
      - registerCourt
      - registerCity
      - registerVolume
      - registerPage
      properties:
        registerCourt:
          description: |
            EN: Land registery/local court DE: Amtsgericht
          type: string
        registerCity:
          description: |
            EN: City of land register DE: Grundbuchbezirk
          type: string
        registerVolume:
          description: |
            EN: Number of the volume of the land register DE: Nummer des Bandes
          type: string
        registerPage:
          description: |
            EN: Page in the land register DE: Nummer des Blattes
          type: string
    PropertiesRegisterInventory:
      description: |
        EN: Land and property (Entry from the inventory of the land register sheet) DE: Grundstück und Eigentum (Eintrag aus dem Bestandsverzeichnis des Grundbuchblattes)
      type: object
      required:
      - type
      - parcelAndDistrict
      properties:
        type:
          type: string
          x-extensible-enum:
          - OWNERSHIP_INVENTORY
          - JOINT_OWNERSHIP_INVENTORY
        id:
          description: |
            EN: Serial number of the property DE: Laufende Nummer des Grundstücks
          allOf:
          - $ref: '#/components/schemas/PropertyRegisterInventoryId'
        parcelAndDistrict:
          description: |
            EN: Cadastral district and land parcel DE: Gemarktung und Flurstück
          type: object
          allOf:
          - $ref: '#/components/schemas/ParcelAndDistrict'
        parcelDesc:
          description: |
            EN: Economic type and location DE: Wirschaftsart und Lage
          type: string
        parcelSize:
          description: |
            DE: Size of the parcel DE: Größe des Flurstücks
          allOf:
          - $ref: '#/components/schemas/SquareMeter'
      discriminator:
        propertyName: type
        mapping:
          OWNERSHIP_INVENTORY: '#/components/schemas/OwnershipInventory'
          JOINT_OWNERSHIP_INVENTORY: '#/components/schemas/JointOwnershipInventory'
    PropertyRegisterInventoryId:
      type: object
      required:
      - id
      description: |
        EN: Serial number of the property DE: Laufende Nummer eines Grundstücks/Eigentum
      properties:
        id:
          type: string
    ParcelAndDistrict:
      description: |
        EN: Information about the cadastral district and the land parcel DE: Informationen über Gemarktung und Flurstück
      required:
      - parcel
      properties:
        district:
          description: |
            EN: Cadastral district DE: Gemarkung/Bezirk
          type: string
        parcel:
          description: |
            EN: Land parcel DE: Flurstück
          type: string
    OwnershipInventory:
      description: |
        EN: Ownership of a property DE: Eigentum an einem Gründstück/Objekt
      type: object
      allOf:
      - $ref: '#/components/schemas/PropertiesRegisterInventory'
      - properties:
          type:
            type: string
            default: OWNERSHIP_INVENTORY
    JointOwnershipInventory:
      description: |
        EN: Co-ownership of a property DE: Miteigentumsanteil an einem Gründstück/Objekt
      type: object
      allOf:
      - $ref: '#/components/schemas/PropertiesRegisterInventory'
      - properties:
          type:
            type: string
            default: JOINT_OWNERSHIP_INVENTORY
          inventoryUnitProperties:
            description: |
              EN: Special owners associated with this co-ownership DE: Sondereigentümer [Sondereigentum](https://de.wikipedia.org/wiki/Sondereigentum) die mit diesem Miteigentum verbunden sind
            type: array
            items:
              $ref: '#/components/schemas/InventorySpecialProperty'
    InventorySpecialProperty:
      type: object
      properties:
        number:
          description: |
            EN: Number of the special property (e.g. apartment number) DE: Nummer des Sondereigentums (z. B. Wohnungsnummer)
          type: string
        type:
          $ref: '#/components/schemas/SpecialPropertyType'
    SpecialPropertyType:
      type: string
      description: |
        EN: open ended enum contains unit Property details, possible values are (BASEMENT, HOBBY, DRYING_ROOM, ATTIC, OFFICE, APARTMENT, ALL_ROOMS, GARAGE, OUT_PARK, UG_PARK, DUPLEX_PARK, GROUND, TOWNHOUSE_CORNER, TOWNHOUSE_CENTER, SEMIDETACHED_HOUSE) DE: Immobiliendetails (nicht abschließende Aufzählung).
      example: BASEMENT
      x-extensible-enum:
      - BASEMENT
      - HOBBY
      - DRYING_ROOM
      - ATTIC
      - OFFICE
      - APARTMENT
      - ALL_ROOMS
      - GARAGE
      - OUT_PARK
      - UG_PARK
      - DUPLEX_PARK
      - GROUND
      - TOWNHOUSE_CORNER
      - TOWNHOUSE_CENTER
      - SEMIDETACHED_HOUSE
    PropertyRegisterOwnerEntry:
      type: object
      description: |
        EN: Owner (entry from the second section of the land register sheet) DE: Eigentümer (Eintrag aus der zweiten Abteilung des Grundbuchblattes)
      properties:
        owners:
          description: |
            EN: Owner DE: Eigentümer
          type: array
          items:
            $ref: '#/components/schemas/PropertyRegisterOwner'
        inventories:
          description: |
            EN: References to the entries in the inventory DE: Referenzen zu den Einträgen im Bestandsverzeichnis
          type: array
          items:
            $ref: '#/components/schemas/PropertyRegisterInventoryId'
    PropertyRegisterRestriction:
      description: |
        EN: Loads and restrictions (entry from the second section of the land register sheet) DE: Lasten und Beschränkungen (Eintrag aus der zweiten Abteilung des Grundbuchblattes)
      type: object
      properties:
        inventories:
          description: |
            EN: References to the entries in the inventory DE: Referenzen zu den Einträgen im Bestandsverzeichnis
          type: array
          items:
            $ref: '#/components/schemas/PropertyRegisterInventoryId'
        restriction:
          description: |
            EN: Description of loads and restrictions DE: Beschreibung der Lasten und Beschränkungen
          type: string
        effectiveAfterMortgages:
          description: |
            EN: Resets the load/limitation in rank. I.e. is there a possible land charge ranking before this load/restrictions? DE: Tritt die Last/Beschränkung im Rang zurück. D. h. steht eine mögliche Grundschuld im Rang vor dieser Last/Beschränkung?
          type: boolean
    PropertyRegisterMortgage:
      description: |
        EN: Hyptheques, land charges, annuities (entry from the third section of the land register sheet) DE: Hyptheken, Grundschulden, Rentenschulden (Eintrag aus der dritten Abteilung des Grundbuchblattes)
      type: object
      properties:
        serial:
          description: |
            EN: Serial number DE: Laufende Nummer
          type: string
        rank:
          description: |
            EN: cadastral reference DE: Rangstelle im Grundbuch
          type: string
        inventories:
          description: |
            EN: References to the entries in the inventory DE: Referenzen zu den Einträgen im Bestandsverzeichnis
          type: array
          items:
            $ref: '#/components/schemas/PropertyRegisterInventoryId'
        nominalAmount:
          description: |
            EN: Amount entered in the land register DE: Im Grundbuch eingetragener Betrag
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        cessionClaim:
          $ref: '#/components/schemas/CessionClaim'
        creditor:
          description: |
            EN: Creditor DE: Gläubiger
          type: string
        interest:
          description: |
            EN: Interest DE: Dinglicher Zins
          allOf:
          - $ref: '#/components/schemas/PeriodicalPercentage'
        nonRecurringLoanUndertaking:
          description: |
            EN: One-time value DE: Einmalvalutierung siehe [Einmalvalutierung](https://de.wikipedia.org/wiki/Einmalvalutierungserkl%C3%A4rung)
          type: boolean
        auxiliary:
          description: |
            EN: Additional services DE: Nebenleistungen
          allOf:
          - $ref: '#/components/schemas/Percentage'
    CessionClaim:
      type: object
      required:
      - requested
      properties:
        requested:
          description: |
            EN: Flag whether an assignment of the land charge is desired DE: Flag ob eine Abtretung der Grundschuld erwünscht wird
          type: boolean
      discriminator:
        propertyName: requested
        mapping:
          true: '#/components/schemas/CessionClaimRequested'
          false: '#/components/schemas/NoCessionClaim'
    CessionClaimRequested:
      type: object
      description: |
        EN: Information on the assignment of the land charge DE: Informationen zur Abtretung der Grundschuld
      allOf:
      - $ref: '#/components/schemas/CessionClaim'
      - properties:
          requested:
            type: boolean
            default: true
          cessionType:
            $ref: '#/components/schemas/CessionType'
          execSubmission:
            description: |
              EN: Paragraph 800 ZPO (paragraph 800 in code of civil procedure) DE: Paragraph 800 ZPO (https://www.gesetze-im-internet.de/zpo/__800.html)
            type: boolean
          allCustomersLiable:
            description: |
              EN: Liability of all credit takers (applicants) DE: Haftung aller Kreditnehmer (Kunden)
            type: boolean
          newRank:
            description: |
              EN: New claim rank DE: Neuer Anspruchsrang
            type: string
          cessionAmount:
            $ref: '#/components/schemas/EuroAmount'
    CessionType:
      type: string
      description: |
        EN: open ended enum contains type of section III of the land register, possible values are (LETTER, BOOK) DE: Abschnittstyp in der Abteilung III des Grundbuches (nicht abschließende Aufzählung)
      example: LETTER
      x-extensible-enum:
      - LETTER
      - BOOK
    NoCessionClaim:
      type: object
      description: |
        EN: An assignment of this land charge is not desired DE: Eine Abtretung dieser Grundschuld ist nicht erwünscht
      allOf:
      - $ref: '#/components/schemas/CessionClaim'
      - properties:
          requested:
            type: boolean
            default: false
    OfferId:
      type: object
      properties:
        value:
          type: string
    FinancingOfferStatus:
      type: string
      enum:
      - ACCEPTED
      - REJECTED
    OfferFinancingNeed:
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/EuroAmount'
        costs:
          $ref: '#/components/schemas/OfferFinancingNeedCost'
        equity:
          $ref: '#/components/schemas/EuroAmount'
    OfferFinancingNeedCost:
      type: object
      properties:
        mortgageProperty:
          $ref: '#/components/schemas/EuroAmount'
        acquisition:
          $ref: '#/components/schemas/EuroAmount'
    FinancingStructures:
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/EuroAmount'
        interest:
          $ref: '#/components/schemas/PeriodicalPercentage'
        burden:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        components:
          type: array
          items:
            $ref: '#/components/schemas/Loan'
          minItems: 1
    KfwProgram:
      type: string
      description: |
        EN: Open ended enum contains possible programs for Kfw, possible values are (Wohneigen, Wohn159, Energie153-40, Energie151, Energie152, Energie167) DE: KFW-Förderprogramm (nicht abschließende Aufzählung), z.B. (Wohneigen, Wohn159, Energie153-40, Energie151, Energie152, Energie167)
      example: Wohneigen
      x-extensible-enum:
      - Wohneigen
      - Wohn159
      - Energie153-40
      - Energie151
      - Energie152
      - Energie167
    KfwReservationInfo:
      type: object
      description: |
        EN: Additional Information about the Kfw Loan reservations DE: Zusätzliche Informationen zur KFW-Darlehensreservierung
      properties:
        id:
          type: string
          description: |
            EN: Identification nummer for a immediate (Kfw) confirmation DE: Identifizierungsnummer einer sofortigen (Kfw) Bestätigung
        callType:
          $ref: '#/components/schemas/KfwCallType'
        conditionReservationDate:
          $ref: '#/components/schemas/ISODate'
        validity:
          $ref: '#/components/schemas/ISODate'
    KfwCallType:
      type: string
      description: |
        EN: Open ended enum contains Kfw reservation process call type, possible values are (LIGHT, PLUS) DE: Art der KFW-Reservierung (nicht abschließende Aufzählung), z.B. (LIGHT, PLUS)
      example: PLUS
      x-extensible-enum:
      - LIGHT
      - PLUS
    Advisors:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/AdvisorItem'
    AdvisorItem:
      type: object
      properties:
        _href:
          $ref: '#/components/schemas/ResourceRef'
        embedded:
          $ref: '#/components/schemas/Advisor'
    Cursor:
      properties:
        before:
          type: string
        after:
          type: string
    AuxProductType:
      type: string
      description: |
        EN: Open ended enum contains auxiliary loan product types, possible values are (DSL_PRIVAT, OYAK_ANKER, HANSEATIC_ALL) DE: Typ des Nachrangdarlehens (nicht abschließende Aufzählung), z.B. (DSL_PRIVAT, HANSEATIC_ALL)
      example: HANSEATIC_ALL
      x-extensible-enum:
      - DSL_PRIVAT
      - HANSEATIC_ALL
    FinancingApplicationCreationCommand:
      type: object
      required:
      - data
      properties:
        data:
          $ref: '#/components/schemas/FinancingApplicationCommandData'
  parameters:
    applicant-id:
      name: applicantId
      in: path
      required: true
      schema:
        type: string
      description: Id for the requested applicant.
    command-id:
      name: commandId
      in: path
      required: true
      schema:
        type: string
      description: Id of the command
    estate-id:
      name: estateId
      in: path
      required: true
      schema:
        type: string
      description: Id for the requested estate.
    bid-id-query:
      name: bidId
      in: query
      required: false
      schema:
        type: integer
        format: int64
      description: query parameter to restrict submissions associated to the provided
        bid id.
    sbms-correspondence-limit:
      name: limit
      in: query
      description: Specifies how many items to return at one time (max 40). <br> A
        query may return fewer than the value of limit due to filtering.
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 40
        default: 20
    financial-standing-id:
      name: financialStandingId
      in: path
      required: true
      schema:
        type: string
      description: Id for the requested financial standing.
    until:
      name: until
      in: query
      description: A UTC date-time value that points to the end of the range of time-based
        data. <br> If not provided, current date-time is used. Defined by date-time
        - [RFC3339](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
      required: false
      schema:
        type: string
        format: date-time
        example: 2019-12-29T10:22:50Z
    advisor-id:
      name: advisorId
      in: path
      required: true
      schema:
        type: string
      description: Id for the requested advisor
    financial-standing-filter:
      name: type
      in: query
      required: false
      schema:
        type: string
        enum:
        - debt
        - equity
        - income
        - expense
      description: query parameter to restrict financial state associated to the provided
        type.
    submission-id:
      name: submissionId
      in: path
      required: true
      schema:
        type: string
      description: Id for the requested submission.
    advisor-filter:
      name: type
      in: query
      required: false
      schema:
        type: string
        enum:
        - company_submitter
        - consultant
        - executive_submitter
        - regulatory_address
        - regulatory_address_broker
        - regulatory_address_submitter
        - submitter
      description: query parameter to restrict advisors associated to the provided
        type.
    protocol-type-filter:
      name: protocolType
      in: query
      required: false
      schema:
        type: string
        enum:
        - document
        - data
        - status
        - new_submission
      description: query parameter to restrict submissions associated to the provided
        protocol type.
    sbms-sort:
      name: sort
      in: query
      style: form
      required: false
      description: Comma-separated list of fields to define the sort order.<br> To
        indicate sorting direction, fields may be prefixed with `+` ascending or `-`
        descending. <br> **e.g.** /submissions?sort=+id <br> ***Note*** sorting applies
        only within a single result page when multiple pages are returned. <br>
      example: sort=+id
      schema:
        type: array
        items:
          type: string
          enum:
          - +id
          - -id
          - +date
          - -date
    informer-id:
      name: informerId
      in: path
      required: true
      schema:
        type: string
      description: Id for the requested informer
    embed:
      name: embed
      in: query
      style: form
      required: false
      schema:
        type: boolean
      description: Flag to expand or embed sub-resources in the response resource.<br>
        By default is set to `FALSE` where only a **ref** to the sub-resources will
        be returned.<br> By set it to `TRUE` the sub-resources content will be embedded
        in the response which might affect the payload size
    sbms-protocol-limit:
      name: limit
      in: query
      description: Specifies how many items to return at one time (max 40). <br> A
        query may return fewer than the value of limit due to filtering.
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 40
        default: 20
    handover-report-name:
      name: handoverReportName
      in: path
      required: true
      schema:
        type: string
      description: Name for the requested handover report.
    debt-id:
      name: debtId
      in: path
      required: true
      schema:
        type: string
      description: Id for the requested existing mortgage.
    correspondence-item-id:
      name: itemId
      in: path
      required: true
      schema:
        type: string
      description: Id for the requested submission correspondence item.
    correspondence-type-filter:
      name: correspondenceType
      in: query
      required: false
      schema:
        type: string
        enum:
        - message
        - note
      description: query parameter to restrict submissions associated to the provided
        correspondence type.
    sbms-limit:
      name: limit
      in: query
      description: Specifies how many items to return at one time (max 10). <br> A
        query may return fewer than the value of limit due to filtering.
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 10
        default: 10
    sbms-correspondence-sort:
      name: sort
      in: query
      style: form
      required: false
      description: Comma-separated list of fields to define the sort order.<br> To
        indicate sorting direction, fields may be prefixed with `+` ascending or `-`
        descending. <br> **e.g.** /correspondence?sort=+createdAt <br> ***Note***
        sorting applies only within a single result page when multiple pages are returned.
        <br>
      example: sort=+createdAt
      schema:
        type: array
        items:
          type: string
          enum:
          - +createdAt
          - -createdAt
    cursor-after:
      name: after
      in: query
      description: Cursor that points to the end of the page of data that has been
        returned.
      required: false
      schema:
        type: string
    financing-application-id:
      name: financingApplicationId
      in: path
      required: true
      schema:
        type: string
      description: Id of the financing application
    cursor-before:
      name: before
      in: query
      description: Cursor that points to the start of the page of data that has been
        returned.
      required: false
      schema:
        type: string
    since:
      name: since
      in: query
      description: A UTC date-time value that points to the start of the range of
        time-based data. <br> Defined by date-time - [RFC3339](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
      required: true
      schema:
        type: string
        format: date-time
        example: 2019-12-29T10:22:50Z
    sbms-protocol-sort:
      name: sort
      in: query
      style: form
      required: false
      description: Comma-separated list of fields to define the sort order.<br> To
        indicate sorting direction, fields may be prefixed with `+` ascending or `-`
        descending. <br> **e.g.** /protocol?sort=+createdAt <br> ***Note*** sorting
        applies only within a single result page when multiple pages are returned.
        <br>
      example: sort=+createdAt
      schema:
        type: array
        items:
          type: string
          enum:
          - +createdAt
          - -createdAt
