openapi: 3.0.2
info:
  title: Interhyp Submission API
  version: 2.0.0
  contact:
    name: Interhyp AG (Team Provider Excellence)
    email: support_submission_api@interhyp.de
    url: https://www.interhyp.de
  license:
    name: Interhyp AG
  description: |-
    This document describes the RESTful API and resources provided by Interhyp AG.<p> The RESTful API provides access to resources associated with submission process via *URI* paths, a client application will make an HTTP request using standard HTTP methods like *GET, PUT, POST and DELETE* and parse the response in *JSON* format.<p>
    ## API Audience <br/>
    The API is intended to be consumed by clients who want to integrate Interhyp submission process in their own workflow.
    + Financing Partners
    ## API design Principles <br/>
    During API design a set of principles were taken into consideration.
    + API First
    + Mobile First

    > API Endpoints provided by this RESTful API adhere to HTTP methods and hence are divided into two categories:
    + Command Endpoints: represents HTTP methods *POST, PUT, PATCH and DELETE* where side effects are expected after calling such endpoints.
    + Query Endpoints: represents HTTP method *GET* where no side effects could be expected.

    ## Version and URI <br/>
    This documentation is for **version 2** of submission API, which is currently the latest version.<p> The URIs for resources have the following structure: ``` https://<interhyp-url>/submission/v2/<resource-name> ``` <br/> For Example ``` https://api-test.interhyp.de/submission/v2/submissions/my-awesome-submission/financing-application ```
    ## Security <br/>
    ### Authentication <br/>
    In order to grant access to the API resources, every client has to declare his identity using a `JWT` based Token. <br/> `OAuth 2.0` is used to secure all the API endpoints, See [Authentication Concept](docs/partners_authentication.pdf) for more details. <br/>
    ### Authorization and Permissions <br/>
    Access to the API resources is restricted to the target client, where a client may access only the resources that belong to him. Resources belong to a specific client are by no mean accessible by any other client with different identity. <br/>
    ![API Authentication and Authorization](docs/sbm-api-security-diagram.png "API Authentication and Authorization")
    ## Pagination, Expansion, and Deferred Processing <br/>
    Promoting Mobile First design principle requires employing a set of concepts as described below
    ### Pagination
    This API uses *Cursor-based* pagination to improve performance and minimize networks traffic, Pagination is enforced for operations that potentially could return a large collection of items. When a client makes a request to a paginated resource, the response wraps the returned array of values in a JSON object with paging metadata. For example: **<details>
            <summary>Sample Response</summary>**
      ```json
      {
        "data": [
          "_comment: here goes the actual resource collection ..."
        ],
        "paging": {
          "cursor": {
            "before": "string",
            "after": "string"
          },
          "previous": "string",
          "next": "string"
        }
      }
      ```
    </details>

    A cursor refers to a random string of characters which marks a specific item in a collection of data. <br/> The cursor will always point to the item, however it will be invalidated if the item is deleted or removed.
    > Therefore, as a client you shouldn't store cursors or assume that they will be valid in the future.
    A cursor-paginated resource supports the following parameters:
    * **_before_** : This is the cursor that points to the start of the page of data that has been returned.
    * **_after_** : This is the cursor that points to the end of the page of data that has been returned.
    * **_limit_** : This is the maximum number of objects that may be returned. A query may return fewer than the value of limit due to filtering. Do not depend on the number of results being fewer than the limit value to indicate that your query reached the end of the list of data, use the absence of `next` instead as described below.
    * **_previous_** : A Hyperlink that will return the previous page of data. If not included, this is the first page of data.
    * **_next_** : A Hyperlink that will return the next page of data. If not included, this is the last page of data.
    > The Absence of *next* hyperlink indicates that a query reached the end of the available result.
    ### Expansion <br/>
    This API uses *resource expansion*, which means that some parts of a resource are not returned unless specified in the request. This is useful for endpoints that return large resources in order to minimizes network traffic. <br/> The expansion is controlled as following:
    #### Query Parameter
    **_embed_** query parameter controllers which information the endpoint will deliver.
    > **By default:** *embed* query parameter is set to *False*, which means only basic information and a link for details and sub-resources will be returned.
    Setting *embed* query parameter to *True* guides the API to deliver all details and sub-resources associated with the requested resource.

    > **Tip:** Doing so will have a direct impact on the payload size and might affect response time as well.
    We encourage following the provided links to access each specific resource, instead of providing all sub-resources for the returned collection.<br />

    **<details>
            <summary>Sample Response</summary>**
      ```json
        {
          "data": [
            {
              "resource": {
                "href": "http://some-domain/some/link/to/somewhere",
                "embedded": {
                  "resource": [
                    {
                      "detailed-attribute-1": "string",
                      "detailed-attribute-2": "string",
                      "detailed-attribute-3": "2019-11-29T18:24:49.777Z",
                      "detailed-attribute-n": "string"
                    }
                  ]
                }
              }
            }
          ]
        }
      ```
    </details>

    ### Deferred Processing
    Some API endpoints may trigger long-running or computationally expensive tasks. In these cases, the endpoint will schedule an asynchronous command in order not to block the client for the whole processing time and as a result an appropriate *HTTP Status Code* indicates the asynchronous processing and a *commandId* will be returned.

    In order to check for the status of the created command, section **_Commands_** provides *GET* endpoint to retrieve relevant information associated with the created command. For Example ``` GET https://api-test.interhyp.de/submission/v2/commands/my-awesome-command-id ```
    > **Tip:** More details will be provided in the respective endpoint.

    ## API client <br/>
    As an API client you should adhere to the following robustness principle

      + Tolerant Reader: Be tolerant with unknown fields in the payload. This is required to avoid new API versions if
      new fields were added, i.e. ignore new fields but do not eliminate them from payload if needed
      for subsequent *PUT* requests.

      + Be prepared to handle HTTP status codes not explicitly specified in endpoint definitions.


    > **Tip:** In this API Open-Ended list of values (x-extensible-enum) instead of Enumerations are used
    Enumerations are per definition closed sets of values, that are assumed to be complete and not intended for extension. This closed principle of enumerations imposes compatibility issues when an enumeration must be extended.

    This RESTful API has following sections, each interact with a specific part of the submission system.
    + **_submissions_**: Provides endpoints for resources associated with a specific financing partner. For Example, accessing a specific submission resource, or searching all open submissions belong to a specific financing partner within a specific period of time.
    + **_financing-application_**: Provides endpoints for resources not associate to a specific financing partner. Here all information collected from the Applicant during consultation phase could be delivered, such as Personal details, Credit Worthiness, desired Estate, etc ...
    + **_logbook_**: Provides endpoints for submission logbook entries.
    + **_commands_**: Provides endpoints for command resources, see *Deferred Processing*
    + **_protocol_**: Is currently still under design.
    + **_correspondence_**: Is currently still under design.

    This RESTful API was created based on [OpenAPI 3.0 specification](http://spec.openapis.org/oas/v3.0.2)
    By using the [OpenAPI-Spec generator](https://github.com/OpenAPITools/openapi-generator), you can easily generate an API client stub.
    > **Tip:** This API could be also viewed in [swagger editor](https://editor.swagger.io/) by copy/paste the content of this document in the editor.
servers:
- url: https://api-test.interhyp.de/submission
  description: Test-Staging
- url: https://api.interhyp.de/submission
  description: Production
tags:
- name: submissions
  description: provides endpoints for submission resources associated with a specific
    financing partner
- name: financing-application
  description: provides endpoints for financing application resources not associate
    to a specific financing partner
- name: commands
  description: provides endpoints for command resources
- name: logbook
  description: provides endpoints to access submission logbook
paths:
  /v2/submissions/{submissionId}/calculations/{calculationType}:
    get:
      summary: Get calculation data
      description: |-
        Delivers calculation basics for specified calculation type.
        Calculation type options:
          - CONDITION (Konditionskalkulation)

          - HOUSEHOLD (HH-Rechnung)

          - LENDING_VALUE (Beleihungswert)
      operationId: getSubmissionCalculationByType
      tags:
      - submissions
      parameters:
      - $ref: '#/components/parameters/submission-id'
      - $ref: '#/components/parameters/calculation-type'
      responses:
        '200':
          description: Requested calculation data is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calculations'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/commands/{commandId}:
    get:
      summary: Get an existing command
      description: |
        Delivers information about an existing command

        A Command is a unit of execution which has been created to perform asynchronous operation.
      operationId: getCommandsById
      tags:
      - commands
      parameters:
      - $ref: '#/components/parameters/command-id'
      responses:
        '200':
          description: Command is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Command'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested command resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/submissions/correspondence:
    get:
      summary: Delivers all submissions correspondence for a provider
      description: Delivers a collection of submission correspondence among involved
        submission process parties for a specific provider filtered by the date of
        correspondence.<p> *By Default*, we will return the first *20* matching records.
        However, this is not a hard limitation! a parameter called `limit` can be
        used to tell the API how many records you want to return all at once *(max
        40)*.<p> To get further matching records, a parameter called `after` or `before`
        can be used to tell the API the start of each page using specified cursor.<p>
        To navigate through the query result, a reference to the following navigations
        are included in the response *(next, prev, first, last, self)*.
      operationId: getSubmissionsCorrespondence
      tags:
      - correspondence
      parameters:
      - $ref: '#/components/parameters/since'
      - $ref: '#/components/parameters/until'
      - $ref: '#/components/parameters/correspondence-type-filter'
      - $ref: '#/components/parameters/sbms-correspondence-limit'
      - $ref: '#/components/parameters/cursor-after'
      - $ref: '#/components/parameters/cursor-before'
      - $ref: '#/components/parameters/embed'
      responses:
        '200':
          description: A paged array of submissions correspondence
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionCorrespondence'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/submissions/{submissionId}/correspondence:
    get:
      summary: Get correspondence for a specific submission
      description: Delivers detailed information about correspondence among involved
        submission process  parties associated with a specific submission. By default
        the result will be sorted based on createdAt ascending.
      operationId: getCorrespondenceBySubmissionId
      tags:
      - correspondence
      parameters:
      - $ref: '#/components/parameters/submission-id'
      - $ref: '#/components/parameters/correspondence-type-filter'
      - $ref: '#/components/parameters/sbms-correspondence-sort'
      responses:
        '200':
          description: Submission correspondence are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Correspondence'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
    post:
      summary: Create new correspondence for a specific submission
      operationId: createSubmissionCorrespondence
      tags:
      - correspondence
      parameters:
      - $ref: '#/components/parameters/submission-id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CorrespondenceItem'
      responses:
        '201':
          description: Correspondence was created
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
          headers:
            Location:
              schema:
                type: string
                description: Link to retrieve a specific resource
                example: http://some-domain/some/link/to/somewhere
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
    delete:
      summary: Delete correspondence assocaited with a specific submission
      operationId: deleteSubmissionCorrespondence
      tags:
      - correspondence
      parameters:
      - $ref: '#/components/parameters/submission-id'
      responses:
        '204':
          description: Submission correspondence are deleted
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/submissions/{submissionId}/correspondence/{itemId}:
    get:
      summary: Get a specific submission correspondence item
      description: Delivers detailed information about a specific submission correspondence
        item.
      operationId: getSubmissionCorrespondenceById
      tags:
      - correspondence
      parameters:
      - $ref: '#/components/parameters/correspondence-item-id'
      - $ref: '#/components/parameters/submission-id'
      responses:
        '200':
          description: Submission corresponcence item is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorrespondenceItem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
    delete:
      summary: Delete a specific submission correspondence item
      operationId: deleteSubmissionCorrespondenceById
      tags:
      - correspondence
      parameters:
      - $ref: '#/components/parameters/correspondence-item-id'
      - $ref: '#/components/parameters/submission-id'
      responses:
        '204':
          description: Submission correspondence item is deleted
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
    put:
      summary: Override a specific submission correspondence item
      operationId: overrideSubmissionCorrespondenceById
      tags:
      - correspondence
      parameters:
      - $ref: '#/components/parameters/correspondence-item-id'
      - $ref: '#/components/parameters/submission-id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CorrespondenceItem'
      responses:
        '204':
          description: Submission correspondence item is updated
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/commands:
    post:
      summary: Create a new financing application
      description: |
        EN: Create a new financing application with detailed information about the consultation application.
      operationId: createFinancingApplication
      tags:
      - financing-application
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinancingApplicationCreationCommand'
      responses:
        '201':
          description: Reference to the created resource.
          headers:
            Location:
              schema:
                type: string
                description: |
                  DE: Link zu einer spezifischen Ressource. <br/> EN: Link to retrieve a specific resource
                example: http://some-domain/some/link/to/somewhere
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancingApplicationCreationCommandResponse'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/commands:
    post:
      summary: Modify an existing financing application
      description: |
        EN: Create an command to Modify an existing financing application.
      operationId: modifyFinancingApplication
      tags:
      - financing-application
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyFinancingApplicationCommand'
      responses:
        '201':
          description: Reference to the created resource.
          headers:
            Location:
              schema:
                type: string
                description: |
                  DE: Link zu einer spezifischen Ressource. <br/> EN: Link to retrieve a specific resource
                example: http://some-domain/some/link/to/somewhere
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandId'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}:
    get:
      summary: Get a exisiting financing application
      description: |
        Delivers information about existing financing application
      operationId: getFinancingApplicationById
      tags:
      - financing-application
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      - $ref: '#/components/parameters/embed'
      responses:
        '200':
          description: Financing application is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancingApplication'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested financing application resource
            was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/applicant-relationships:
    get:
      summary: Get a list of applicant-relationships
      description: |
        Delivers information about the relationship of the applicants involved in this financing application.
      operationId: getApplicantRelationshipsByFinancingApplicationId
      tags:
      - financing-application
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      responses:
        '200':
          description: requested applicant relationsships are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicantRelationshipsQuery'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that the financing application resource was
            not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/households:
    get:
      summary: Get applicants household
      description: Delivers detailed information about the applicants households associated
        with this financing application.
      operationId: getHouseholdsByFinancingApplicationId
      tags:
      - financing-application
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      responses:
        '200':
          description: Requested households information are returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HouseholdsQuery'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/applicants:
    get:
      summary: Get applicants for a specific submission package.
      description: Delivers detailed information for applicants associated with this
        submission.
      operationId: getApplicantsByFinancingApplicationId
      tags:
      - financing-application
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      - $ref: '#/components/parameters/embed'
      responses:
        '200':
          description: Requested applicants are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Applicants'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/applicants/{applicantId}:
    get:
      summary: Get a specific mortgage applicant
      description: Delivers detailed information for mortgage applicant by his id.
      operationId: getApplicantById
      tags:
      - financing-application
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      - $ref: '#/components/parameters/applicant-id'
      responses:
        '200':
          description: Requested applicant is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Applicant'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested applicant resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/estates:
    get:
      summary: Get estates for a specific financing application.
      description: Delivers detailed information for the estates associated with this
        financing application. Estate could have a role as an object to be financed,
        an equity item or a guarantee (security).
      operationId: getEstatesByFinancingApplicationId
      tags:
      - financing-application
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      - $ref: '#/components/parameters/embed'
      responses:
        '200':
          description: Requested estates are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Estates'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested financing application resource
            was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/estates/{estateId}:
    get:
      summary: Get a specific estate.
      description: Delivers detailed information for an estate by it's id.
      operationId: getEstateById
      tags:
      - financing-application
      parameters:
      - $ref: '#/components/parameters/estate-id'
      - $ref: '#/components/parameters/financing-application-id'
      responses:
        '200':
          description: Requested estate is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Estate'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested mortgage property resource
            was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/venture:
    get:
      summary: Get financing venture
      description: Delivers detailed information about the financing venture associated
        with this financing application.
      operationId: getVentureByFinancingApplicationId
      tags:
      - financing-application
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      responses:
        '200':
          description: Requested financing venture is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancingVenture'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/consultation:
    get:
      summary: Get financing consultation
      description: Delivers detailed information about the consultation associated
        with this financing application.
      operationId: getConsultationByFinancingApplicationId
      tags:
      - financing-application
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      responses:
        '200':
          description: Requested financing consultation returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consultation'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/financial-standings:
    get:
      summary: Get applicants financial standings
      description: |-
        Delivers detailed information about the applicants financial standings associated with this financing application as provided by the applicant during the consultation phase.

        Including periodical Income, Expenses, General Equity and Debts
      operationId: getFinanceStandingsByFinancingApplicationId
      tags:
      - financing-application
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      - $ref: '#/components/parameters/financial-standing-filter'
      - $ref: '#/components/parameters/embed'
      responses:
        '200':
          description: Requested financial standings associated with this financing
            application are returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialStandings'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/applicants/{applicantId}/financial-standings:
    get:
      summary: Get applicant financial standings
      description: |-
        Delivers detailed information about an applicant financial standings associated with this financing application.

        Including periodical income, expenses, general equity and debts
      operationId: getFinanceStandingsForApplicant
      tags:
      - financing-application
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      - $ref: '#/components/parameters/applicant-id'
      - $ref: '#/components/parameters/financial-standing-filter'
      - $ref: '#/components/parameters/embed'
      responses:
        '200':
          description: Requested applicant financial standings are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialStandings'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/financial-standings/{financialStandingId}:
    get:
      summary: Get a specific financial standing
      description: |-
        Delivers detailed information about a specific financial standing associated with this submission package.

        Including periodical income, expenses, general equity and debts
      operationId: getFinanceStandingsById
      tags:
      - financing-application
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      - $ref: '#/components/parameters/financial-standing-id'
      responses:
        '200':
          description: Requested financial standing is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialStanding'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/financial-standings/existing-loans/{debtId}:
    get:
      summary: Get a specific existing loan.
      description: Delivers detailed information for existing loan by it's id.
      operationId: getExistingLoanById
      tags:
      - financing-application
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      - $ref: '#/components/parameters/debt-id'
      responses:
        '200':
          description: Requested existing loan is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExistingLoanDebt'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested existing morgage resource
            was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/informers:
    get:
      summary: Get consultation informers
      description: |-
        Delivers detailed information about the consultation informers associated with this submission.

        This endpoint utilizes *Expansion* feature, where *by default* only basic information shall be returned. In order to access more full details, two options are available

          - follow provided links in order to navigate to submission sub-resources (i.e /v2/submissions/{submissionId}/overview)

          - initiate the call with request parameter `embed` set to *TRUE* (i.e /v2/submissions/{submissionId}?embed=true)

        Please refer to *Expansion* section for more details.
      operationId: getFinancingApplicationInformers
      tags:
      - financing-application
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      - $ref: '#/components/parameters/embed'
      responses:
        '200':
          description: Requested mortgage informers are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Informers'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/informers/{informerId}:
    get:
      summary: Get a specific mortgage informer
      description: Delivers detailed information for mortgage informer by his id.
      operationId: getFinancingApplicationInformerById
      tags:
      - financing-application
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      - $ref: '#/components/parameters/informer-id'
      responses:
        '200':
          description: Requested informer is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Informer'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested informer resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/offer:
    get:
      summary: Get financing offer
      description: Delivers detailed information about the financing offer associated
        with this financing application.
      operationId: getOfferByFinancingApplicationId
      tags:
      - financing-application
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      responses:
        '200':
          description: Requested financing offer is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancingOffer'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/submissions:
    get:
      summary: Get financing application's submission
      description: Delivers detailed information about the submission belong to specific
        loan partner and associated with this financing application.
      operationId: getSubmissionsByFinancingApplicationId
      tags:
      - financing-application
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      responses:
        '200':
          description: Requested Submissions is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submissions'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/submissions/{submissionId}/logbook:
    get:
      summary: Get submission logbook entries
      description: Delivers detailed information about logbook entries associated
        with a specific submission.
      operationId: getLogbookBySubmissionId
      tags:
      - logbook
      parameters:
      - $ref: '#/components/parameters/submission-id'
      responses:
        '200':
          description: Submission logbook entries are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionLogbook'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/submissions/{submissionId}/protocol:
    get:
      summary: Get protocol for a specific submission
      description: Delivers detailed information about protocol associated with a
        specific submission. By default the result will be sorted based on createdAt
        ascending.
      operationId: getProtocolBySubmissionId
      tags:
      - protocol
      parameters:
      - $ref: '#/components/parameters/submission-id'
      - $ref: '#/components/parameters/protocol-type-filter'
      - $ref: '#/components/parameters/sbms-protocol-sort'
      responses:
        '200':
          description: Submission protocol are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Protocol'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/submissions/{submissionId}/legacy-commands:
    post:
      deprecated: true
      summary: Endpoint for legacy submission commands.
      description: |
        This endpoint gives a possibility to modify an existing submission asynchronously by creating a legacy command to perform this operation, as a result a *command id* shall be returned.

        This Endpoint is for internal uses and servers a legacy status handling. The Endpoint will reach End Of Life in further minor releases.
      operationId: modifySubmissionLegacy
      tags:
      - legacy-submission
      parameters:
      - $ref: '#/components/parameters/submission-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifySubmissionLegacyCommand'
      responses:
        '201':
          description: Reference to the created resource.
          headers:
            Location:
              schema:
                type: string
                description: |
                  DE: Link zu einer spezifischen Ressource <br/> EN: Link to retrieve a specific resource
                example: http://some-domain/some/link/to/somewhere
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandId'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/financing-applications/{financingApplicationId}/legacy-commands:
    post:
      deprecated: true
      summary: Endpoint for legacy financing application commands.
      description: |
        This endpoint gives a possibility to modify an existing financing application asynchronously by creating a legacy command to perform this operation, as a result a *command id* shall be returned.

        This Endpoint is for internal uses and servers a legacy status handling. The Endpoint will reach End Of Life in further minor releases.
      operationId: modifyFinancingApplicationLegacy
      tags:
      - legacy-submission
      parameters:
      - $ref: '#/components/parameters/financing-application-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyFinancingApplicationLegacyCommand'
      responses:
        '201':
          description: Reference to the created resource.
          headers:
            Location:
              schema:
                type: string
                description: |
                  DE: Link zu einer spezifischen Ressource <br/> EN: Link to retrieve a specific resource
                example: http://some-domain/some/link/to/somewhere
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandId'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/submissions/{submissionId}/legacy-documents:
    post:
      deprecated: true
      summary: Endpoint for uploading submisison document using it's metadata.
      operationId: uploadSubmissionDocument
      tags:
      - legacy-submission
      parameters:
      - $ref: '#/components/parameters/submission-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadSubmissionDocumentLegacyCommand'
      responses:
        '201':
          description: Reference to the created resource.
          headers:
            Location:
              schema:
                type: string
                description: |
                  DE: Link zu einer spezifischen Ressource <br/> EN: Link to retrieve a specific resource
                example: http://some-domain/some/link/to/somewhere
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandId'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/submissions:
    get:
      summary: Delivers all active submissions for a specific financing partner.
      description: |
        This endpoint gives a possibility to retrieve information about active submissions that belong to a specific financing partner
        filtered by submission date using `since` query parameter.

        **Tip:** A submission is considered to be active, when it has not been revoked.

        *By Default*, we will return the first *20* matching records. However, this is not a hard limitation! `limit` parameter can be used
        to tell the API how many records you want to receive at once *(max 50)*.</br>

        To get further matching records, `after` or `before` parameters can be used to tell the API the start of each page using specified
        cursor.</br>

        To navigate through the query result, a reference to the following navigations are included in the response *(next, previous)*.
      operationId: getSubmissions
      tags:
      - submissions
      parameters:
      - $ref: '#/components/parameters/since'
      - $ref: '#/components/parameters/until'
      - $ref: '#/components/parameters/sbms-limit'
      - $ref: '#/components/parameters/cursor-after'
      - $ref: '#/components/parameters/cursor-before'
      - $ref: '#/components/parameters/sbms-sort'
      responses:
        '200':
          description: A paged array of submissions matching the provided criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submissions'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/submissions/{submissionId}/commands:
    post:
      summary: Modify an existing submission.
      description: |
        This endpoint gives a possibility to modify an existing submission asynchronously by creating a command to perform this operation, as a result a *command id* shall be returned.

        In order to follow up the command execution result, a call to `/v2/commands` endpoint could be made providing the *command id*
      operationId: modifySubmission
      tags:
      - submissions
      parameters:
      - $ref: '#/components/parameters/submission-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifySubmissionCommand'
      responses:
        '201':
          description: Reference to the created resource.
          headers:
            Location:
              schema:
                type: string
                description: |
                  DE: Link zu einer spezifischen Ressource <br/> EN: Link to retrieve a specific resource
                example: http://some-domain/some/link/to/somewhere
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandId'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/submissions/{submissionId}:
    get:
      summary: Get a specific submission
      description: |-
        This endpoint gives a possibility to retrieve information about a specific submission using it's id.
        A submission (Kreditantrag) holds all the information in order to help the financing partners during credit decision phase.

        This endpoint utilizes *Expansion* feature, where *by default* only basic information shall be returned. In order to access more full details, two options are available

          - follow provided links in order to navigate to submission sub-resources (i.e /v2/submissions/{submissionId}/overview)

          - initiate the call with request parameter `embed` set to *TRUE* (i.e /v2/submissions/{submissionId}?embed=true)

        Please refer to *Expansion* section for more details.
      operationId: getSubmissionById
      tags:
      - submissions
      parameters:
      - $ref: '#/components/parameters/submission-id'
      - $ref: '#/components/parameters/embed'
      responses:
        '200':
          description: Requested submission is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submission'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/submissions/{submissionId}/financing-application:
    get:
      summary: Get a submitted financing application
      description: |
        Delivers information about existing financing application associated with a specific submission.

        A Financing Application holds all the information which have been collected from the Applicants during the consultation phase. Holds information regarding
          - Applicants Personal details

          - Applicants Credit Worthiness

          - Estates involved in the financing process

          - Venture

          - Consultation Unit

          - Offer


        This endpoint utilizes *Expansion* feature, where *by default* only basic information shall be returned. In order to access more full details, two options are available

          - follow provided links in order to navigate to financing-application sub-resources (i.e /v2/financing-applications/{applicationId}/estates)

          - initiate the call with request parameter `embed` set to *TRUE* (i.e /v2/submissions/{submissionId}/financing-application?embed=true)

        Please refer to *Expansion* section for more details.
      operationId: getSubmissionFinancingApplication
      tags:
      - submissions
      parameters:
      - $ref: '#/components/parameters/submission-id'
      - $ref: '#/components/parameters/embed'
      responses:
        '200':
          description: Financing application is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancingApplication'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested financing application resource
            was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/submissions/{submissionId}/overview:
    get:
      summary: Get the overview for a submission
      description: Delivers an overview for the requested submission.
      operationId: getSubmissionOverview
      tags:
      - submissions
      parameters:
      - $ref: '#/components/parameters/submission-id'
      responses:
        '200':
          description: Requested overview of the submission is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionOverview'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/submissions/{submissionId}/credit-loans/{creditLoanId}:
    get:
      summary: Get a specific credit loan
      description: |-
        Delivers detailed information about a specific credit loan associated with this submission.

        A Credit Loan represents specific financing structure component.
      operationId: getSubmissionCreditLoanById
      tags:
      - submissions
      parameters:
      - $ref: '#/components/parameters/submission-id'
      - $ref: '#/components/parameters/credit-loan-id'
      responses:
        '200':
          description: Requested Credit Loan Details are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditLoan'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/submissions/{submissionId}/handover/reports:
    get:
      summary: Get handover reports
      description: |-
        Delivers metadata regarding the system generated reports for a specific submission.
        Handover reports including but not limited to
          - Übergabeprotokoll

          - Provideranschreiben

          - Überarbeiteter Antrag

          - Kalkulation

          - HH-Rechnung

        Handover reports are associated with a specific financing structure context (i.e `Main` or `Nachrang` component).
      operationId: getSubmissionHandoverReports
      tags:
      - submissions
      parameters:
      - $ref: '#/components/parameters/submission-id'
      responses:
        '200':
          description: Requested handover reports are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HandoverReports'
        '202':
          description: Payload is being prepared, try again later
          headers:
            Retry-After:
              schema:
                type: integer
              description: payload is expected to be ready after the specified amout
                of seconds
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/submissions/{submissionId}/handover/reports/{name}:
    get:
      summary: Get a specific handover report as `PDF`
      description: Delivers detailed information about a specific handover report
        as `PDF` document.
      operationId: getSubmissionHandoverReportByName
      tags:
      - submissions
      parameters:
      - $ref: '#/components/parameters/submission-id'
      - $ref: '#/components/parameters/handover-report-name'
      responses:
        '200':
          description: Requested handover report is returned
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/HandoverReportBinary'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission resource was not
            found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /v2/submissions/{submissionId}/uploaded-documents/{documentId}/content:
    get:
      summary: Get a specific submission document as `PDF`
      description: Delivers detailed information about a specific submission document
        as `PDF` document.
      operationId: getSubmissionDocumentById
      tags:
      - submissions
      parameters:
      - $ref: '#/components/parameters/submission-id'
      - $ref: '#/components/parameters/document-id'
      responses:
        '200':
          description: Requested submission document is returned
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/SubmissionDocumentBinary'
        '400':
          description: Error indicates missing or wrong request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '401':
          description: Error indicates no access to the required resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProblem'
        '404':
          description: Error indicates that a requested submission document resource
            was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
security:
- BearerAuth: []
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    CountryCode:
      type: object
      description: |
        DE: Ländercode nach ISO_3166-1_alpha-2 (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). <br/> EN: Official ISO_3166-1_alpha-2 (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code.
      required:
      - value
      properties:
        value:
          type: string
          example: DE
          pattern: ^[A-Z]{2}$
    SubmissionStatus:
      type: string
      description: |
        EN: Open ended enum contains submission status value, possible values are (CREDIT_ACCEPTED, CREDIT_CONFIRMED, ONHOLD, INWORK, REJECTED, CONTRACT_SIGN, CANCELED, REVOKED, SUBMITTED) DE: Mögliche Status der Einreichung (nicht abschließende Aufzählung), z.B. (CREDIT_ACCEPTED, CREDIT_CONFIRMED, ONHOLD, INWORK, REJECTED, CONTRACT_SIGN, CANCELED, REVOKED, SUBMITTED)
      example: CREDIT_ACCEPTED
      x-extensible-enum:
      - CREDIT_ACCEPTED
      - CREDIT_CONFIRMED
      - ONHOLD
      - INWORK
      - REJECTED
      - CONTRACT_SIGN
      - CANCELED
      - REVOKED
      - SUBMITTED
    OtherCapitalFinancing:
      description: |
        DE: Finanzierungsrelevante Information zur Kapitalbeschaffung. <br/>
        EN: Financing-relevant information about the raising capital need.
      type: object
      required:
      - neededLoan
      allOf:
      - $ref: '#/components/schemas/OwnEstateFinancingNeed'
      - properties:
          reason:
            type: string
            default: OTHER_CAPITAL
          neededLoan:
            $ref: '#/components/schemas/OtherCapitalNeededLoan'
    OwnEstateFinancingNeed:
      type: object
      required:
      - reason
      allOf:
      - $ref: '#/components/schemas/FinancingNeed'
      - properties:
          type:
            type: string
            default: OWN
          reason:
            type: string
          renovationCosts:
            description: |
              DE: Werterhaltende Maßnahmen <br/> EN: Value-conserving actions
            allOf:
            - $ref: '#/components/schemas/EuroAmount'
          plannedModernisations:
            $ref: '#/components/schemas/PlannedModernisations'
          reschedulingMortgages:
            description: |
              DE: Darlehen die umgeschuldet werden sollen <br/> EN: Mortgage which is to be rescheduled
            type: array
            items:
              allOf:
              - $ref: '#/components/schemas/ExistingMortgageRef'
      discriminator:
        propertyName: reason
        mapping:
          DEBT_RESCHEDULING: '#/components/schemas/DebtReschedulingFinancing'
          OTHER_CAPITAL: '#/components/schemas/OtherCapitalFinancing'
          RENOVATE: '#/components/schemas/RenovateEstateFinancing'
    FinancingNeed:
      type: object
      required:
      - type
      properties:
        additionalCosts:
          $ref: '#/components/schemas/EstateAdditionalCosts'
        type:
          type: string
      discriminator:
        propertyName: type
        mapping:
          OWN: '#/components/schemas/OwnEstateFinancingNeed'
          FOREIGN: '#/components/schemas/ForeignEstateFinancingNeed'
    EstateAdditionalCosts:
      type: object
      properties:
        inventoryCosts:
          $ref: '#/components/schemas/EuroAmount'
        otherCosts:
          $ref: '#/components/schemas/EuroAmount'
        description:
          type: string
    ForeignEstateFinancingNeed:
      type: object
      required:
      - reason
      allOf:
      - $ref: '#/components/schemas/FinancingNeed'
      - properties:
          type:
            type: string
            default: FOREIGN
          reason:
            type: string
          estateAcquisitionCosts:
            $ref: '#/components/schemas/EstateAcquisitionCosts'
      discriminator:
        propertyName: reason
        mapping:
          BUILD: '#/components/schemas/BuildEstateFinancing'
          BUY_EXISTING: '#/components/schemas/BuyExistingEstateFinancing'
          BUY_NEW: '#/components/schemas/BuyNewEstateFinancing'
    EstateAcquisitionCosts:
      type: object
      description: |
        DE: Kosten für den Erwerb der Immobilie. <br/> EN: Estate costs when purchasing a property.
      properties:
        brokerage:
          description: |
            DE: Maklercourtage. <br/>
            EN: Broker costs.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        costsNotary:
          description: |
            DE: Notar-/ Grundbuchkosten <br/>
            EN: Notary costs.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        purchaseTax:
          description: |
            DE: Grunderwerbsteuer. <br/>
            EN: Purchase tax.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
    BuildEstateFinancing:
      description: |
        DE: Finanzierungsrelevante Information zu dem Bau der Immobilie. <br/>
        EN: Financing-relevant information for the construction of the property.
      type: object
      required:
      - buildCosts
      allOf:
      - $ref: '#/components/schemas/ForeignEstateFinancingNeed'
      - properties:
          reason:
            type: string
            default: BUILD
          buildCosts:
            $ref: '#/components/schemas/EstateBuildingCosts'
          completionDate:
            description: |
              DE: Geplante Fertigstellung. <br/>
              EN: Planed completion date.
            allOf:
            - $ref: '#/components/schemas/ISODate'
    EstateBuildingCosts:
      description: |
        DE: Sammlung aller Kosten, die für den Bau der Immobilie relevant sind. <br/>
        EN: All costs associated with construction of the property.
      type: object
      required:
      - construction
      properties:
        landPrice:
          description: |
            DE: Grundstückpreis. <br/>
            EN: Land price.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        construction:
          description: |
            DE: Baukosten. <br/>
            EN: Construction costs.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        additional:
          description: |
            DE: Zusätzliche Kosten. <br/>
            EN: Additional costs.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        outside:
          description: |
            DE: Kosten der Außenanlagen. <br/>
            EN: Cost of the outdoor facilities.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
    ISODate:
      description: |
        DE: Datum, Syntax nach <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339</a><br/> EN: Date according to <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339</a>
      type: string
      format: date
      example: 2019-12-29T00:00:00Z
    BuyExistingEstateFinancing:
      description: |
        DE: Finanzierungsrelevante Information zu dem Kauf bestehender Neubauimmobilie. <br/>
        EN: Financing-relevant information for the purchase of an existing property.
      type: object
      required:
      - purchasePrice
      allOf:
      - $ref: '#/components/schemas/ForeignEstateFinancingNeed'
      - properties:
          reason:
            type: string
            default: BUY_EXISTING
          renovationCosts:
            description: |
              DE: Summe der durchgeführten wertsteigernden Maßnahmen bei der Renovierung. <br/> EN: Sum of completed value-enhancing refurbishments.
            allOf:
            - $ref: '#/components/schemas/EuroAmount'
          plannedModernisations:
            $ref: '#/components/schemas/PlannedModernisations'
          purchasePrice:
            description: |
              DE: Kaufpreis der Immobilie. <br/>
              EN: Purchase price of the property.
            allOf:
            - $ref: '#/components/schemas/EuroAmount'
          priceDue:
            description: |
              DE: Fälligkeit des Kaufpreises. <br/>
              EN: Due date of the purchase price.
            allOf:
            - $ref: '#/components/schemas/ISODate'
    BuyNewEstateFinancing:
      type: object
      description: |
        DE: Finanzierungsrelevante Information zum Kauf der Neubauimmobilie. <br/>
        EN: Financing-relevant information for the purchase of a newly built property.
      required:
      - purchasePrice
      allOf:
      - $ref: '#/components/schemas/ForeignEstateFinancingNeed'
      - properties:
          reason:
            type: string
            default: BUY_NEW
          optionalEquipment:
            description: |
              DE: Kosten für Sonderausstattungen. <br/>
              EN: Special / optional equipment costs.
            allOf:
            - $ref: '#/components/schemas/EuroAmount'
          purchasePrice:
            description: |
              DE: Kaufpreis des Objekts. <br/>
              EN: Purchase price.
            allOf:
            - $ref: '#/components/schemas/EuroAmount'
          priceDue:
            description: |
              DE: Fälligkeit des Kaufpreises. <br/>
              EN: Due date of the purchase price.
            allOf:
            - $ref: '#/components/schemas/ISODate'
    EuroAmount:
      type: object
      required:
      - value
      properties:
        value:
          type: number
          format: double
    PlannedModernisations:
      type: object
      description: |
        DE: Wertsteigernde Maßnahmen bei der Modernisierung <br/> EN: Value-enhancing renovations
      properties:
        amount:
          description: |
            DE: Modernisierungskosten <br/>
            EN: Modernisation costs
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        addedValue:
          description: |
            DE: Wert erreicht durch Modernisierungsmaßnahmen <br/>.
            EN: Added value achieved with modernisation
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        description:
          type: string
        breakdown:
          description: |
            DE: Detailinformation über die geplanten Modernisierungsmaßnahmen <br/>
            EN: Details about planed modernisations
          type: array
          items:
            $ref: '#/components/schemas/PlannedModernisation'
    PlannedModernisation:
      type: object
      description: |
        DE: Information über die geplante Modernisierungen. <br/>
        EN: Information about planed modernisations.
      required:
      - planedCosts
      properties:
        modernisationTypeAndScope:
          $ref: '#/components/schemas/ModernisationTypeAndScope'
        planedCosts:
          description: |
            DE: Geplanten Modernisierungskosten. <br/>
            EN: Planed modernisation costs.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        valueAddingCosts:
          description: |
            DE: Kosten für die wertsteigernden Modernisierungsmaßnahmen. <br/>
            EN: Costs associated with value adding modernisations.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
    ExistingMortgageRef:
      type: object
      description: |
        DE: Id und Referenz zu einer bestehenden Hypothek. <br/>
        EN: Id and reference to the existing mortgage.
      required:
      - id
      properties:
        _href:
          $ref: '#/components/schemas/ResourceRef'
        id:
          $ref: '#/components/schemas/DebtId'
    DebtReschedulingFinancing:
      description: |
        DE: Finanzierungsrelevante Information zur Anschlussfinanzierung / Umschuldung. <br/>
        EN: Financing-relevant information for the follow-up financing / rescheduling.
      type: object
      allOf:
      - $ref: '#/components/schemas/OwnEstateFinancingNeed'
      - properties:
          reason:
            type: string
            default: DEBT_RESCHEDULING
          additionalLoan:
            $ref: '#/components/schemas/EstateAdditionalLoan'
    EstateAdditionalLoan:
      description: |
        DE: Information über ein bestehendes Darlehen (Hypothek). <br/>
        EN: Information about the already existing mortgage.
      type: object
      required:
      - amount
      properties:
        amount:
          description: |
            DE: Darlehenssumme. <br/>
            EN: Loan amount.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        description:
          type: string
        usage:
          $ref: '#/components/schemas/EstateAdditionalLoanUsage'
    EstateAdditionalLoanUsage:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/EstateAdditionalLoanUsageKey'
    EstateAdditionalLoanUsageKey:
      type: string
      description: |
        DE: Zusätzliche Verwendung der Hypothek (nicht abschließende Aufzählung), z.B. OPERATIONAL_COSTS, REPAY_ANOTHER_LOAN, PREPAYMENT_PENALTY, CONSTRUCTION, RENOVATION, OTHER. <br/> EN: Open ended enum contains possible estate additional loan usages, possible values are OPERATIONAL_COSTS, REPAY_ANOTHER_LOAN, PREPAYMENT_PENALTY, CONSTRUCTION, RENOVATION, OTHER.
      example: OPERATIONAL_COSTS
      x-extensible-enum:
      - OPERATIONAL_COSTS
      - REPAY_ANOTHER_LOAN
      - PREPAYMENT_PENALTYC
      - CONSTRUCTION
      - RENOVATION
      - OTHER
    RenovateEstateFinancing:
      description: |
        DE: Finanzierungsrelevante Information zum Umbau / Modernisierung. <br/>
        EN: Financing-relevant information for the refurbishment / modernisation.
      allOf:
      - $ref: '#/components/schemas/OwnEstateFinancingNeed'
      properties:
        reason:
          type: string
          default: RENOVATE
    OtherCapitalNeededLoan:
      description: |
        DE: Details über das Darlehen, welches zur Kapitalbeschaffung benötigt wird. <br/>
        EN: Details about the loan needed for raising capital.
      type: object
      required:
      - amount
      properties:
        amount:
          description: |
            DE: Darlehenssumme. <br/>
            EN: Loan amount.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        usage:
          $ref: '#/components/schemas/OtherCapitalNeededLoanUsage'
    OtherCapitalNeededLoanUsage:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/OtherCapitalNeededLoanUsageKey'
    OtherCapitalNeededLoanUsageKey:
      type: string
      description: |
        DE: Zusätzlicher Kapitalbedarf (nicht abschließende Aufzählung), z.B. OPERATIONAL_COSTS, REPAY_ANOTHER_LOAN, PREPAYMENT_PENALTY, RESIDENTIAL_USE, RENEWABLE_ENERGY, DISBURSMENT_COOWNERS, DISBURSMENT_HEIRS, OTHER, RECONSTRUCTION, BUY, CONSTRUCTION, BUY_CONSTRUCTION, SUPPLEMENTARY_FINANCING. <br/>
        EN: Open ended enum contains other capital needed loan usage, possible values are OPERATIONAL_COSTS, REPAY_ANOTHER_LOAN, PREPAYMENT_PENALTY, RESIDENTIAL_USE, RENEWABLE_ENERGY, DISBURSMENT_COOWNERS, DISBURSMENT_HEIRS, OTHER, RECONSTRUCTION, BUY, CONSTRUCTION, BUY_CONSTRUCTION, SUPPLEMENTARY_FINANCING.
      example: OPERATIONAL_COSTS
      x-extensible-enum:
      - OPERATIONAL_COSTS
      - REPAY_ANOTHER_LOAN
      - PREPAYMENT_PENALTY
      - RESIDENTIAL_USE
      - RENEWABLE_ENERGY
      - DISBURSMENT_COOWNERS
      - DISBURSMENT_HEIRS
      - OTHER
      - RECONSTRUCTION
      - BUY
      - CONSTRUCTION
      - BUY_CONSTRUCTION
      - SUPPLEMENTARY_FINANCING
      - OTHER
    Households:
      type: object
      description: |
        A wrapper Type to hold a set of households associated with the financing application.
      properties:
        _href:
          $ref: '#/components/schemas/ResourceRef'
        embedded:
          $ref: '#/components/schemas/HouseholdsQuery'
    ResourceRef:
      required:
      - href
      properties:
        href:
          type: string
          description: |
            DE: Link zu einer spezifischen Ressource. <br/> EN: Link to retrieve a specific resource.
          example: http://some-domain/some/link/to/somewhere
    HouseholdsQuery:
      type: object
      description: |
        A wrapper Type to hold a set of households associated with the financing application.
      properties:
        data:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/Household'
    Household:
      type: object
      description: |
        DE: Informationen zum Haushalt. <br/> EN: Information regarding a Household and it's inhabitants.
      required:
      - applicants
      properties:
        applicants:
          type: array
          description: |
            DE: Sammlung von Referenzen zu den Einwohnern die zu diesem Haushalt gehören. <br/>
            EN: Reference to the applicants involved in this household.
          items:
            $ref: '#/components/schemas/ApplicantIdRef'
        carsHousehold:
          type: integer
          format: int32
          description: |
            DE: Anzahl PKWs im Haushalt. <br/> EN: Number of cars in household.
        numberOfChildren:
          type: integer
          format: int32
          description: |
            DE: Anzahl unterhaltsberechtigter Kinder im Haushalt. <br/> EN: Number of children in household.
        personsHousehold:
          type: integer
          format: int32
          description: |
            DE: Anzahl im Haushalt lebender Personen. <br/> EN: Number of persons in the same household.
    ApplicantIdRef:
      type: object
      description: |
        DE: Id und Referenz des Antragstellers. <br/> EN: Id and reference of the applicant.
      properties:
        _href:
          $ref: '#/components/schemas/ResourceRef'
        applicantId:
          $ref: '#/components/schemas/ApplicantId'
    RateDetails:
      type: object
      required:
      - rateType
      properties:
        rateType:
          $ref: '#/components/schemas/RateDetailsType'
        interestRate:
          $ref: '#/components/schemas/InterestRate'
        payment:
          $ref: '#/components/schemas/RegularPayment'
      discriminator:
        propertyName: rateType
        mapping:
          ANNUITY: '#/components/schemas/AnnuityDetails'
          SUSPENDED_AMORTIZATION: '#/components/schemas/SuspendedAmortizationDetails'
    RateDetailsType:
      type: string
      description: |
        DE: Mögliche Darlehensart (nicht abschließende Aufzählung), z.B. ANNUITY=Annuitätsdarlehen, SUSPENDED_AMORTIZATION=Tilgungsaussetzungsdarlehen. <br/>
        EN: Open ended enum contains possible rates type, possible values are ANNUITY, SUSPENDED_AMORTIZATION.
        example: ANNUITY
      x-extensible-enum:
      - ANNUITY
      - SUSPENDED_AMORTIZATION
    InterestRate:
      description: |
        DE: Information über den Zins. <br/>
        EN: Information about the interest rate.
      type: object
      properties:
        nominal:
          description: |
            DE: Nominalzins (Sollzins) in Prozent <br/>
            EN: Nominal interest rate percent per period.
          allOf:
          - $ref: '#/components/schemas/PeriodicalPercentage'
        effective:
          description: |
            DE: Effektivzins in Prozent. <br/>
            EN: Effective interest rate percent per period. <br/>
          allOf:
          - $ref: '#/components/schemas/PeriodicalPercentage'
    PeriodicalPercentage:
      type: object
      required:
      - percentage
      - cycle
      properties:
        percentage:
          $ref: '#/components/schemas/Percentage'
        cycle:
          $ref: '#/components/schemas/Cycle'
    RegularPayment:
      description: |
        DE: Information über den regulären Zahlungen. <br/>
        EN: Information about regular payment.
      type: object
      properties:
        paymentTime:
          $ref: '#/components/schemas/PaymentTime'
        freePeriod:
          description: |
            DE: Tilgungsfreie Anlaufzeit. <br/>
            EN: Amortisation-free period.
          allOf:
          - $ref: '#/components/schemas/Duration'
        amount:
          description: |
            DE: Rate in der tilgungsfreien Anlaufzeit. <br/>
            EN: Amortisation during amortisation-free period.
          allOf:
          - $ref: '#/components/schemas/PeriodicalEuroAmount'
        amountAfterFreePeriod:
          description: |
            DE: Rate nach Ablauf der tilgungsfreien Anlaufzeit. <br/>
            EN: Rate after amortisation-free period.
          allOf:
          - $ref: '#/components/schemas/PeriodicalEuroAmount'
    PaymentTime:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/PaymentTimeKey'
    PaymentTimeKey:
      type: string
      description: |
        DE: Mögliche Zahlungszeit-Arten (nicht abschließende Aufzählung), z.B. ADVANCE=Vorschüssig, ARREARS=Nachschüssig. <br/> EN: Open ended enum contains possible payment time types, possible values are ADVANCE, ARREARS.
      example: ADVANCE
      x-extensible-enum:
      - ADVANCE
      - ARREARS
    Duration:
      type: object
      required:
      - value
      - unit
      properties:
        value:
          type: integer
          format: int32
        unit:
          type: string
          enum:
          - YEARS
          - MONTHS
          - DAYS
    PeriodicalEuroAmount:
      type: object
      required:
      - amount
      - cycle
      properties:
        amount:
          $ref: '#/components/schemas/EuroAmount'
        cycle:
          $ref: '#/components/schemas/Cycle'
    AnnuityDetails:
      description: |
        DE: Detaillierte Information über das Annuitätsdarlehen. <br/>
        EN: Detailed information about periodic loan.
      type: object
      allOf:
      - $ref: '#/components/schemas/RateDetails'
      - properties:
          rateType:
            type: string
            default: ANNUITY
          amortisationRate:
            description: |
              DE: Tilgungsrate (Prozent pro Periode). <br/>
              EN: Amortisation rate (percent per period).
            allOf:
            - $ref: '#/components/schemas/PeriodicalPercentage'
    SuspendedAmortizationDetails:
      type: object
      description: |
        DE: Information zum Tilgungssurrogat. <br/> EN: Information about the repayment surrogate.
      allOf:
      - $ref: '#/components/schemas/RateDetails'
      - properties:
          rateType:
            type: string
            default: SUSPENDED_AMORTIZATION
          type:
            $ref: '#/components/schemas/SuspendedRepaymentProductType'
          sum:
            description: |
              DE: Tilgungsbetrag. <br/>
              EN: Amortisation sum.
            allOf:
            - $ref: '#/components/schemas/EuroAmount'
          contractSignedWith:
            description: |
              DE: Referenz zu den Antragsteller der den Vetrag unterschrieben hat. <br/>
              EN: Reference to the applicant who signed the contract.
            allOf:
            - $ref: '#/components/schemas/ApplicantIdRef'
          contractDuration:
            description: |
              DE: Vertragsdauer. <br/>
              EN: Contract duration.
            allOf:
            - $ref: '#/components/schemas/Duration'
          upcomingPayments:
            $ref: '#/components/schemas/UpcomingPayments'
          savingBurden:
            $ref: '#/components/schemas/PeriodicalEuroAmount'
          depositValue:
            $ref: '#/components/schemas/EuroAmount'
          contractNumber:
            description: |
              DE: Vertragsnummer. <br/> EN: Contract number.
            type: string
    SuspendedRepaymentProductType:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/SuspendedRepaymentProductTypeKey'
    SuspendedRepaymentProductTypeKey:
      type: string
      description: |
        DE: Art des Tilgungssurrogats (nicht abschließende Aufzählung), z.B. DT_KAP_LV, DT_KAP_RV, BRIT_KAP_LV, BRIT_KAP_RV, FONDS_LV, FONDS_RV, FONDS_SPAR, BAU_SPAR, OTHER. <br/> EN: Open ended enum contains type of repayment surrogate, possible values are DT_KAP_LV, DT_KAP_RV, BRIT_KAP_LV, BRIT_KAP_RV, FONDS_LV, FONDS_RV, FONDS_SPAR, BAU_SPAR, OTHER.
      example: DT_KAP_LV
      x-extensible-enum:
      - DT_KAP_LV
      - DT_KAP_RV
      - BRIT_KAP_LV
      - BRIT_KAP_RV
      - FONDS_LV
      - FONDS_RV
      - FONDS_SPAR
      - BAU_SPAR
      - OTHER
    UpcomingPayments:
      type: object
      description: |
        DE: Kosten für das Tilgungssurrogat in den Folgeperioden. <br/> EN: Upcoming payments for repayment surrogate product.
      properties:
        upcomingFees:
          description: |
            DE: Höhe der wiederkehrenden Kosten. <br/>
            EN: Upcoming costs.
          allOf:
          - $ref: '#/components/schemas/PeriodicalEuroAmount'
        closingFee:
          description: |
            DE: Abschlussgebühr für das Tilgungssurrogat. <br/> EN: Acquisition fee for the repayment surrogate product.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        paymentDuration:
          description: |
            DE: Laufzeit des Tilgungssurrogats. <br/>
            EN: Duration of the repayment surrogate product.
          allOf:
          - $ref: '#/components/schemas/Duration'
    Applicant:
      type: object
      description: |
        DE: Detaillierte Informationen des Antragstellers. <br/> EN: Detailed information about the applicant.
      required:
      - id
      - person
      properties:
        id:
          description: |
            DE: Id des Antragsstellers. <br/> EN: Id of the applicant.
          allOf:
          - $ref: '#/components/schemas/ApplicantId'
        person:
          description: |
            DE: Personendaten des Antragsstellers. <br/> EN: Personal data of the applicant.
          allOf:
          - $ref: '#/components/schemas/Person'
        contact:
          description: |
            DE: Kontaktdaten des Antragsstellers. <br/> EN: Contact information about the applicant.
          allOf:
          - $ref: '#/components/schemas/Contact'
        address:
          description: |
            DE: Derzeitige Adresse des Antragstellers. <br/> EN: Current address of the applicant.
          allOf:
          - $ref: '#/components/schemas/Address'
        previousAddress:
          description: |
            DE: Voranschrift. <br/> EN: Previous address of the applicant.
          allOf:
          - $ref: '#/components/schemas/Address'
        nationalities:
          type: array
          description: |
            DE: Nationalitäten des Antragstellers. <br/> EN: Nationalities of the applicant.
          items:
            $ref: '#/components/schemas/Nationality'
        maritalStatus:
          description: |
            DE: Familienstand des Antragstellers. <br/> EN: Marital status of the applicant.
          allOf:
          - $ref: '#/components/schemas/MaritalStatus'
        maritalPropertyStatus:
          description: |
            DE: Beschreibung des ehelichen Güterstandes vom Antragsteller. <br/> EN: Matrimonial property of the applicant.
          allOf:
          - $ref: '#/components/schemas/MaritalPropertyStatus'
        creditWorthiness:
          description: |
            DE: Informationen über die Kreditwürdigkeit des Antragstellers. <br/> EN: Information regarding credit worthiness of the applicant.
          allOf:
          - $ref: '#/components/schemas/CreditWorthiness'
        occupationalActivity:
          description: |
            DE: Informationen über die derzeitige Erwerbstätigkeiten des Antragsstellers. <br/> EN: Information about the current occupation of the applicant.
          allOf:
          - $ref: '#/components/schemas/Occupation'
        taxId:
          type: string
          description: |
            DE: Steueridentifikationsnummer des Antragstellers. <br/> EN: Tax identification number.
        passportID:
          type: string
          example: CY887232L
          description: |
            DE: Ausweis Identifikationsnummer. <br/> EN: Id of passport.
        bankAccount:
          description: |
            DE: Daten zum Bankaccount des Antragsstellers. <br/> EN: Applicant's bank details.
          allOf:
          - $ref: '#/components/schemas/BankAccount'
        financialStandings:
          type: object
          description: |
            DE: Link um die Daten zur finanziellen Situation des Antragsstellers abzurufen. <br/> EN: A link to retrieve all information about financing situation for a specific applicant.
          allOf:
          - $ref: '#/components/schemas/ResourceRef'
    ApplicantId:
      type: object
      required:
      - value
      properties:
        value:
          description: |
            DE: Id des Antragstellers. <br/> EN: Id of the applicant.
          type: string
          example: '1'
    Person:
      type: object
      required:
      - name
      description: |
        DE: Personendaten einer Person. <br/> EN: Personal data of a person.
      properties:
        name:
          description: |
            DE: Name der Person. <br/> EN: Name of the person.
          allOf:
          - $ref: '#/components/schemas/PersonName'
        birthDate:
          description: |
            DE: Geburtsdatum der Person. <br/> EN: Date of birth of the person.
          allOf:
          - $ref: '#/components/schemas/ISODate'
        birthPlace:
          type: string
          example: London
          description: |
            DE: Geburtsort der Person. <br/> EN: The birth place of the person.
        birthCountry:
          description: |
            DE: Geburtsland der Person. <br/> EN: BirthCountry of the person.
          allOf:
          - $ref: '#/components/schemas/CountryCode'
    Contact:
      type: object
      properties:
        phoneNumbers:
          type: array
          items:
            $ref: '#/components/schemas/Phone'
        email:
          type: string
          description: |
            DE: E-Mail des Antragstellers <br/> EN: E-Mail of the customer
          example: primary@example.com
    Address:
      type: object
      required:
      - city
      - country
      properties:
        street:
          type: string
          example: Mainsteet
          description: |
            DE: Straßenname (Teil der Adresse). <br/> EN: Street name of the address
        houseNumber:
          type: string
          example: 42
          description: |
            DE: Hausnummer (Teil der Adresse). <br/> EN: House number of the address.
        apartmentNumber:
          type: string
          example: 3
          description: |
            DE: Wohnungsnummer. <br/> EN: Apartment number within the building.
        postalCode:
          type: string
          example: 80807
          description: |
            DE: Postleitzahl (Teil der Adresse). <br/> EN: Postal code of the address.
        city:
          type: string
          example: Munich
          description: |
            DE: Stadt (Teil der Adresse). EN: City of the address.
        federalState:
          type: string
          example: DE_BY
          description: |
            DE: Bundesland (Teil der Adresse) nach nach ISO 3166-2 (https://en.wikipedia.org/wiki/ISO_3166-2). <br/> EN: Federal state of the address in ISO_3166-2 format (https://en.wikipedia.org/wiki/ISO_3166-2).
        country:
          type: string
          example: DE
          description: |
            DE: Länder-Code (Teil der Adresse) nach ISO_3166-1_alpha-2 (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). <br/> EN: Official ISO_3166-1_alpha-2 (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the address.
    Nationality:
      type: object
      required:
      - country
      - type
      properties:
        country:
          description: |
            DE: Staatsangehörigkeit des Antragstellers. <br/> EN: Country of the nationality.
          allOf:
          - $ref: '#/components/schemas/CountryCode'
        type:
          $ref: '#/components/schemas/NationalityType'
    NationalityType:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/NationalityTypeKey'
    NationalityTypeKey:
      type: string
      description: |
        DE: Art der Staatsbürgerschaft (nicht abschließende Aufzählung, zum Beispiel FIRST = Erste Staatsbürgerschaft, SECOND = Zweite Staatsbürgerschaft). <br/> EN: Open ended enum contains values for the Nationality, possible values are (FIRST, SECOND, THIRD).
      x-extensible-enum:
      - FIRST
      - SECOND
      - THIRD
    MaritalStatus:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/MaritalStatusKey'
    MaritalStatusKey:
      type: string
      description: |
        DE: Familienstand des Antragstellers (nicht abschließende Aufzählung, zum Beispiel: SINGLE = LEDIG, MARRIED = VERHEIRATET, REGISTERED_PARTNERSHIP = EINGETRAGENE LEBENSPARTNERSCHAFT, WIDOWED = VERWITWET, DIVORCED = GESCHIEDEN, SEPARATED=GETRENNT). <br/> EN: Open ended enum contains values for the marital status, possible values are SINGLE, MARRIED, REGISTERED_PARTNER, WIDOWED, DIVORCED, SEPARATED.
      example: SINGLE
      x-extensible-enum:
      - SINGLE
      - MARRIED
      - REGISTERED_PARTNER
      - WIDOWED
      - DIVORCED
      - SEPARATED
      - COHABITING
      - OTHER
    MaritalPropertyStatus:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/MaritalPropertyStatusKey'
    MaritalPropertyStatusKey:
      type: string
      description: |
        DE: Beschreibung des ehelichen Güterstandes (nicht abschließende Aufzählung, zum Beispiel: COMMUNITY_OF_ACQUESTS_AND_GAINS = ZUGEWINNGEMEINSCHAFT, SEPARATION_OF_PROPERTY = GÜTERTRENNUNG, ABSOLUTE_COMMUNITY_PROPERTY = GÜTERGEMEINSCHAFT). <br/> EN: Open ended enum contains values for the matrimonial property, possible values are COMMUNITY_OF_ACQUESTS_AND_GAINS, SEPARATE_PROPERTY, ABSOLUTE_COMMUNITY_PROPERTY.
      example: COMMUNITY_OF_ACQUESTS_AND_GAINS
      x-extensible-enum:
      - COMMUNITY_OF_ACQUESTS_AND_GAINS
      - SEPARATE_PROPERTY
      - ABSOLUTE_COMMUNITY_PROPERTY
      - OTHER
    CreditWorthiness:
      type: object
      description: |
        DE: Informationen über die Kreditwürdigkeit des Antragstellers (zum Beispiel Schufa Score). <br/> EN: Information regarding credit worthiness (like Schufa-Score).
      required:
      - type
      properties:
        type:
          type: string
          description: |
            DE: Art der Ermittlung der Kreditwürdigkeitsbeurteilung (nicht abschließende Aufzählung, zum Beispiel: Schufa). <br/> EN: Open ended enum contains possible Worthiness Ratings, possible values are SCHUFA.
          x-extensible-enum:
          - SCHUFA
      discriminator:
        propertyName: type
        mapping:
          SCHUFA: '#/components/schemas/SchufaRating'
    SchufaRating:
      type: object
      description: |
        DE: Bewertung der Kreditwürdigkeit des Antragstellers durch die Schufa. <br/> EN: Rating of the credit worthiness by Schufa.
      allOf:
      - $ref: '#/components/schemas/CreditWorthiness'
      - properties:
          type:
            description: |
              DE: Kreditwürdigkeitsbeurteilung der Schufa. <br/> EN: Worthiness Ratings of the applicant rated by Schufa.
            type: string
            default: SCHUFA
          hasNegativeSchufaEntry:
            type: boolean
            description: |
              DE: WAHR, wenn ein negativer Schufa-Krediteintrag vorhanden ist. <br/> EN: TRUE, if there is a negative schufa entry.
          ratingStep:
            type: string
            description: |
              DE: Schufa Rating-Stufe zur Kreditwürdigkeit (nicht abschließende Aufzählung, zum Beispiel: A, B, C, D, E, F, G, H, I, J, K, L, M). Mehr Informationen unter: <a href="https://www.meineschufa.de/aktion/faq-scoring">Schufa-Score</a>. <br/> EN: open ended enum contains a rating value of the credit worthiness if any, possible values are A, B, C, D, E, F, G, H, I, J, K, L, M. More information: <a href="https://www.meineschufa.de/aktion/faq-scoring">Schufa-Score</a>.
            example: A
            x-extensible-enum:
            - A
            - B
            - C
            - D
            - E
            - F
            - G
            - H
            - I
            - J
            - K
            - L
            - M
          score:
            type: number
            minimum: 0
            maximum: 100
            format: float
            example: 97.5
            description: |
              DE: Schufa Basisscore der Kreditwürdigkeit (zum Beispiel: 97.55 -> sehr geringes Risiko). <br/> EN: Contains a score value of the credit worthiness (e.g. Schufa 97.5 -> very low risk).
    Occupation:
      type: object
      required:
      - type
      properties:
        type:
          description: |
            DE: Art der Erwerbstätigkeit. <br/> EN: Type of the occupation.
          allOf:
          - $ref: '#/components/schemas/OccupationType'
        crosser:
          type: boolean
          description: |
            DE: WAHR, wenn der Antragsteller Grenzgänger ist. <br/> EN: TRUE, if applicant is cross-border commuter.
        retirementDate:
          description: |
            DE: Voraussichtlicher Renteneintritt. <br/> EN: Expected retirement date.
          allOf:
          - $ref: '#/components/schemas/ISODate'
      discriminator:
        propertyName: type
        mapping:
          EMPLOYEE: '#/components/schemas/Employment'
          WORKER: '#/components/schemas/Employment'
          UNEMPLOYED: '#/components/schemas/OtherOccupation'
          OFFICIAL: '#/components/schemas/Employment'
          PARENTAL_LEAVE: '#/components/schemas/Employment'
          FREELANCER: '#/components/schemas/SelfEmployment'
          MARGINALLY_EMPLOYED: '#/components/schemas/Employment'
          STOCKHOLDER: '#/components/schemas/OtherOccupation'
          HOUSE_WIFE_OR_HUSBAND: '#/components/schemas/OtherOccupation'
          INDEPENDENT_GENTLEMAN: '#/components/schemas/OtherOccupation'
          SELF_EMPLOYED_WITH_BALANCING: '#/components/schemas/SelfEmployment'
          SELF_EMPLOYED_WITHOUT_BALANCING: '#/components/schemas/SelfEmployment'
          PENSIONER: '#/components/schemas/OtherOccupation'
          STUDENT: '#/components/schemas/OtherOccupation'
          SOLDIER: '#/components/schemas/Employment'
          EXECUTIVE: '#/components/schemas/Executive'
    OccupationType:
      type: string
      description: |
        DE: Beschreibung der Beschäftigungsart (nicht abschließende Aufzählung, zum Beispiel: EMPLOYEE = ANGESTELLTE/R, WORKER = ARBEITER/IN, UNEMPLOYED = ARBEITSLOSE/R, OFFICIAL = BEAMTE/R, PARENTAL_LEAVE = ELTERNZEIT, FREELANCER = FREIBERUFLER/IN, MARGINALLY_EMPLOYED = GERINFÜGIG BESCHÄFTIGT, STOCKHOLDER  = GESCHÄFTSF. GESELLSCHAFTER/IN, HOUSE_WIFE_OR_HUSBAND = HAUSMANN/FRAU, INDEPENDENT_GENTLEMAN = PRIVATIER/E, SELF_EMPLOYED_WITH_BALANCING = SELBSTSTÄNDIGE/R (bilanzierend), SELF_EMPLOYED_WITHOUT_BALANCING = SELBSTSTÄNDIGE/R (nicht bil.), PENSIONER = RENTNER/IN oder PENSIONÄR/IN, STUDENT = STUDENT/IN, SOLDIER = SOLDAT/IN, EXECUTIVE = VORSTAND/VORSTÄNDIN). <br/> EN: Open ended enum contains values for the occupation types, possible values are EMPLOYEE, WORKER, UNEMPLOYED, OFFICIAL, PARENTAL_LEAVE, FREELANCER, MARGINALLY_EMPLOYED, STOCKHOLDER, HOUSE_WIFE_OR_HUSBAND, INDEPENDENT_GENTLEMAN, SELF_EMPLOYED_WITH_BALANCING, SELF_EMPLOYED_WITHOUT_BALANCING, PENSIONER, STUDENT, SOLDIER, EXECUTIVE.
      example: EMPLOYEE
      x-extensible-enum:
      - EMPLOYEE
      - WORKER
      - UNEMPLOYED
      - OFFICIAL
      - PARENTAL_LEAVE
      - FREELANCER
      - MARGINALLY_EMPLOYED
      - STOCKHOLDER
      - HOUSE_WIFE_OR_HUSBAND
      - INDEPENDENT_GENTLEMAN
      - SELF_EMPLOYED_WITH_BALANCING
      - SELF_EMPLOYED_WITHOUT_BALANCING
      - PENSIONER
      - STUDENT
      - SOLDIER
      - EXECUTIVE
    Employment:
      type: object
      description: |
        DE: Informationen über das Beschäftigungsverhältnis des Antragstellers. <br/> EN: Information regarding employment data.
      allOf:
      - $ref: '#/components/schemas/Occupation'
      - properties:
          jobInformation:
            description: |
              DE: Stellenbeschreibung der Tätigkeit. <br/> EN: Description/name of the job.
            allOf:
            - $ref: '#/components/schemas/JobInformation'
          contractLimitation:
            description: |
              DE: Informationen ob der Vertrag befristet ist. <br/> EN: Information about contract limitation.
            allOf:
            - $ref: '#/components/schemas/ContractLimitation'
    JobInformation:
      type: object
      properties:
        jobDescription:
          type: string
          description: |
            DE: Stellenbeschreibung der Tätigkeit. <br/> EN: The description/name of the job.
        businessLine:
          description: |
            DE: Branche des Auftraggebers/Arbeitgebers. <br/> EN: Business line of the employer.
          allOf:
          - $ref: '#/components/schemas/BusinessLine'
        employer:
          type: string
          description: |
            DE: Name des Auftraggebers/Arbeitgebers. <br/> EN: The name of the employer.
        startDate:
          description: |
            DE: Beginn des Beschäftigungsverhältnis. <br/> EN: Start date of the employment.
          allOf:
          - $ref: '#/components/schemas/ISODate'
    BusinessLine:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/BusinessLineKey'
    BusinessLineKey:
      type: string
      description: |
        DE: Branche der Tätigkeit (nicht abschließende Aufzählung). <br/> EN: Open ended enum contains values for the business line, possible values are AGRICULTURE, CAR_DEALER, CAR_REPAIR, CHURCH, CONSTRUCTION_INDUSTRY, COURIER_SERVICE, DATING_SERVICE, EDUCATION, ENERGY, EROTIC_INDUSTRY, FINANCES, FINANCIAL_SERVICES, FITNESS, GAS_STATION, GASTRONOMY, HANDCRAFT, HEALTH_SERVICE, HOTEL_INDUSTRY, IT_CONSULTING, KIOSK, OTHER, PRODUCTION_AND_INDUSTRY, PUBLIC_SERVICE, REAL_ESTATE, TAXI, TRANSPORT, TRAVEL_AGENCY, WHOLE_AND_RETAIL_SALE.
      example: AGRICULTURE
      x-extensible-enum:
      - AGRICULTURE
      - CAR_DEALER
      - CAR_REPAIR
      - CHURCH
      - CONSTRUCTION_INDUSTRY
      - COURIER_SERVICE
      - DATING_SERVICE
      - EDUCATION
      - ENERGY
      - EROTIC_INDUSTRY
      - FINANCES
      - FINANCIAL_SERVICES
      - FITNESS
      - GAS_STATION
      - GASTRONOMY
      - HANDCRAFT
      - HEALTH_SERVICE
      - HOTEL_INDUSTRY
      - IT_CONSULTING
      - KIOSK
      - PRODUCTION_AND_INDUSTRY
      - PUBLIC_SERVICE
      - REAL_ESTATE
      - TAXI
      - TRANSPORT
      - TRAVEL_AGENCY
      - WHOLE_AND_RETAIL_SALE
      - MINING
      - CHEMICAL_INDUSTRY
      - DIPLOMATIC_SERVICE
      - PRINTING_INDUSTRY
      - FISHING_INDUSTRY
      - WOOD_INDUSTRY
      - IRON_INDUSTRY
      - CAR_MANUFACTURER
      - MILITARY
      - FOOD_INDUSTRY
      - NON_PROFIT_ORGANISATION
      - MEDIA_INDUSTRY
      - SEAFARING
      - LOGISTIC
      - TEXTILE_INDUSTRY
      - TOURISM
      - MANUFACTURING_INDUSTRY
      - PASSENGER_TRANSPORT
      - TEMP_EMPLOYMENT_AGENCY
      - OTHER
    ContractLimitation:
      type: object
      required:
      - limited
      properties:
        limited:
          description: |
            DE: Wahr, wenn der Vertrag zeitlich befristet ist. <br/> EN: True, if the contract is temporal limited.
          type: boolean
      discriminator:
        propertyName: limited
        mapping:
          true: '#/components/schemas/LimitedContract'
          false: '#/components/schemas/UnlimitedContract'
    LimitedContract:
      type: object
      description: |
        DE: Informationen zu einem befirstet Vertrag. <br/> EN: Information about a limited contract.
      allOf:
      - $ref: '#/components/schemas/ContractLimitation'
      - properties:
          limited:
            type: boolean
            default: true
          fixedTermEndDate:
            description: |
              DE: Datum an dem der Vertrag endet. <br/> EN: End date of the contract.
            allOf:
            - $ref: '#/components/schemas/ISODate'
          fixedTermRenewalCount:
            type: integer
            format: int32
            example: 3
            description: |
              DE: Anzahl befristeter Verlängerungen. <br/> EN: Count of fixed term renewals
    UnlimitedContract:
      type: object
      description: |
        DE: Information, dass es sich um ein unbefristen Vertrag handelt. <br/> EN: Information about an unlimited contract.
      allOf:
      - $ref: '#/components/schemas/ContractLimitation'
      - properties:
          limited:
            type: boolean
            default: false
    OtherOccupation:
      type: object
      description: |
        DE: Nicht näher spezifizierte Erwerbstätigkeit. <br/> EN: Unspecified Occupation.
      allOf:
      - $ref: '#/components/schemas/Occupation'
      - properties:
          shareHolding:
            description: |
              DE: Anteilsquote am Unternehmen. <br/> EN: Shareholding quota of the company.
            allOf:
            - $ref: '#/components/schemas/ShareHolding'
    ShareHolding:
      description: |
        DE: Anteilsquote am Unternehmen. <br/> EN: Shareholding quota of the company.
      type: object
      properties:
        value:
          type: number
          format: double
          minimum: 0
          maximum: 100
    SelfEmployment:
      type: object
      allOf:
      - $ref: '#/components/schemas/Occupation'
      - properties:
          jobInformation:
            description: |
              DE: Stellenbeschreibung der Tätigkeit. <br/> EN: Description/name of the job.
            allOf:
            - $ref: '#/components/schemas/JobInformation'
          shareHolding:
            description: |
              DE: Anteilsquote am Unternehmen. <br/> EN: Shareholding quota of the company.
            allOf:
            - $ref: '#/components/schemas/ShareHolding'
          freelancerJobType:
            description: |
              DE: Art der freiberuflichen Tätigkeit. <br/> EN: Freelancer job type.
            allOf:
            - $ref: '#/components/schemas/FreeLancerJobType'
    FreeLancerJobType:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/FreeLancerJobTypeKey'
    FreeLancerJobTypeKey:
      type: string
      description: |
        DE: Freiberufliche Tätigkeit des Antragstellers (nicht abschließende Aufzählung). <br/> EN: open ended enum contains alues for the freelancer job types, possible values are CARER, AMBORDERLY, ADVOCATE, APOTHECARY, ARCHITECT, PHYSICIAN, UNDERTAKER, ACCOUNTANT, REVISOR, FED_DP_COMMISSIONER, DECORATOR, DIETICIAN, INTERPRET, ERGOTHERAPIST, NUTRITIONIST, GEOGRAPHER, CONSULTANT, IT_CONSULT, FINANCSERV, PHOTOGRAPH, DESIGNER, MIDWIFE, HEALERMASSEUR, HEALER, HISTORIAN, COMPUTER_SPEC, ENGINEER, INSOLVENCY_ADMIN, JOURNALIST, PHYSIOTHER, ORDERLY, NURSE, MUSICIAN, CONSTRUCTOR, THERAPIST, MASSEUR, PARAMEDIC, NOTARY, OPTICIAN, OPERA_SINGER, HR_ADVISR, PSYCHOLOG, PSYCHOTHER, PHYSTHERAP, INTER_DECORATOR, RADIO_ANNOUNCER, EXPERT, TOWN_PLANER, STRUCT_ENG, TAX_ADVISR, TAX_AGENT, VETERINARY, TRANSLATOR, UNDER_ADVISR, AUDITOR, DENTAL_TECH, DENTIST, OTHER.
      example: ARCHITECT
      x-extensible-enum:
      - CARER
      - AMBORDERLY
      - ADVOCATE
      - APOTHECARY
      - ARCHITECT
      - PHYSICIAN
      - UNDERTAKER
      - ACCOUNTANT
      - REVISOR
      - FED_DP_COMMISSIONER
      - DECORATOR
      - DIETICIAN
      - INTERPRET
      - ERGOTHERAPIST
      - NUTRITIONIST
      - GEOGRAPHER
      - CONSULTANT
      - IT_CONSULT
      - FINANCSERV
      - PHOTOGRAPH
      - DESIGNER
      - MIDWIFE
      - HEALERMASSEUR
      - HEALER
      - HISTORIAN
      - COMPUTER_SPEC
      - ENGINEER
      - INSOLVENCY_ADMIN
      - JOURNALIST
      - PHYSIOTHER
      - ORDERLY
      - NURSE
      - MUSICIAN
      - CONSTRUCTOR
      - THERAPIST
      - MASSEUR
      - PARAMEDIC
      - NOTARY
      - OPTICIAN
      - OPERA_SINGER
      - HR_ADVISR
      - PSYCHOLOG
      - PSYCHOTHER
      - PHYSTHERAP
      - INTER_DECORATOR
      - RADIO_ANNOUNCER
      - EXPERT
      - TOWN_PLANER
      - STRUCT_ENG
      - TAX_ADVISR
      - TAX_AGENT
      - VETERINARY
      - TRANSLATOR
      - UNDER_ADVISR
      - AUDITOR
      - DENTAL_TECH
      - DENTIST
      - BROKER
      - OTHER
    Executive:
      type: object
      allOf:
      - $ref: '#/components/schemas/Occupation'
      - properties:
          jobInformation:
            description: |
              DE: Stellenbeschreibung der Tätigkeit. <br/> EN: Description/name of the job.
            allOf:
            - $ref: '#/components/schemas/JobInformation'
          contractLimitation:
            description: |
              DE: Informationen ob der Vertrag befristet ist. <br/> EN: Information about contract limitation.
            allOf:
            - $ref: '#/components/schemas/ContractLimitation'
          shareHolding:
            description: |
              DE: Anteilsquote am Unternehmen. <br/> EN: Shareholding quota of the company.
            allOf:
            - $ref: '#/components/schemas/ShareHolding'
    BankAccount:
      type: object
      description: |
        DE: Kontoverbindungsdaten <br/> EN: Bank account data
      required:
      - iban
      - accountOwner
      properties:
        iban:
          description: |
            DE: IBAN <br/> EN: The International Bank Account Number
          allOf:
          - $ref: '#/components/schemas/Iban'
        accountOwner:
          type: string
          description: |
            DE: Name des Kontobesitzers <br/> EN: The name of the account owner
        bic:
          description: |
            DE: BIC <br/> EN: The Business Identifier Code
          allOf:
          - $ref: '#/components/schemas/Bic'
        bank:
          type: string
          description: |
            DE: Name der Bank <br/> EN: The name of the bank
    EstateVendor:
      description: |
        DE: Informationen über den Immobilienverkäufer. <br/> EN: Information about the estate vendor.
      type: object
      required:
      - vendorType
      properties:
        vendorType:
          type: string
          description: |
            DE: Art des Immobilienverkäufers (nicht abschließende Aufzählung), z.B. (PERSON, COMPANY). <br/> EN: open ended enum contains type of the vendor, possible values are (PERSON, COMPANY).
          example: PERSON
          x-extensible-enum:
          - PERSON
          - COMPANY
        contact:
          $ref: '#/components/schemas/Contact'
        address:
          $ref: '#/components/schemas/Address'
      discriminator:
        propertyName: vendorType
        mapping:
          PERSON: '#/components/schemas/PersonVendor'
          COMPANY: '#/components/schemas/CompanyVendor'
    PersonVendor:
      type: object
      required:
      - person
      allOf:
      - $ref: '#/components/schemas/EstateVendor'
      - properties:
          vendorType:
            type: string
            default: PERSON
          person:
            $ref: '#/components/schemas/Person'
    CompanyVendor:
      type: object
      required:
      - company
      allOf:
      - $ref: '#/components/schemas/EstateVendor'
      - properties:
          vendorType:
            type: string
            default: COMPANY
          company:
            type: string
            description: |
              DE: Name der Firma, für welche der Immobilienverkäufer arbeitet. <br/> EN: The name of the estate vendor company.
    FinancingApplicationRef:
      type: object
      description: |
        A reference to a specific financing application resource.

        This reference consists of a link which leads directly to the resource and an Id which could be used to reconstruct the url.
      required:
      - id
      properties:
        _href:
          $ref: '#/components/schemas/ResourceRef'
        id:
          $ref: '#/components/schemas/FinancingApplicationId'
    FinancingApplicationId:
      description: |
        DE: ID des Finanzierungsantrages <br/> EN: Financing Application identifier
      type: object
      required:
      - value
      properties:
        value:
          type: string
    PeriodicalEuroAmountPerSquareMeter:
      type: object
      required:
      - periodicalAmount
      properties:
        periodicalAmount:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
    Cycle:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/CycleKey'
    ModernisationTypeAndScope:
      type: object
      description: |
        DE: Information über den Typ und Umfang der Modernisierung. <br/>
        EN: Information about the type and scope of the modernisation.
      required:
      - modernisationType
      properties:
        modernisationType:
          $ref: '#/components/schemas/ModernisationType'
        modernisationScope:
          $ref: '#/components/schemas/ModernisationScope'
    ModernisationType:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/ModernisationTypeKey'
    ModernisationTypeKey:
      type: string
      description: |
        DE: Typ der Modernisierung (nicht abschließende Aufzählung), z.B. (ELECTRIC, FASSADE, FLOOR_PLAN=Raumaufteilung, FLOORING=Bodenbeläge, HEATING, INSTALLATION, INSULATION=Wärmedämmung, ROOF, SANITARY=Sanitärobjekte, WINDOW, OTHER). <br/> EN: Open ended enum contains types of modernisation, possible values are (ELECTRIC, FASSADE, FLOOR_PLAN, FLOORING, HEATING, INSTALLATION, INSULATION, ROOF, SANITARY, WINDOW, OTHER).
      example: ELECTRIC
      x-extensible-enum:
      - ELECTRIC
      - FASSADE
      - FLOOR_PLAN
      - FLOORING
      - HEATING
      - INSTALLATION
      - INSULATION
      - ROOF
      - SANITARY
      - WINDOW
      - OTHER
    ModernisationScope:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/ModernisationScopeKey'
    ModernisationScopeKey:
      type: string
      description: |
        DE: Umfang der Modernisierung (nicht abschließende Aufzählung), z.B. (COMPLETE=komplett, PARTIAL=teilweise, UNKNOWN=unbekannt). <br/> EN: Open ended enum contains scope of the modernisation, possible values are (COMPLETE, PARTIAL, UNKNOWN).
      example: COMPLETE
      x-extensible-enum:
      - COMPLETE
      - PARTIAL
      - UNKNOWN
    RFC7807Problem:
      type: object
      description: Holds information regarding the returned error
      required:
      - timestamp
      - traceId
      - instance
      - title
      - status
      properties:
        timestamp:
          type: string
          format: date-time
          description: A UTC date-time indicates the error timestamp (https://en.wikipedia.org/wiki/Coordinated_Universal_Time)
        type:
          type: string
          format: uri
          description: URL refers to more information about the error.
          default: about:blank
        title:
          type: string
          description: Error short description
          example: Bad Request
        status:
          type: integer
          format: int32
          description: HTTP status code following standared error codes (https://tools.ietf.org/html/rfc2616#section-10)
          example: 400
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
        detail:
          type: string
          description: Detailed description for the returned error
          example: JSON parse error
        traceId:
          type: string
          description: Unique trace id for problematic request
          example: avx1234asd
        instance:
          type: string
          format: uri
          description: Path of requested resource
        violations:
          type: array
          description: Collection of the invalid content of the request
          items:
            $ref: '#/components/schemas/Violation'
    Violation:
      description: Description of the invalid field value
      type: object
      properties:
        field:
          type: string
          description: Invalid field name
          example: customer.name
        message:
          type: string
          description: Description of the invalid field value
          example: must be greater than or equal to 0
    SubmissionLogbook:
      type: object
      description: |
        DE: Enthält alle Logbucheinträge. <br/>
        EN: Holds submission logbook entries.
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/SubmissionLogbookEntry'
    SubmissionLogbookEntry:
      type: object
      required:
      - id
      - type
      description: |
        DE: Informationen zu einem Logbucheintrag. <br/>
        EN: Holds information about a logbook entry.
      properties:
        id:
          $ref: '#/components/schemas/LogbookEntryId'
        type:
          $ref: '#/components/schemas/LogbookEntryType'
        createdAt:
          description: |
            DE: Ein UTC Zeitstempel wann die mit dem Logbucheintrag verknüpfte Aktion ausgelöst wurde. <br/> EN: A UTC date-time indicates when the event associated to the logbook entry took place.
          allOf:
          - $ref: '#/components/schemas/ISODateTime'
        createdBy:
          description: |
            DE: Der Nutzer, welcher die Aktion ausgelöst hat, die zu dem Logbucheintrag führt. <br/> EN: User who triggered the event associated to the logbook entry.
          allOf:
          - $ref: '#/components/schemas/SimplePerson'
        remark:
          type: string
      discriminator:
        propertyName: type
        mapping:
          SUBMISSION_CREATED: '#/components/schemas/DefaultLogbookEntry'
          SUBMISSION_EDITED: '#/components/schemas/DefaultLogbookEntry'
          LOAN_PARTNER_PROCESSOR_ASSIGNED: '#/components/schemas/AssignProcessorLogbookEntry'
          UPLOADED_DOCUMENT: '#/components/schemas/DocumentLogbookEntry'
          DECISION_DATE_UPDATED: '#/components/schemas/DecisionDateLogbookEntry'
          STATUS: '#/components/schemas/LegacyStatusLogbookEntry'
    LogbookEntryId:
      type: object
      properties:
        value:
          type: string
    LogbookEntryType:
      type: string
      description: |
        DE: Art des Logbookentry (nicht abschließende Aufzählung), z.B. (SUBMISSION_CREATED, SUBMISSION_EDITED, DECISION_DATE_UPDATED, UPLOADED_DOCUMENT, STATUS). <br/> EN: open ended enum contains possible logbook entry types, possible values are (SUBMISSION_CREATED, SUBMISSION_EDITED, DECISION_DATE_UPDATED, UPLOADED_DOCUMENT, STATUS).
      example: UPLOADED_DOCUMENT
      x-extensible-enum:
      - SUBMISSION_CREATED
      - SUBMISSION_EDITED
      - LOAN_PARTNER_PROCESSOR_ASSIGNED
      - UPLOADED_DOCUMENT
      - DECISION_DATE_UPDATED
      - STATUS
    SimplePerson:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        company:
          type: string
    DefaultLogbookEntry:
      type: object
      allOf:
      - $ref: '#/components/schemas/SubmissionLogbookEntry'
    AssignProcessorLogbookEntry:
      type: object
      description: |
        DE: Ein Logbucheintrag mit Informationen zu dem neu zugewiesenen Bearbeiter. <br/> EN: A logbook entry holds information about assigning a loan partner processor to the submission.
      allOf:
      - $ref: '#/components/schemas/SubmissionLogbookEntry'
      - properties:
          type:
            type: string
            default: LOAN_PARTNER_PROCESSOR_ASSIGNED
          assignedTo:
            $ref: '#/components/schemas/SimplePerson'
    DocumentLogbookEntry:
      type: object
      description: |
        DE: Ein Logbucheintrag mit Informationen zu einem hochgeladenen Einreichungsdokument. <br/> EN: A logbook entry holds information about uploading submission document.
      allOf:
      - $ref: '#/components/schemas/SubmissionLogbookEntry'
      - properties:
          type:
            type: string
            default: UPLOADED_DOCUMENT
          documentName:
            type: string
    DecisionDateLogbookEntry:
      type: object
      description: |
        DE: Ein Logbucheintrag mit Informationen zu dem geänderten Entscheidungsdatum. <br/> EN: A logbook entry holds information about updating submission decision date.
      allOf:
      - $ref: '#/components/schemas/SubmissionLogbookEntry'
      - properties:
          type:
            type: string
            default: DECISION_DATE_UPDATED
          newDecisionDate:
            $ref: '#/components/schemas/ISODate'
    LegacyStatusLogbookEntry:
      type: object
      description: |
        DE: Ein Logbucheintrag mit Informationen zu Statusänderungen. <br/> EN: A logbook entry holds information about changing submission status.
      allOf:
      - $ref: '#/components/schemas/SubmissionLogbookEntry'
      - properties:
          type:
            type: string
            default: STATUS
          status:
            $ref: '#/components/schemas/SubmissionStatus'
          details:
            $ref: '#/components/schemas/StatusLogbookEntryDetails'
    StatusLogbookEntryDetails:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/StatusLogbookEntryDetailsType'
      discriminator:
        propertyName: type
        mapping:
          ONHOLD: '#/components/schemas/OnHoldStatusLogbookEntryDetails'
          REJECT: '#/components/schemas/RejectStatusLogbookEntryDetails'
    StatusLogbookEntryDetailsType:
      type: string
      description: |
        DE: Art des Logbookentry status details(nicht abschließende Aufzählung), z.B. (ONHOLD, REJECT). <br/> EN: open ended enum contains possible logbook entry status details, possible values are (ONHOLD, REJECT).
      example: ONHOLD
      x-extensible-enum:
      - ONHOLD
      - REJECT
    OnHoldStatusLogbookEntryDetails:
      type: object
      allOf:
      - $ref: '#/components/schemas/StatusLogbookEntryDetails'
      - properties:
          type:
            type: string
            default: ONHOLD
          reason:
            $ref: '#/components/schemas/OnHoldReason'
    RejectStatusLogbookEntryDetails:
      type: object
      allOf:
      - $ref: '#/components/schemas/StatusLogbookEntryDetails'
      - properties:
          type:
            type: string
            default: REJECT
          reason:
            $ref: '#/components/schemas/RejectReason'
          solution:
            type: string
    Advisor:
      type: object
      description: |
        DE: Informationen über den Berater. <br/> EN: Information about the advisor.
      required:
      - advisorCompany
      properties:
        advisorCompany:
          description: |
            DE: Die an der Vermittlung beteiligte Firma.. <br/> EN: Company involved in the brokerage process.
          allOf:
          - $ref: '#/components/schemas/CompanyAdvisor'
        responsiblePersons:
          description: |
            DE: Für die Vermittlung zuständige Personen. <br/> EN: Persons responsible for the brokerage.
          type: array
          items:
            $ref: '#/components/schemas/ResponsiblePerson'
    CompanyAdvisor:
      type: object
      required:
      - companyAddress
      properties:
        companyName:
          type: string
          description: |
            DE: Name der Firma für welche der Berater arbeitet. <br/>
            EN: Name of the advisor company.
        companyAddress:
          type: object
          description: |
            DE: Adresse des Beratungsunternehmens. <br/> EN: Address of the advisory company.
          allOf:
          - $ref: '#/components/schemas/Address'
        regulatoryAuthorities:
          $ref: '#/components/schemas/RegulatoryAuthority'
    RegulatoryAuthority:
      description: |
        DE: Die Zuständige Aufsichtsbehörde der Firma. <br/> EN: Responsible supervisory authority of the company.
      type: object
      properties:
        legalBasis:
          $ref: '#/components/schemas/RegulatoryAuthorityLegalBasis'
        name:
          description: |
            DE: Name der Aufsichtsbehörde. <br/> EN: Name of the responsible supervisory authority.
          type: string
        addressSummary:
          description: |
            DE: Adresse der Aufsichtsbehörde. <br/> EN: Address of the responsible supervisory authority.
          type: string
        url:
          type: string
          description: |
            DE: Internetseite der Aufsichtsbehrde. <br/> EN: Website of the responsible supervisory authority.
    RegulatoryAuthorityLegalBasis:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/RegulatoryAuthorityLegalBasisKey'
    RegulatoryAuthorityLegalBasisKey:
      type: string
      description: |
        DE: Relevante Rechtsnorm (nicht abschließende Aufzählung), z.B. (34_C_GEWO, 34_I_GEWO siehe auch (https://www.gesetze-im-internet.de/gewo/)). <br/> EN: Open ended enum contains the relevant legal norm, possible values are (34_C_GEWO, 34_I_GEWO).
      x-extensible-enum:
      - 34_C_GEWO
      - 34_I_GEWO
    ResponsiblePerson:
      type: object
      required:
      - type
      - personName
      properties:
        type:
          $ref: '#/components/schemas/ResponsiblePersonType'
        personName:
          $ref: '#/components/schemas/PersonName'
        contact:
          $ref: '#/components/schemas/Contact'
    ResponsiblePersonType:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/ResponsiblePersonTypeKey'
    ResponsiblePersonTypeKey:
      type: string
      description: |
        DE: Rolle der zuständigen Person (nicht abschließende Aufzählung), z.B. (PROCESSOR=Ansprechpartner, MANAGER=Führungskraft). <br/> EN: Open ended enum contains the role of the responsible person , possible values are (PROCESSOR, MANAGER)
      x-extensible-enum:
      - PROCESSOR
      - MANAGER
    PersonName:
      type: object
      required:
      - gender
      - firstName
      - lastName
      properties:
        gender:
          type: string
          description: |
            DE: Geschlecht der Person. <br/> EN: Gender of the person
          enum:
          - M
          - F
        title:
          $ref: '#/components/schemas/Title'
        firstName:
          type: string
          description: |
            DE: Vorname der Person. <br/> EN: First name of the person.
        lastName:
          type: string
          description: |
            DE: Nachname der Person. <br/> EN: Last name of the person.
        maidenName:
          type: string
          description: |
            DE: Geburtsname der Person. <br/> EN: Maiden name of the person.
    FinancingApplicationCreationCommandResponse:
      type: object
      required:
      - id
      - financingApplicationRef
      properties:
        id:
          $ref: '#/components/schemas/CommandId'
        financingApplicationRef:
          $ref: '#/components/schemas/FinancingApplicationRef'
    CommandId:
      type: object
      required:
      - value
      properties:
        value:
          type: string
    AdditionalInfo:
      type: object
      description: |
        DE: Zusätzliche Information als Schlüssel-Wert Paar. <br/> EN: Additional Information as key-value pairs.
      properties:
        key:
          type: string
        value:
          type: string
    SubmissionOverviewItem:
      type: object
      required:
      - submittedAt
      - _href
      description: |
        Holds overview information about the requested Submission.

        Further details will be delivered in the embedded property if specified.

        Please refer to *Expansion* section for more details.
      properties:
        submittedAt:
          description: |
            DE: Datum der Einreichung. <br/>
            EN: Date when this submission has been submitted.
          allOf:
          - $ref: '#/components/schemas/ISODateTime'
        _href:
          $ref: '#/components/schemas/ResourceRef'
        embedded:
          $ref: '#/components/schemas/SubmissionOverview'
    ISODateTime:
      description: |
        DE: Datum, Syntax nach <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339</a><br/> EN: Date according to <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339</a>
      type: string
      format: date-time
      example: 2019-12-29T10:22:50Z
    SubmissionOverview:
      type: object
      description: |
        DE: Generelle Informationen ueber den Kreditantrag. <br/> EN: General information about a specific submission.
      properties:
        submittedAt:
          description: |
            DE: Datum der Einreichung. <br/>
            EN: Date when this submission has been submitted.
          allOf:
          - $ref: '#/components/schemas/ISODateTime'
        initialEstimate:
          $ref: '#/components/schemas/InitialSubmissionEstimate'
        timeline:
          description: |
            DE: Zeitplan einer Einreichung. EN: Timeline of a submission.
          allOf:
          - $ref: '#/components/schemas/SubmissionTimeline'
        submittedBy:
          description: |
            DE: Informationen über den Berater der den Kreditantrag abgesendet hat. <br/>
            EN: Information about the advisor, who has triggered the submission process.
          allOf:
          - $ref: '#/components/schemas/Advisor'
        loanPartner:
          $ref: '#/components/schemas/LoanPartnerProcessingInfo'
    InitialSubmissionEstimate:
      deprecated: true
      description: |
        DE: Voraussichtliches Entscheidungsdatum. <br/> EN: Estimated decision date.
      type: object
      properties:
        createdAt:
          $ref: '#/components/schemas/ISODateTime'
    SubmissionTimeline:
      type: object
      description: |
        DE: Zeitplan einer Einreichung. EN: Timeline of a submission.
      properties:
        predictedLoanPartnerDecisionDate:
          $ref: '#/components/schemas/PredictedLoanPartnerDecisionDate'
    LoanPartnerProcessingInfo:
      description: |
        DE: Einheit des Kreditgebers, welche die Einreichung bearbeitet und aktueller (Kreditsach-)Bearbeiter. <br/> EN: Processing Unit and current processor of the loan partner.
      type: object
      properties:
        unit:
          $ref: '#/components/schemas/LoanPartnerProcessingUnit'
        processor:
          $ref: '#/components/schemas/LoanPartnerProcessor'
    LoanPartnerProcessingUnit:
      type: object
      description: |
        DE: Informationen zur Einheit des Kreditgebers, welche den Kreditantrag bearbeitet. <br/> EN: Information about the processing unit of the financing partner.
      required:
      - id
      properties:
        id:
          $ref: '#/components/schemas/LoanPartnerProcessingUnitId'
        name:
          $ref: '#/components/schemas/LoanPartnerProcessingUnitName'
        parentUnit:
          description: |
            DE: Zeigt die übergeordnete Orginazitioneinheit von der für den Kreditantrag zuständigen Einheit an. <br/>

            > z.B. Hauptsitz und Filiale einer Bank.


            EN: Information about the processing unit hierarchy by establishing a reference to the parent processing unit.

            > i.e. Branch as a processing unit can have Bank as a parent processing unit, etc ...
          allOf:
          - $ref: '#/components/schemas/LoanPartnerProcessingUnit'
    LoanPartnerProcessingUnitId:
      description: |
        DE: ID der Einheit des Kreditgebers, welche den Kreditantrag bearbeitet. <br/> EN: Id of the loan partner processing unit.
      required:
      - value
      properties:
        value:
          type: string
    LoanPartnerProcessingUnitName:
      description: |
        DE: Bezeichnung / Name der Einheit des Kreditgebers, welche den Kreditantrag bearbeitet. <br/> EN: Name of the loan partner processing unit.
      type: object
      properties:
        value:
          type: string
    LoanPartnerProcessor:
      description: |
        DE: Der (Kredit-)Bearbeiter. <br/> EN: The loan partner processor.
      required:
      - processorId
      - processorName
      properties:
        processorId:
          $ref: '#/components/schemas/LoanPartnerProcessorId'
        processorName:
          $ref: '#/components/schemas/LoanPartnerProcessorName'
        processorEmail:
          $ref: '#/components/schemas/LoanPartnerProcessorEmail'
    LoanPartnerProcessorId:
      description: |
        DE: ID des (Kredit-)Bearbeiters. <br/> EN: Id of the loan partner processor.
      required:
      - value
      properties:
        value:
          type: string
    LoanPartnerProcessorName:
      description: |
        DE: Username, Vor- und Nachname des (Kredit-)Bearbeiters. <br/> EN: Username, first- and lastname of the loan partner processor.
      required:
      - userName
      properties:
        userName:
          type: string
        firstName:
          type: string
        lastName:
          type: string
    LoanPartnerProcessorEmail:
      description: |
        DE: E-Mail Adresse des (Kredit-)Bearbeiters. <br/> EN: E-Mail address of the loan partner processor.
      properties:
        email:
          type: string
    Estates:
      type: object
      description: |
        A wrapper type of items which hold the essential estate information.
      required:
      - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EstateItem'
          minItems: 1
    EstateItem:
      type: object
      required:
      - estateId
      - type
      description: |
        A wrapper that holds basic information about estate.
      properties:
        ref:
          description: |
            DE: Id und Referenz zu der Immobilie. <br/> EN: Id and Reference to the estate.
          allOf:
          - $ref: '#/components/schemas/EstateRef'
        type:
          description: |
            DE: Immobilientyp. <br/> EN: Type of the estate.
          allOf:
          - $ref: '#/components/schemas/PropertyType'
        embedded:
          description: |
            DE: Vollständige Daten zu der Immobilie. <br/> EN: Complete data about the estate.
          allOf:
          - $ref: '#/components/schemas/Estate'
    EstateRef:
      type: object
      required:
      - estateId
      description: |
        DE: Id und Referenz zu der Immobilie. <br/> EN: Id and Reference to the estate.
      properties:
        _href:
          $ref: '#/components/schemas/ResourceRef'
        estateId:
          $ref: '#/components/schemas/EstateId'
    EstateId:
      type: object
      required:
      - value
      description: |
        DE: ID der Immobilie. <br/> EN: ID of the estate.
      properties:
        value:
          type: string
    PropertyType:
      type: string
      description: |
        DE: Art des Gebäudes (nicht abschließende Aufzählung), z.B. APARTMENT=Wohnung, DETACHED_HOUSE=Einfamilienhaus, SEMI_DETACHED_HOUSE=Doppelhaushälfte, TWO_FAMILY_HOUSE=Zweifamilienhaus, END_TERRACE_HOUSE=Reiheneckhaus, MID_TERRACE_HOUSE=Reihenmittelhaus, APARTMENT_BUILDING=Mehrfamilienhaus, RESIDENTIAL_AND_COMMERCIAL_BUILDING=Wohn_und_Geschäftshaus, PROPERTY=nur_Grundstück, COMMERCIAL_PROPERTY=gewerb. Grundstück . <br/> EN: open ended enum contains property type details, possible values are APARTMENT, DETACHED_HOUSE, SEMI_DETACHED_HOUSE, TWO_FAMILY_HOUSE, END_TERRACE_HOUSE, MID_TERRACE_HOUSE, APARTMENT_BUILDING, RESIDENTIAL_AND_COMMERCIAL_BUILDING, PROPERTY, COMMERCIAL_PROPERTY.
      example: APARTMENT
      x-extensible-enum:
      - APARTMENT
      - DETACHED_HOUSE
      - SEMI_DETACHED_HOUSE
      - TWO_FAMILY_HOUSE
      - END_TERRACE_HOUSE
      - MID_TERRACE_HOUSE
      - APARTMENT_BUILDING
      - RESIDENTIAL_AND_COMMERCIAL_BUILDING
      - PROPERTY
      - COMMERCIAL_PROPERTY
    Estate:
      type: object
      required:
      - id
      - type
      properties:
        id:
          $ref: '#/components/schemas/EstateId'
        type:
          $ref: '#/components/schemas/PropertyType'
        address:
          description: |
            DE: Adresse der Immobilie. <br/>
            EN: Estate address.
          allOf:
          - $ref: '#/components/schemas/Address'
        propertyRegister:
          $ref: '#/components/schemas/PropertyRegister'
        location:
          $ref: '#/components/schemas/PropertyLocation'
        leaseInfo:
          $ref: '#/components/schemas/LeaseInfo'
        existingMortgages:
          type: array
          description: |
            DE: Sammlung von Referenzen zu dem existierenden Hypotheken. <br/>
            EN: Reference collection to the existing mortgages associated with this estate.
          items:
            $ref: '#/components/schemas/ExistingMortgageRef'
        description:
          description: |
            DE: Immobilienbeschreibung. <br/>
            EN: Estate description.
          type: string
      discriminator:
        propertyName: type
        mapping:
          APARTMENT: '#/components/schemas/Apartment'
          DETACHED_HOUSE: '#/components/schemas/House'
          SEMI_DETACHED_HOUSE: '#/components/schemas/House'
          TWO_FAMILY_HOUSE: '#/components/schemas/House'
          END_TERRACE_HOUSE: '#/components/schemas/House'
          MID_TERRACE_HOUSE: '#/components/schemas/House'
          APARTMENT_BUILDING: '#/components/schemas/House'
          RESIDENTIAL_AND_COMMERCIAL_BUILDING: '#/components/schemas/House'
          PROPERTY: '#/components/schemas/Plot'
          COMMERCIAL_PROPERTY: '#/components/schemas/Plot'
    PropertyRegister:
      description: |
        DE: [Grundbuchinformationen](http://www.gesetze-im-internet.de/gbvfg/BJNR706370935.html#BJNR706370935BJNG000402307). <br/> EN: Information according to the property / land register (hereinafter referred to as land register).
      type: object
      required:
      - cover
      properties:
        cover:
          description: |
            DE: Allgemeine Information zum Grundbuchblatt (Aufschrift des Grundbuchblattes). <br/> EN: General information on the land register (title of land register sheet)
          allOf:
          - $ref: '#/components/schemas/RegisterCover'
        inventories:
          description: |
            DE: Grundstück und Eigentum (Bestandsverzeichnis des Grundbuchblattes). <br/> EN: Land and property (inventory of the land register sheet).
          type: array
          items:
            $ref: '#/components/schemas/PropertiesRegisterInventory'
        owners:
          description: |
            DE: Derzeitige Eigentümer (Erste Abteilung des Grundbuchblattes). <br/> EN: Current owners (first section of the land register sheet).
          type: array
          items:
            $ref: '#/components/schemas/PropertyRegisterOwnerEntry'
        restrictions:
          description: |
            DE: Lasten und Beschränkungen (Zweite Abteilung des Grundbuchblattes). <br/> EN: Burdens and restrictions (second section of the land register sheet).
          type: array
          items:
            $ref: '#/components/schemas/PropertyRegisterRestriction'
        mortgages:
          description: |
            DE: Hypotheken, Grundschulden, Rentenschulden (Dritte Abteilung des Grundbuchblattes). <br/> EN: Mortgages, land charges, annuity charges (third section of the land register sheet).
          type: array
          items:
            $ref: '#/components/schemas/PropertyRegisterMortgage'
    PropertyLocation:
      description: |
        DE: Information über die Lage der Immobilie. <br/> EN: Information about the estate location.
      type: object
      properties:
        neighbourhood:
          $ref: '#/components/schemas/Neighbourhood'
        negativeEffectsInNeighbourhood:
          description: |
            DE: Sammlung von negativen Einflussfaktoren in der Umgebung. <br/>
            EN: Collection of negative effects caused by location.
          type: array
          example: |
            DE: Liegt in unmittelbarer Nähe einer Autobahn. <br/> EN: Lies in close distance of a highway.
          items:
            type: string
        locationInhabitants:
          description: |
            DE: Einwohnerzahl. <br/> EN: Number of inhabitants.
          allOf:
          - $ref: '#/components/schemas/Inhabitants'
    Neighbourhood:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/NeighbourhoodKey'
    NeighbourhoodKey:
      type: string
      description: |
        DE: Umgebung (nicht abschließende Aufzählung), z.B. RESIDENTIAL_COMPLETE=reines_Wohngebiet, COMMERCIAL_MAINLY=ueberwiegend_Gewerbegebiet, MIXED=Mischgebiet, INDUSTRIAL=Industriegebiet, OUTSIDE_CITY=Einzellage_außerhalb_des_Ortes. <br/> EN: Open ended enum contains neighbourhood details, possible values are RESIDENTIAL, COMMERCIAL, MIXED, INDUSTRIAL, OUTSIDE .
      example: RESIDENTIAL
      x-extensible-enum:
      - RESIDENTIAL
      - COMMERCIAL
      - MIXED
      - INDUSTRIAL
      - OUTSIDE
      - OTHER
    Inhabitants:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/InhabitantsKey'
    InhabitantsKey:
      type: string
      description: |
        DE: Anzahl Einwohner im Ort (nicht abschließende Aufzählung), z.B. UP_TO_1000, UP_TO_10000, UP_TO_50000, UP_TO_100000, UP_TO_200000, UP_TO_500000, UP_TO_1000000, MORE_THEN_1000000. <br/> EN: open ended enum contains umber of inhabitants in the city, possible values are UP_TO_1000, UP_TO_10000, UP_TO_50000, UP_TO_100000, UP_TO_200000, UP_TO_500000, UP_TO_1000000, MORE_THEN_1000000.
      example: UP_TO_1000
      x-extensible-enum:
      - UP_TO_1000
      - UP_TO_10000
      - UP_TO_50000
      - UP_TO_100000
      - UP_TO_200000
      - UP_TO_500000
      - UP_TO_1000000
      - MORE_THEN_1000000
      - OTHER
    LeaseInfo:
      type: object
      description: |
        DE: Information über ein Erbbaurecht. <br/> EN: Estate leasehold information.
      required:
      - leasehold
      properties:
        leasehold:
          description: |
            DE: Flag ob Erbbaurecht vorhanden ist. <br/> EN: Flag to indicate if leasehold exists.
          type: boolean
      discriminator:
        propertyName: leasehold
        mapping:
          true: '#/components/schemas/LeaseHold'
          false: '#/components/schemas/NoLeaseHold'
    LeaseHold:
      type: object
      allOf:
      - $ref: '#/components/schemas/LeaseInfo'
      - properties:
          leasehold:
            type: boolean
            default: true
          leaseholdFees:
            description: |
              DE: Erbbauzins. <br/> EN: Leasehold fees.
            allOf:
            - $ref: '#/components/schemas/PeriodicalEuroAmount'
          leaseholdEndingDate:
            description: |
              DE: Ablaufdatum des Erbbaurechts. <br/>
              EN: Leasehold ending (expiry) date.
            allOf:
            - $ref: '#/components/schemas/ISODate'
          leaseholdStandstill:
            description: |
              DE: Erbbaurecht Stillhalteerklärung. <br/> EN: Leasehold declaration of standstill.
            type: boolean
          lessorType:
            $ref: '#/components/schemas/LessorType'
          salesAllowance:
            description: |
              DE: Vorkaufsrecht bei Erbbau. <br/> EN: Pre-emption right
            type: boolean
          subOrdination:
            description: |
              DE: Rangrücktritt. <br/> EN: Subordination (Resignation of priority).
            type: boolean
    LessorType:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/LessorTypeKey'
    LessorTypeKey:
      type: string
      description: |
        DE: Erbbaurechtgeber (nicht abschließende Aufzählung), z.B. CHURCH, CITY, INDIVIDUAL, COMPANY, OTHER. <br/> EN: open ended enum contains building lease owner, possible values are CHURCH, CITY, INDIVIDUAL, COMPANY, OTHER.
      example: CHURCH
      x-extensible-enum:
      - CHURCH
      - CITY
      - INDIVIDUAL
      - COMPANY
      - OTHER
    NoLeaseHold:
      type: object
      allOf:
      - $ref: '#/components/schemas/LeaseInfo'
      - properties:
          leasehold:
            type: boolean
            default: false
    Apartment:
      description: |
        DE: Zusätzliche Information zu der Immobilie von Typ "APARTMENT" (Wohnung). <br/>
        EN: Additional Information for the estate with the type "APARTMENT".
      type: object
      allOf:
      - $ref: '#/components/schemas/RealEstate'
      - properties:
          rating:
            $ref: '#/components/schemas/RealEstateRating'
          numberOfApartmentsPerResidence:
            description: |
              DE: Anzahl der Wohnungen im gesamten Wohnhaus. <br/> EN: Total number of apartments within the whole residence building.
            type: integer
            format: int32
          apartmentsPerEntrance:
            description: |
              DE: Anzahl der Wohnungen pro Hausaufgang. <br/> EN: Apartments per building entrance (staircase).
            type: integer
            format: int32
          apartmentsPerBuilding:
            description: |
              DE: Anzahl der Wohnungen pro Haus. <br/> EN: Apartments per building.
            type: integer
            format: int32
          apartmentsPerDivision:
            description: |
              DE: Anzahl Wohnung pro Teilungserklärung. <br/> EN: Apartments per apartment declaration of division.
            type: integer
            format: int32
          apartmentFloor:
            $ref: '#/components/schemas/ApartmentFloor'
          specialCharacteristics:
            $ref: '#/components/schemas/SpecialRealEstateCharacteristics'
    RealEstate:
      description: |
        DE: Allgemeine Information zu der Immobilie. <br/>
        EN: General information about the estate.
      type: object
      allOf:
      - $ref: '#/components/schemas/Estate'
      - properties:
          originalPurchase:
            $ref: '#/components/schemas/OriginalPurchase'
          building:
            $ref: '#/components/schemas/Building'
          condition:
            $ref: '#/components/schemas/RealEstatePropertyCondition'
          furnishing:
            $ref: '#/components/schemas/Furnishing'
          parkingSpaces:
            description: |
              DE: Stellplätze und Garagen der Immobilie. <br/> EN: Parking spaces and garages of the property.
            type: array
            items:
              $ref: '#/components/schemas/ParkingSpace'
          existingModernisations:
            $ref: '#/components/schemas/ExistingModernisations'
          area:
            $ref: '#/components/schemas/AreaInfo'
          utilization:
            $ref: '#/components/schemas/Utilization'
          rent:
            $ref: '#/components/schemas/RentInfo'
    OriginalPurchase:
      type: object
      properties:
        price:
          description: |
            DE: Ursprünglicher Kaufpreis der Immobilie. <br/> EN: Initial property purchase price.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        year:
          description: |
            DE: Jahr des Kaufes / der Fertigstellung. <br/> EN: Year of payment / Year of completion.
          allOf:
          - $ref: '#/components/schemas/Year'
    Year:
      type: object
      required:
      - value
      properties:
        value:
          type: string
          format: date-fullyear
          example: 2019
          description: |
            DE: Datum-Volljahr Format nach ISO8601 <a href="<a href="https://tools.ietf.org/html/rfc6902">RFC 6902</a>">ISO8601</a> <br/> EN: Date-fullyear format following ISO8601 <a href="<a href="https://tools.ietf.org/html/rfc6902">RFC 6902</a>">ISO8601</a>
    Building:
      type: object
      description: |
        DE: Information über das Gebäude. <br/> EN: Information about the building.
      properties:
        construction:
          $ref: '#/components/schemas/Construction'
        yearOfConstruction:
          description: |
            DE: Baujahr. <br/> EN: Year of construction.
          allOf:
          - $ref: '#/components/schemas/Year'
        lift:
          description: |
            DE: Vorhandener Aufzug. <br/> EN: Existing elevator.
          type: boolean
        stories:
          description: |
            DE: Anzahl der Vollgeschosse (ohne Keller/Dachboden). <br/> EN: Number of floors (without basement/attic).
          type: integer
          format: int32
        buildingVolume:
          description: |
            DE: Umbauter Raum. <br/>
            EN: Enclosed space.
          allOf:
          - $ref: '#/components/schemas/CubicMeter'
        prefabrication:
          $ref: '#/components/schemas/Prefabrication'
    Construction:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/ConstructionKey'
    ConstructionKey:
      type: string
      description: |
        DE: Bauweise des Gebäudes (nicht abschließende Aufzählung), z.B. MASSIVE=Massivbauweise, PREFABRICATED=Plattenbauweise, WOOD_FRAME=Holzständerbauweise, WOOD=Holzbauweise, HALF_TIMBERED=Fachwerkbauweise, LOG_BUILDING=Blockhausbauweise, LOAM=Lehmbauweise. <br/> EN: open ended enum contains construction of the property, possible values are SOLID, CONCRETE_SLAB, WOOD_STAND, WOOD, TIMBER_FRAMING, LOG_BUILDING, COB, OTHER
      example: SOLID
      x-extensible-enum:
      - SOLID
      - CONCRETE_SLAB
      - WOOD_STAND
      - WOOD
      - TIMBER_FRAMING
      - LOG_BUILDING
      - COB
      - OTHER
    CubicMeter:
      type: object
      description: |
        DE: Angabe in Kubikmetern. <br/> EN: Specification in cubic metres.
      required:
      - value
      properties:
        value:
          type: number
          format: double
    Prefabrication:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/PrefabricationKey'
    PrefabricationKey:
      type: string
      description: |
        DE: Besonderheiten der Bauart (nicht abschließende Aufzählung), z.B NORMAL=keine_Besonderheiten, PREFABRICATED_Fertighaus, BAREBONES_HOUSE_Ausbauhaus, CONSTRUCTION_KIT_Bausatzhaus . <br/> EN: Open ended enum contains special construction design, possible values are NO_SPECIFICS, PREFABRICATED_HOUSE, GROW_HOUSE, SELF_BUILD_HOUSE .
      example: NO_SPECIFICS
      x-extensible-enum:
      - NO_SPECIFICS
      - PREFABRICATED_HOUSE
      - GROW_HOUSE
      - SELF_BUILD_HOUSE
      - OTHER
    RealEstatePropertyCondition:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/RealEstatePropertyConditionKey'
    RealEstatePropertyConditionKey:
      type: string
      description: |
        DE: Zustand des Gebäudes (nicht abschließende Aufzählung), z.B. IN_TOTAL_RENOVATION_NEED, IN_EXTENSIVE_MODERNISATION_NEEED, IN_RENOVATION_NEED, IN_MODERNISATION_NEED, WELL_KEPT, AS_NEW. <br/> EN: open ended enum contains general condition of the real estate, possible values are IN_TOTAL_RENOVATION_NEED, IN_EXTENSIVE_MODERNISATION_NEEED, IN_RENOVATION_NEED, IN_MODERNISATION_NEED, WELL_KEPT, AS_NEW
      example: IN_RENOVATION_NEED
      x-extensible-enum:
      - IN_TOTAL_RENOVATION_NEED
      - IN_EXTENSIVE_MODERNISATION_NEEED
      - IN_RENOVATION_NEED
      - IN_MODERNISATION_NEED
      - WELL_KEPT
      - AS_NEW
      - OTHER
    Furnishing:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/FurnishingKey'
    FurnishingKey:
      type: string
      description: |
        DE: Beurteilung der Austattung der Immobilie (nicht abschließende Aufzählung). Einflussfaktoren sind z. B. verwendete Böden, etc. <br/> EN: Open ended enum contains property configuration (furnishing) details, possible values are (SIMPLE, GOOD, VERY_GOOD).
      example: SIMPLE
      x-extensible-enum:
      - SIMPLE
      - GOOD
      - VERY_GOOD
      - OTHER
    ParkingSpace:
      type: object
      required:
      - type
      description: |
        DE: Information über den Parkplatz. <br/> EN: Information about the parking space.
      properties:
        type:
          $ref: '#/components/schemas/ParkingSpaceType'
        pitchNumber:
          description: |
            DE: Stellplatznummer. <br/> EN: Parking Space Number.
          type: string
        count:
          description: |
            DE: Anzahl Parkplätze von diesem Typ. <br/> EN: Number of parking spaces of this type.
          type: integer
          format: int32
    ParkingSpaceType:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/ParkingSpaceTypeKey'
    ParkingSpaceTypeKey:
      type: string
      example: DUPLEX_GARAGE
      x-extensible-enum:
      - OUTSIDE_PARKING_SPACE
      - UNDERGROUND_GARAGE
      - DUPLEX_GARAGE
      - CARPORT_GARAGE
      - SEPARATE_GARAGE
      - DOUBLE_GARAGE
    ExistingModernisations:
      type: object
      description: |
        DE: Information über die durchgeführte Modernisierungen. <br/> EN: Complete information about modernisations that were carried out.
      properties:
        yearOfLastRefurbishment:
          type: object
          description: |
            DE: Jahr der letzten Modernisierung. <br/> EN: Year of a the last modernisation.
          allOf:
          - $ref: '#/components/schemas/Year'
        yearOfTotalRefurbishment:
          type: object
          description: |
            DE: Jahr der Totalsanierung. <br/> EN: Year of a complete modernisation.
          allOf:
          - $ref: '#/components/schemas/Year'
        description:
          description: |
            DE: Beschreibung über die durchgeführte Modernisierungen. <br/>
            EN: Description of modernisations that were carried out.
          type: string
        totalCosts:
          description: |
            DE: Gesammte Modernisierungskosten. <br/>
            EN: Total modernisation costs.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        breakdown:
          description: |
            DE: Detailierte Information über die durchgeführte Modernisierungen. <br/>
            EN: Breakdown (details) about the modernisations that were carried out.
          items:
            $ref: '#/components/schemas/ExistingModernisation'
    AreaInfo:
      type: object
      description: |
        DE: Information über die gesamte Wohn- und Nutzfläche. <br/> EN: Information about the total residential and useable area.
      properties:
        areaRented:
          description: |
            DE: Vermietete Fläche. <br/>
            EN: Rented space.
          allOf:
          - $ref: '#/components/schemas/SquareMeter'
        areaTotal:
          description: |
            DE: Wohnfläche. <br/>
            EN: Living space.
          allOf:
          - $ref: '#/components/schemas/SquareMeter'
        landSize:
          description: |
            DE: Grundstücksgröße. <br/>
            EN: Property space.
          allOf:
          - $ref: '#/components/schemas/SquareMeter'
        commercialArea:
          description: |
            DE: Gewerbliche Fläche. <br/>
            EN: Commercial space.
          allOf:
          - $ref: '#/components/schemas/SquareMeter'
        commercialAreaForOwnUse:
          description: |
            DE: Gewerbliche Fläche für Eigenbedarf. <br/>
            EN: Commercial space for own use.
          allOf:
          - $ref: '#/components/schemas/SquareMeter'
    SquareMeter:
      type: object
      description: |
        DE: Angabe in Quadratmetern. <br/> EN: Specification in square metres.
      required:
      - value
      properties:
        value:
          type: number
          format: double
    RentInfo:
      type: object
      description: |
        DE: Information über die Vermietung. <br/> EN: Rent information.
      properties:
        sustainableRent:
          description: |
            DE: Nachhaltige Miete pro qm. <br/>
            EN: Sustainable rent per square meter.
          allOf:
          - $ref: '#/components/schemas/PeriodicalEuroAmountPerSquareMeter'
        expectedRent:
          description: |
            DE: Erwartete Gesamtnettokaltmiete. <br/>
            EN: Expected total net cold rent.
          allOf:
          - $ref: '#/components/schemas/PeriodicalEuroAmount'
        expectedRentCommercial:
          description: |
            DE: Erwartete gewerbliche Nettokaltmiete. <br/>
            EN: Expected commercial net cold rent.
          allOf:
          - $ref: '#/components/schemas/PeriodicalEuroAmount'
        expectedRentResidential:
          description: |
            DE: Erwartete Nettokaltmiete wohnwirtschaftlich. <br/>
            EN: Expected residential net cold rent.
          allOf:
          - $ref: '#/components/schemas/PeriodicalEuroAmount'
        garageRent:
          description: |
            DE: Miete für Garage / Stellplatz. <br/>
            EN: Rent for garage / parking space.
          allOf:
          - $ref: '#/components/schemas/PeriodicalEuroAmount'
    RealEstateRating:
      description: |
        DE: Information laut Immobilionbewertung. <br/> EN: Information from estate evaluation
      type: object
      required:
      - type
      properties:
        type:
          type: string
          default: DEFAULT
        marketValue:
          description: |
            DE: Geschätzter Marktwert. <br/> EN: Estimated market value.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        marketValueEvaluation:
          description: |
            DE: Marktwert entsprechend einer Infoquelle (z. B. Sprengnetter). <br/> EN: Market value according to an information source (e.g. Sprengnetter).
          allOf:
          - $ref: '#/components/schemas/MarketValueEvaluation'
      discriminator:
        propertyName: type
        mapping:
          HOUSE: '#/components/schemas/HouseRating'
          DEFAULT: '#/components/schemas/RealEstateRating'
    MarketValueEvaluation:
      type: object
      description: |
        DE: Information über eine externe Marktbewertung. <br/> EN: Information about external market value evaluation.
      required:
      - marketValue
      properties:
        marketValue:
          description: |
            DE: Marktwert der Immobilie. <br/>
            EN: Estate market value.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        evaluationInformation:
          description: |
            DE: Information über die Wertbewertung der Immobilie. <br/>
            EN: Information about the estate value evaluation.
          allOf:
          - $ref: '#/components/schemas/EvaluationInformation'
    EvaluationInformation:
      type: object
      properties:
        source:
          description: |
            DE: Infoquelle des aktuellen Marktwert der Immobilie oder Grundstücks. <br/> EN: Source for the current estate or land value evaluation.
          allOf:
          - $ref: '#/components/schemas/StatSource'
        date:
          description: |
            DE: Datum der Bewertung. <br/> EN: Date of the evaluation.
          allOf:
          - $ref: '#/components/schemas/ISODate'
        contact:
          description: |
            DE: Kontaktinformation bei Rückfragen zur Bewertung. <br/> EN: Contact information for the evaluation.
          allOf:
          - $ref: '#/components/schemas/EvaluationInformationContactData'
    StatSource:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/StatSourceKey'
    StatSourceKey:
      type: string
      description: |
        DE: Infoquelle fuer den aktuellen Marktwert des Gebäudes oder Grundstuecks, z.B. MAP=Bodenrichtwertkarte, GSD, EVAL_COM=Gutachterausschuss, HVB, IMMOSCOUT, IMMOPOOL, LBS_LOCA=LBS_Zweigstelle, PLOETZ, IVD_SPIEGEL, BANK_LOCAL=Bank_vor_Ort, CITY, SPGNET=Sprengnetter, ING=ING_Objektbewertung, OTHER. <br/> EN: Open ended enum contains source for the current market or land value evaluation, possible values are MAP, GSD, EVAL_COM, HVB, IMMOSCOUT, IMMOPOOL, LBS_LOCAL, PLOETZ, IVD_SPIEGEL, BANK_LOCAL, CITY, SPGNET, ING, OTHER.
      example: MAP
      x-extensible-enum:
      - MAP
      - GSD
      - EVAL_COM
      - EXPERT
      - HVB
      - IMMOSCOUT
      - IMMOPOOL
      - LBS_LOCAL
      - PLOETZ
      - IVD_SPIEGEL
      - BANK_LOCAL
      - CITY
      - SPGNET
      - ING
      - OTHER
      - BHW
      - RDM_SPIEGEL
    EvaluationInformationContactData:
      type: object
      properties:
        description:
          example: Gemeinde Musterstadt
          description: |
            DE: Kontaktinformationbeschreibung. <br/> EN: Description about the contact for the evaluation.
          type: string
        phone:
          description: |
            DE: Telefonnummer des Ansprechspartner für die Bewertung. <br/> EN: Phone number of the contact person for evaluation.
          type: string
    HouseRating:
      description: |
        DE: Bewertung des Hauses (Gebäude und Grundstueck). <br/> EN: Rating of a house (building and property).
      type: object
      allOf:
      - $ref: '#/components/schemas/RealEstateRating'
      - properties:
          type:
            type: string
            default: HOUSE
          landValueEvaluation:
            $ref: '#/components/schemas/LandValueEvaluation'
    LandValueEvaluation:
      type: object
      description: |
        DE: Information über den Marktwert des Grundstücks. <br/> EN: Information about land value evaluation.
      required:
      - groundValue
      properties:
        groundValue:
          description: |
            DE: Marktwert des Grundstücks. <br/>
            EN: Land value.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        evaluationInformation:
          description: |
            DE: Information über die Wertbewertung des Grundstücks. <br/>
            EN: Information about the land value evaluation.
          allOf:
          - $ref: '#/components/schemas/EvaluationInformation'
    ApartmentFloor:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/ApartmentFloorKey'
    ApartmentFloorKey:
      type: string
      description: |
        DE: Lage des Appartments im Gebäude (nicht abschließende Aufzählung), zum Beispiel: BASEMENT=Untergeschoss, GROUND_FLOOR=Erdgeschoss, UPPER_FLOOR=Obergeschoss/Erster Stock, SECOND_FLOOR=Zweiter Stock etc. <br/> EN: open ended enum contains position of the apartment in the building, possible values are BASEMENT, GROUND_FLOOR, UPPER_FLOOR, SECOND_FLOOR, THIRD_FLOOR, FOURTH_FLOOR, FIFTH_FLOOR, SIXTH_FLOOR_OR_HIGHER
      example: BASEMENT
      x-extensible-enum:
      - BASEMENT
      - GROUND_FLOOR
      - UPPER_FLOOR
      - SECOND_FLOOR
      - THIRD_FLOOR
      - FOURTH_FLOOR
      - FIFTH_FLOOR
      - THIRD_FOURTH_OR_FIFTH_FLOOR
      - SIXTH_FLOOR_OR_HIGHER
      - OTHER
    SpecialRealEstateCharacteristics:
      description: |
        DE: Spezielle Nutzung der Immobilie. <br/> EN: Special use of property.
      type: object
      required:
      - type
      properties:
        type:
          type: string
          default: DEFAULT
        careProperty:
          description: |
            DE: Betreutes Wohnen. <br/> EN: Assisted living.
          type: boolean
        holidayProp:
          description: |
            DE: Ferienimmobilie. <br/> EN: Holiday property.
          type: boolean
        luxury:
          description: |
            DE: Luxusobjekt. <br/> EN: Luxury estate.
          type: boolean
        monumentProtection:
          description: |
            DE: Objekt unter Denkmalschutz. <br/> EN: Estate under monument protection.
          type: boolean
      discriminator:
        propertyName: type
        mapping:
          HOUSE: '#/components/schemas/SpecialHouseCharacteristics'
          DEFAULT: '#/components/schemas/SpecialRealEstateCharacteristics'
    SpecialHouseCharacteristics:
      description: |
        DE: Spezielle Nutzung des Hauses. <br/> EN: Special use of the house.
      type: object
      allOf:
      - $ref: '#/components/schemas/SpecialRealEstateCharacteristics'
      - properties:
          type:
            type: string
            default: HOUSE
          farm:
            description: |
              DE: Bauernhof. <br/> EN: Farm.
            type: boolean
    House:
      description: |
        DE: Zusätzliche Information zu der Immobilie von Typ "HOUSE" (Haus). <br/>
        EN: Additional Information for the estate with the type "HOUSE".
      type: object
      allOf:
      - $ref: '#/components/schemas/RealEstate'
      - properties:
          rating:
            $ref: '#/components/schemas/HouseRating'
          attic:
            $ref: '#/components/schemas/AtticDetail'
          basement:
            $ref: '#/components/schemas/Basement'
          specialCharacteristics:
            $ref: '#/components/schemas/SpecialHouseCharacteristics'
          separatedByWEG:
            description: |
              DE: Geteilt nach dem Wohneigentumsgesetz (WEG). <br/> EN: Separated based on the WEG law.
            type: boolean
    AtticDetail:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/AtticDetailKey'
    AtticDetailKey:
      type: string
      description: |
        DE: Details zum Dachgeschoss (nicht abschließende Aufzählung), z.B DEVELOPED=ausgebaut, UPGRADEABLE=ausbaufähig, NOT_UPGRADEABLE=nicht_ausbaufähig. <br/> EN: open ended enum contains attic details, possible values are DEVELOPED, UPGRADEABLE, NOT_UPGRADEABLE.
      example: DEVELOPED
      x-extensible-enum:
      - DEVELOPED
      - PARTIALLY_DEVELOPED
      - UPGRADEABLE
      - NOT_UPGRADEABLE
      - OTHER
    Basement:
      type: object
      description: |
        DE: Information über den Keller. <br/> EN: Information about building basement.
      properties:
        basementDetail:
          $ref: '#/components/schemas/BasementDetail'
        basementArea:
          description: |
            DE: Kellerfläche. <br/>
            EN: Basement space.
          allOf:
          - $ref: '#/components/schemas/SquareMeter'
    BasementDetail:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/BasementDetailKey'
    BasementDetailKey:
      type: string
      description: |
        DE: Details zum Keller (nicht abschließende Aufzählung), z.B DEVELOPED=voll_unterkellert, PARTIALY_DEVELOPED=teil_unterkellert, NONE=nicht_unterkellert. <br/> EN: Open ended enum contains basement details, possible values are DEVELOPED, PARTIALY_DEVELOPED, NONE.
      example: DEVELOPED
      x-extensible-enum:
      - DEVELOPED
      - PARTIALLY_DEVELOPED
      - NONE
      - OTHER
    Plot:
      description: |
        DE: Zusätzliche Information zu der Immobilie von Typ "PLOT" (Grundstück). <br/>
        EN: Additional information for the estate with the type "PLOT".
      type: object
      allOf:
      - $ref: '#/components/schemas/Estate'
      - properties:
          rating:
            $ref: '#/components/schemas/LandValueEvaluation'
          landSize:
            description: |
              DE: Grundstücksgröße. <br/>
              EN: Property space.
            allOf:
            - $ref: '#/components/schemas/SquareMeter'
    FinancialStandingSummary:
      type: object
      properties:
        totalIncome:
          description: |
            DE: Nettoeinkommen
            EN: Total net income
          allOf:
          - $ref: '#/components/schemas/PeriodicalEuroAmount'
        totalExpenses:
          description: |
            DE: Ausgaben
            EN: Total expenses
          allOf:
          - $ref: '#/components/schemas/PeriodicalEuroAmount'
        surplus:
          description: |
            DE: Haushaltsüberschus- Restliquidität nach Finanzierung
            EN: Remaining liquidity after financing
          allOf:
          - $ref: '#/components/schemas/PeriodicalEuroAmount'
        reserves:
          description: |
            DE: Rücklagen
            EN: Total reserves after financing
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        totalLiabilities:
          description: |
            DE: Summe Verbindlingkeiten
            EN: Total liabilities
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
    ExistingModernisation:
      type: object
      description: |
        DE: Information über die durchgeführte und geplante Modernisierungen. <br/> EN: Complete information about carried out and planned modernisations.
      required:
      - modernisationTypeAndScope
      - modernisationCost
      properties:
        modernisationTypeAndScope:
          $ref: '#/components/schemas/ModernisationTypeAndScope'
        year:
          description: |
            DE: Jahr der Modernisierung. <br/> EN: Year of modernisation.
          allOf:
          - $ref: '#/components/schemas/Year'
        modernisationCost:
          description: |
            DE: Modernisierungskosten. <br/>
            EN: Modernisation costs.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
    ConsultationItem:
      type: object
      required:
      - _href
      properties:
        _href:
          $ref: '#/components/schemas/ResourceRef'
        embedded:
          $ref: '#/components/schemas/Consultation'
    Consultation:
      type: object
      description: |
        DE: Informationen über die Beratung und dazugehörige Empfehlungen. <br/>
        EN: Information about the involved parties in the consultation phase and the associated recommendations.
      required:
      - broker
      properties:
        broker:
          description: |
            DE: Daten des Vermittlers. <br/>
            EN: Information about the main Broker (Interhp, Prohyp, MLP Hyp or Prohyp-WhiteLabel-Partner).
          allOf:
          - $ref: '#/components/schemas/Advisor'
        subBroker:
          description: |
            DE: Untervermittler des Antrags. <br/>
            EN: Sub advisor.
          allOf:
          - $ref: '#/components/schemas/Advisor'
        informers:
          type: array
          description: |
            DE: Daten des Zuträgers. <br/>
            EN: Information about the involved informer.
          items:
            $ref: '#/components/schemas/Informer'
        recommendation:
          $ref: '#/components/schemas/Recommendation'
        brokerageOrganization:
          type: string
          description: |
            DE: Beratungsunternehmenidentifikator - Vermittlernummer. <br/>
            EN: Advisor company identifier.
    Informer:
      type: object
      description: |
        DE: Informationen über den Zuträger. <br/> EN: Information about informer.
      properties:
        informerId:
          $ref: '#/components/schemas/InformerId'
        externalId:
          type: string
          description: External Informer-ID
        person:
          $ref: '#/components/schemas/PersonName'
        contact:
          $ref: '#/components/schemas/Contact'
        address:
          $ref: '#/components/schemas/Address'
        company:
          type: string
          description: |
            DE: Firma des Zuträgers. <br/> EN: Company of the informer.
    Recommendation:
      type: object
      description: |
        DE: Empfehlung des Beraters. <br/> EN: Financing advisor recommendations.
      properties:
        chefsSuggestion:
          type: boolean
          description: |
            DE: Angebot vom Berater empfohlen. <br/> EN: Offer is recommended by the financing advisor.
        explanation:
          type: string
          description: |
            DE: Erläuterung zur Empfehlung des Beraters. <br/> EN: Explanation of the financing advisor's recommendation.
    FinancingVenture:
      type: object
      description: |
        DE: Vermögenswerte, welche (operativ) in die Finanzierung aufgenommen werden sollen. <br/> EN: Operational (venture) assets used in the financing process.
      required:
      - reason
      - mortgageProperty
      properties:
        reason:
          $ref: '#/components/schemas/FinancingApplicationReason'
        mortgageProperty:
          description: |
            DE: Referenz zum Beleihungsobjekt/Finanzierungsobjekt auf das sich das Finanzierungsvorhaben bezieht. <br/> EN: Reference to for the financing process related asset / property.
          allOf:
          - $ref: '#/components/schemas/EstateRef'
        collateralMortgageProperties:
          $ref: '#/components/schemas/CollateralMortgageProperties'
        investEquity:
          $ref: '#/components/schemas/InvestEquity'
        assignmentForSecurity:
          $ref: '#/components/schemas/AssignmentForSecurity'
        utilization:
          $ref: '#/components/schemas/Utilization'
      discriminator:
        propertyName: reason
        mapping:
          BUY_NEW: '#/components/schemas/FinancingVentureBuyNew'
          BUY_EXISTING: '#/components/schemas/FinancingVentureBuyExisting'
          BUILD: '#/components/schemas/FinancingVentureConstruction'
          REFINANCE: '#/components/schemas/FinancingVentureDebtRescheduling'
          RENOVATE: '#/components/schemas/FinancingVentureRenovation'
          RAISE_CAPITAL: '#/components/schemas/FinancingVentureOtherCapitalFinancing'
    FinancingApplicationReason:
      type: string
      description: |
        DE: Finanzierungsgründe (nicht abschließende Aufzählung), z.B. BUY_NEW, BUY_EXISTING, BUILD, REFINANCE, RENOVATE, RAISE_CAPITAL. <br/> EN: Open ended enum contains type of the financing reason, possible values are BUY_NEW, BUY_EXISTING, BUILD, REFINANCE, RENOVATE, RAISE_CAPITAL.
      example: BUY_EXISTING
      x-extensible-enum:
      - BUY_NEW
      - BUY_EXISTING
      - BUILD
      - REFINANCE
      - RENOVATE
      - RAISE_CAPITAL
    CollateralMortgageProperties:
      description: |
        DE: Weitere Beleihungsobjekte die als Sicherheit verwendet werden. <br/> EN: Other estates to be pledged as security deposit.
      type: object
      properties:
        estates:
          type: array
          items:
            $ref: '#/components/schemas/EstateRef'
          minItems: 1
    InvestEquity:
      type: object
      description: |
        DE: Vermögenswerte, welche (operativ) in die Finanzierung aufgenommen werden sollen. <br/> EN: Operational (venture) assets used in the financing process.
      properties:
        cash:
          description: |
            DE: Bankguthaben. <br/>
            EN: Cash amount.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        mortgageSaving:
          description: |
            DE: Bausparguthaben. <br/>
            EN: Mortgage savings.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        otherEstates:
          description: |
            DE: Weiteres Immobilienvermögen (Marktwert). <br/>
            EN: Other real estate assets (market value).
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        personalContribution:
          description: |
            DE: Eigenleistung ("Muskelhypothek"). <br/>
            EN: Personal contribution.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        stock:
          description: |
            DE: Wertpapiere wie z.B. aktien. <br/>
            EN: Securities e.g. stocks, bonds.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        depositPaidInAdvance:
          description: |
            DE: Bereits geleistete Anzahlung. <br/>
            EN: Deposit already paid in advance.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        landPaidInAdvance:
          description: |
            DE: Bereits geleistete Anzahlung für das Grundstück. <br/>
            EN: Deposit paid in advance for the land.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        relevantLoans:
          type: array
          description: |
            DE: Sammlung von Darlehen die für das Finanzierungsvorhaben relevant sind. <br/>
            EN: Collection of loans relevant for the planed financing venture.
          items:
            $ref: '#/components/schemas/VentureRelevantLoan'
    VentureRelevantLoan:
      type: object
      required:
      - amount
      - type
      description: |
        DE: Information über Darlehen die zu Hypothek hinzugefügt werden. <br/>
        EN: Information about existing loans added to the mortgage.
      properties:
        amount:
          description: |
            DE: Darlehenssumme. <br/>
            EN: Loan amount.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        type:
          $ref: '#/components/schemas/VentureRelevantLoanType'
        until:
          description: |
            DE: Ablauf Sollzinsbindung. <br/>
            EN: Fixed interest rate expiry date.
          allOf:
          - $ref: '#/components/schemas/ISODate'
        description:
          description: |
            DE: Beschreibung für bestehende Darlehen. <br/>
            EN: Description of the existing loan.
          type: string
    VentureRelevantLoanType:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/VentureRelevantLoanTypeKey'
    VentureRelevantLoanTypeKey:
      type: string
      description: |
        DE: Bestehender Darlehenstyp (nicht abschließende Aufzählung), z.B. EMPLOYMENT=Arbeitgeberdarlehen, PRIVATE=Privatdarlehen, MORTGAGE_SAVING_PLAN=Bauspardarlehen, PUBLIC=Öffentliche Darlehen, OTHER=Sonstige Darlehen. <br/> EN: Open ended enum contains existing loan debt type, possible values are (EMPLOYMENT, PRIVATE, MORTGAGE_SAVING_PLAN, PUBLIC, OTHER)
      example: EMPLOYMENT
      x-extensible-enum:
      - EMPLOYMENT
      - PRIVATE
      - MORTGAGE_SAVING_PLAN
      - PUBLIC
      - OTHER
    Utilization:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/UtilizationKey'
    AssignmentForSecurity:
      description: |
        DE: Sicherungsabtretung von Vermögen.
        EN: Equity for assignment for security.
      properties:
        realEstateAssignedForSecurity:
          description: |
            DE: Sicherungsabtretung von Immobilienvermögen. <br/>
            EN: Other realestate assigned for security.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        cashAssignedForSecurity:
          description: |
            DE: Sicherungsabtretung aus Bankguthaben.<br/>
            EN: Bank balance assigned for security.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        mortgageSavingAssignedForSecurity:
          description: |
            DE: Sicherungsabtretung aus Bausparguthaben.<br/>
            EN: Home savings plans assigned for security.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
    FinancingVentureBuyNew:
      description: |
        DE: Information über das Finanzierungsvorhaben für den Kauf einer Neubauimmobilie. <br/>
        EN: Information about the financing venture to buy a newly built property.
      required:
      - financingNeed
      - financingDetails
      allOf:
      - $ref: '#/components/schemas/FinancingVenture'
      - properties:
          reason:
            type: string
            default: BUY_NEW
          financingNeed:
            $ref: '#/components/schemas/BuyNewEstateFinancing'
          financingDetails:
            description: |
              DE: Finanzierungsdetails zum Kauf einer Neubauimmobilie. <br/>
              EN: Financing details relevant for purchase of newly build property.
            allOf:
            - $ref: '#/components/schemas/ForeignEstateFinancingDetails'
    ForeignEstateFinancingDetails:
      description: |
        DE: Finanzierungsdetails über das Finanzierungvorhaben der Immobilie die erworben wird. <br/>
        EN: Financing details about financing process associated with the property which is to be acquired.
      type: object
      allOf:
      - $ref: '#/components/schemas/FinancingDetails'
      - properties:
          type:
            type: string
            default: FOREIGN
          newOwners:
            description: |
              DE: Eigentümer zum Zeitpunkt der Finanzierung (Erste Abteilung des Grundbuchblattes). <br/> EN: Owner at the time of financing (First Section of the Land Register Page)
            type: array
            items:
              $ref: '#/components/schemas/PropertyRegisterOwner'
          saleInfo:
            $ref: '#/components/schemas/SaleInformation'
          vendor:
            $ref: '#/components/schemas/EstateVendor'
    FinancingDetails:
      description: |
        DE: Detailierte Information über das Finanzierungvorhaben. <br/>
        EN: Detailed information about the financing process.
      type: object
      required:
      - type
      properties:
        type:
          type: string
        payoutDate:
          description: |
            DE: Auszahlungsdatum. <br/>
            EN: Payout date.
          allOf:
          - $ref: '#/components/schemas/ISODate'
        amortisationStartDate:
          description: |
            DE: Tilgungsbeginn. <br/>
            EN: Start of amortisation.
          allOf:
          - $ref: '#/components/schemas/ISODate'
        loanQuota:
          $ref: '#/components/schemas/LoanQuota'
      discriminator:
        propertyName: type
        mapping:
          OWN: '#/components/schemas/OwnEstateFinancingDetails'
          FOREIGN: '#/components/schemas/ForeignEstateFinancingDetails'
    LoanQuota:
      type: object
      description: |
        DE: Wert und Prozentsatz für die Darlehensquote. <br/> EN: Value and percentage for a loan quota
      required:
      - type
      properties:
        type:
          $ref: '#/components/schemas/LoanQuotaType'
        lendingValue:
          description: |
            DE: Beleihungswert. <br/>
            EN: Lending value.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        percentage:
          description: |
            DE: Beleihungsauslauf. <br/>
            EN: Loan quota percentage.
          allOf:
          - $ref: '#/components/schemas/Percentage'
        conditional:
          description: |
            DE: Beleihungsauslauf für die Konditionermittlung. <br/>
            EN: Loan quota for condition retrieval.
          allOf:
          - $ref: '#/components/schemas/Percentage'
    OwnEstateFinancingDetails:
      description: |
        DE: Finanzierungsdetails über das Finanzierungvorhaben der bereits besessenen Immobilie. <br/>
        EN: Financing details about financing process associated with already owned property.
      type: object
      allOf:
      - $ref: '#/components/schemas/FinancingDetails'
      - properties:
          type:
            type: string
            default: OWN
          acquisitionYear:
            description: |
              DE: Jahr der Zahlung / Jahr der Fertigstellung. <br/> EN: Purchase / completion year.
            allOf:
            - $ref: '#/components/schemas/Year'
    PropertyRegisterOwner:
      type: object
      description: |
        DE: Information über den Eigentümer. <br/>
        EN: Information about property owner.
      required:
      - type
      properties:
        type:
          description: |
            DE: Eigentümertyp. <br/>
            EN: Owner type.
          type: string
          x-extensible-enum:
          - APPLICANT
          - THIRD_PERSON
      discriminator:
        propertyName: type
        mapping:
          APPLICANT: '#/components/schemas/PropertyRegisterOwnerApplicant'
          THIRD_PERSON: '#/components/schemas/PropertyRegisterOwnerThirdPerson'
    SaleInformation:
      type: object
      description: |
        DE: Information über den Objektverkauf. <br/> EN: Object sale information.
      properties:
        familySale:
          description: |
            DE: Verkauf findet innerhalb der Familie statt. <br/> EN: Sold within family.
          type: boolean
        forcedSale:
          $ref: '#/components/schemas/ForeclosureSale'
    ForeclosureSale:
      description: |
        DE: Information über Zwangsversteigerung. <br/> EN: Information about foreclosure sale.
      type: object
      properties:
        previousOwner:
          $ref: '#/components/schemas/PreviousOwner'
        estimatedValue:
          description: |
            DE: Geschätzte Wert der Immobile. <br/>
            EN: Estimated property value.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        auction:
          $ref: '#/components/schemas/AuctionInfo'
    PreviousOwner:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/PreviousOwnerKey'
    PreviousOwnerKey:
      type: string
      description: |
        DE: Vorheriger Immobilienbesitzer (nicht abschließende Aufzählung), z.B. THIRD_PERSON, FAMILY_MEMBER. <br/> EN: Open ended enum contains previous owner of the estate, possible values are THIRD_PERSON, FAMILY_MEMBER.
      example: THIRD_PERSON
      x-extensible-enum:
      - THIRD_PERSON
      - FAMILY_MEMBER
    AuctionInfo:
      type: object
      description: |
        DE: Information zur Immobilienauktion. <br/> EN: Information about the estate auction.
      properties:
        auctionDate:
          description: |
            DE: Auktionsdatum. <br/>
            EN: Auction date.
          allOf:
          - $ref: '#/components/schemas/ISODate'
        auctionMaxBid:
          description: |
            DE: Höchstes Auktionsgebot. <br/>
            EN: Highest auction bid.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        bidAccepted:
          description: |
            DE: Flag ob das Angebot schon angenommen wurde. <br/>
            EN: Indicates if the bid is already accepted.
          type: boolean
    FinancingVentureBuyExisting:
      description: |
        DE: Information über das Finanzierungsvorhaben für den Kauf einer bestehender Immobilie. <br/>
        EN: Information about the financing venture to buy an existing property.
      required:
      - financingNeed
      - financingDetails
      allOf:
      - $ref: '#/components/schemas/FinancingVenture'
      - properties:
          reason:
            type: string
            default: BUY_EXISTING
          financingNeed:
            $ref: '#/components/schemas/BuyExistingEstateFinancing'
          financingDetails:
            $ref: '#/components/schemas/ForeignEstateFinancingDetails'
    FinancingVentureConstruction:
      description: |
        DE: Information über das Finanzierungsvorhaben beim Bau einer Immobilie. <br/>
        EN: Information about the financing venture when building the property.
      required:
      - financingNeed
      - financingDetails
      allOf:
      - $ref: '#/components/schemas/FinancingVenture'
      - properties:
          reason:
            type: string
            default: BUILD
          financingNeed:
            $ref: '#/components/schemas/BuildEstateFinancing'
          financingDetails:
            $ref: '#/components/schemas/ForeignEstateFinancingDetails'
    FinancingVentureDebtRescheduling:
      description: |
        DE: Information über das Finanzierungsvorhaben beim Anschlussfinanzierung / Umschuldung. <br/>
        EN: Information about the financing venture for follow-up financing / rescheduling.
      required:
      - financingNeed
      - financingDetails
      allOf:
      - $ref: '#/components/schemas/FinancingVenture'
      - properties:
          reason:
            type: string
            default: REFINANCE
          financingNeed:
            $ref: '#/components/schemas/DebtReschedulingFinancing'
          financingDetails:
            $ref: '#/components/schemas/OwnEstateFinancingDetails'
    FinancingVentureRenovation:
      description: |
        DE: Information über das Finanzierungsvorhaben beim Umbau / Modernisierung. <br/>
        EN: Information about the financing venture for refurbishment / modernisation.
      required:
      - financingNeed
      - financingDetails
      allOf:
      - $ref: '#/components/schemas/FinancingVenture'
      - properties:
          reason:
            type: string
            default: RENOVATE
          financingNeed:
            $ref: '#/components/schemas/RenovateEstateFinancing'
          financingDetails:
            $ref: '#/components/schemas/OwnEstateFinancingDetails'
    FinancingVentureOtherCapitalFinancing:
      description: |
        DE: Information über das Finanzierungsvorhaben bei der Kapitalbeschaffung. <br/>
        EN: Information about the financing venture for capital raising goal.
      required:
      - financingNeed
      - financingDetails
      allOf:
      - $ref: '#/components/schemas/FinancingVenture'
      - properties:
          reason:
            type: string
            default: RAISE_CAPITAL
          financingNeed:
            $ref: '#/components/schemas/OtherCapitalFinancing'
          financingDetails:
            $ref: '#/components/schemas/OwnEstateFinancingDetails'
    Calculation:
      type: object
      required:
      - type
      - loanType
      - calculationDate
      properties:
        type:
          $ref: '#/components/schemas/CalculationType'
        calculationDate:
          description: |
            DE: Datum der Kalkulation. <br/>
            EN: Calculation date.
          allOf:
          - $ref: '#/components/schemas/ISODate'
      discriminator:
        propertyName: type
        mapping:
          HOUSEHOLD: '#/components/schemas/HouseholdCalculation'
          CONDITION: '#/components/schemas/ConditionCalculation'
          LENDING_VALUE: '#/components/schemas/LendingValueCalculation'
    CalculationType:
      type: string
      description: |
        DE: Kalkulationstyp (nicht abschließende Aufzählung), z.B. HOUSEHOLD=Haushaltsrechnung, CONDITION=Konditionskalkulation, LENDING_VALUE=Beleihungswert-Kalkulation <br/> EN: Calculation type - open ended enum contains property type details, possible values are HOUSEHOLD, CONDITION, LENDING_VALUE
      example: HOUSEHOLD
      x-extensible-enum:
      - HOUSEHOLD
      - CONDITION
      - LENDING_VALUE
    HouseholdCalculation:
      description: |
        DE: Information zu der Haushalt Kalkulation <br/>
        EN: Information about the household calculation.
      type: object
      allOf:
      - $ref: '#/components/schemas/Calculation'
      - properties:
          type:
            type: string
            default: HOUSEHOLD
          summary:
            $ref: '#/components/schemas/FinancialStandingSummary'
          details:
            type: array
            items:
              $ref: '#/components/schemas/CalculationDetail'
          financialBurden:
            type: array
            items:
              $ref: '#/components/schemas/FinancialBurdenDetail'
    CalculationDetail:
      description: |
        DE: Detailierte Information über einen Eintrag in der Kalkulation.<br/>
        EN: Detailed information about single entry in the calculation.
      type: object
      properties:
        index:
          type: integer
          description: |
            DE: Reihenfolge Index innerhalb der Kalkulationdetails. <br/>
            EN: Order index within calculation details.
        category:
          $ref: '#/components/schemas/DetailType'
        name:
          type: string
          description: |
            DE: Name des Wertes. <br/>
            EN: Entry name.
        description:
          type: string
          description: |
            DE: Beschreibung des Wertes. <br/>
            EN: Entry description.
        userInputValue:
          type: string
          description: |
            DE: Von user eingetragene Wert. <br/>
            EN: User input value.
        calculatedValue:
          type: string
          description: |
            DE: Berechnete Wert. <br/>
            EN: Calculated value.
        hints:
          type: array
          description: |
            DE: Hinweise zum  <br/>
            EN: Collection of calculation hints.
          items:
            type: string
    DetailType:
      type: string
      description: |
        DE: Kategorie des Kalkulkationwertes (nicht abschließende Aufzählung), z.B. ENTRY, SUB_TOTAL. <br/> EN: Calculated value category - open ended enum contains property type details, possible values are ENTRY, SUB_TOTAL.
      example: ENTRY
      x-extensible-enum:
      - ENTRY
      - SUB_TOTAL
    FinancialBurdenDetail:
      description: |
        DE: Detailierte Information über den Belastungsplan innerhalb der Haushaltsrechnung.<br/>
        EN: Detailed information about financial burden within household calculation.
      type: object
      properties:
        index:
          description: |
            DE: Reihenfolge Index innerhalb Belastungsplan. <br/>
            EN: Order index within financial burden.
          type: integer
        deadline:
          description: |
            DE: Stichtag für die Belastung. <br/>
            EN: Burden deadline.
          allOf:
          - $ref: '#/components/schemas/ISODate'
        occasion:
          type: string
          description: |
            DE: Anlass der Belastung. <br/>
            EN: Burden reason.
        description:
          type: string
          description: |
            DE: Beschreibung der Belastung. <br/>
            EN: Burden description.
        deltaLiquidity:
          description: |
            DE: Deltaliquidität. <br/>
            EN: Delta liquidity.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        residualLiquidity:
          description: |
            DE: Restliquidität. <br/>
            EN: Residual liquidity.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
    ConditionCalculation:
      description: |
        DE: Information über Konditionskalkulation. <br/>
        EN: Information about condition calculation.
      type: object
      allOf:
      - $ref: '#/components/schemas/Calculation'
      - properties:
          type:
            type: string
            default: CONDITION
          loan:
            $ref: '#/components/schemas/LoanConditionGeneralInfo'
          details:
            type: array
            items:
              $ref: '#/components/schemas/LoanConditionDetail'
    LoanConditionGeneralInfo:
      description: |
        DE: Allgemeine Information zu den Darlehen (Konditionskalkulation). <br/>
        EN: General loan information (conditions calculation).
      type: object
      properties:
        loanAmount:
          description: |
            DE: Gesamter Darlehnsbetrag. <br/>
            EN: Total loan amount.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        loanQuota:
          description: |
            DE: Darlehnsquote (Prozentsatz) <br/>
            EN: Loan quota (percentage).
          allOf:
          - $ref: '#/components/schemas/Percentage'
        mixedEffectiveRate:
          description: |
            DE: Mischzins (effektiv). <br/>
            EN: Mixed effective rate.
          allOf:
          - $ref: '#/components/schemas/PeriodicalPercentage'
        baserateIssueDate:
          description: |
            DE: Einstandsdatum. <br/>
            EN: Base rate issue date.
          allOf:
          - $ref: '#/components/schemas/ISODate'
        burden:
          description: |
            DE: Periodische Rate (z.B. monatliche Rate). <br/>
            EN: Periodical payment amount (e.g. rate per month).
          allOf:
          - $ref: '#/components/schemas/PeriodicalEuroAmount'
        paymentTime:
          $ref: '#/components/schemas/PaymentTime'
    Percentage:
      type: object
      required:
      - value
      properties:
        value:
          type: number
          format: double
    LoanConditionDetail:
      description: |
        DE: Information über einzelnen Darlehen innerhalb des Konditionskalkulations. <br/>
        EN: Information about single loan which is a part of condition calculation.
      type: object
      properties:
        loanId:
          $ref: '#/components/schemas/LoanId'
        loanType:
          $ref: '#/components/schemas/LoanType'
        amount:
          description: |
            DE: Darlehensbetrag. <br/>
            EN: Loan amount.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        payout:
          description: |
            DE: Auszahlung (Prozent). <br/>
            EN: Payout  (percent).
          allOf:
          - $ref: '#/components/schemas/Percentage'
        maturity:
          description: |
            DE: Dauer der Sollzinsbindung. <br/>
            EN: Duration of interest rate maturity.
          allOf:
          - $ref: '#/components/schemas/Duration'
        initialAmortisationRate:
          description: |
            DE: Initiale Tilgungsrate (Prozent). <br/>
            EN: Initial amortisation rate (percent).
          allOf:
          - $ref: '#/components/schemas/Percentage'
        additionalInfo:
          type: array
          description: |
            DE: Information über einzelnen Eintrag innerhalb des Konditionskalkulation. <br/>
            EN: Information about single entry within condition calculation.
          items:
            $ref: '#/components/schemas/AdditionalInfo'
        summary:
          $ref: '#/components/schemas/LoanConditionSummary'
    LoanId:
      type: object
      description: |
        DE: ID des Darlehens. <br/> EN: Loan identifier.
      properties:
        value:
          type: string
    LoanType:
      type: string
      description: |
        DE: Art des Darlehens (nicht abschließende Aufzählung), z.B. MAIN_LOAN, AUXILIARY_LOAN, KFW_PROMOTION_LOAN. <br/> EN: Open ended enum contains possible loan types, possible values are MAIN_LOAN, AUXILIARY_LOAN, KFW_PROMOTION_LOAN.
      example: MAIN_LOAN
      x-extensible-enum:
      - MAIN_LOAN
      - AUXILIARY_LOAN
      - KFW_PROMOTION_LOAN
      - OTHER
    LoanConditionSummary:
      description: |
        DE: Zusammenfassung von Informationen zu einzelnem Darlehen (Konditionskalkulation). <br/>
        EN: Summary information about single loan (conditions calculation).
      type: object
      properties:
        effectiveRate:
          description: |
            DE: Effektiver Zins. <br/>
            EN: Effective interest rate.
          allOf:
          - $ref: '#/components/schemas/PeriodicalPercentage'
        nominalRate:
          description: |
            DE: Sollzins <br/>
            EN: Nominal rate.
          allOf:
          - $ref: '#/components/schemas/PeriodicalPercentage'
        trueEffectiveRate:
          description: |
            DE: Summe effektiver Bestandteile. <br/>
            EN: True effective rate.
          allOf:
          - $ref: '#/components/schemas/PeriodicalPercentage'
        additionalInfo:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalInfo'
    LendingValueCalculation:
      description: |
        DE: Information zu der Kalkulation <br/>
        EN: Information about the calculation.
      type: object
      allOf:
      - $ref: '#/components/schemas/Calculation'
      - properties:
          type:
            type: string
            default: LENDING_VALUE
          lendingValue:
            $ref: '#/components/schemas/LoanQuota'
          details:
            type: array
            items:
              $ref: '#/components/schemas/CalculationDetail'
    OriginInfo:
      type: object
      required:
      - client
      - externalId
      description: |
        DE: Enthält die Information über Datenquelle und Daten-Identifikator aus dem externen System. <br/> EN: Contains information about Data source and data identifier in the external system.
      properties:
        client:
          $ref: '#/components/schemas/Client'
        externalId:
          $ref: '#/components/schemas/ExternalId'
    Client:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/ClientKey'
    ClientKey:
      type: string
      description: |
        DE: Datenquelle, mögliche Werte: INTERHYP_ASP, COBA_ASP. <br/> EN: Enum representing data origin, possible values are INTERHYP_ASP, COBA_ASP.
      example: INTERHYP_ASP
      x-extensible-enum:
      - INTERHYP_ASP
      - COBA_ASP
    ExternalId:
      type: object
      description: |
        DE: Daten-Identifikator aus dem externen System. <br/> EN: Data identifier in the external system.
      properties:
        value:
          type: string
    CorrespondenceItem:
      type: object
      required:
      - type
      properties:
        type:
          $ref: '#/components/schemas/SubmissionCorrespondenceType'
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        author:
          type: string
      discriminator:
        propertyName: type
        mapping:
          MESSAGE: '#/components/schemas/SubmissionMessage'
          NOTE: '#/components/schemas/SubmissionNote'
    SubmissionCorrespondenceType:
      type: string
      description: |
        DE: Art der Korrespondenz (nicht abschließende Aufzählung), z.B. (MESSAGE, NOTE). <br/> EN: Open ended enum contains correspondence types, possible values are (MESSAGE, NOTE).
      example: MESSAGE
      x-extensible-enum:
      - MESSAGE
      - NOTE
    SubmissionMessage:
      type: object
      description: |
        DE: Enthält Nachrichten, die sich auf eine bestimmte Einreichung beziehen. Die Nachrichten richten sich an einen bestimmten Empfänger. <br/> EN: Contains messages related to a specific submission. Messages target a certain recipient.
      allOf:
      - $ref: '#/components/schemas/CorrespondenceItem'
      - properties:
          to:
            type: string
          text:
            type: string
    SubmissionNote:
      type: object
      description: |
        DE: Enthält Notizen in Bezug auf eine bestimmte Einreichung. <br/> EN: Contains notes related to a specific submission
      allOf:
      - $ref: '#/components/schemas/CorrespondenceItem'
      - properties:
          category:
            type: string
          text:
            type: string
    DebtId:
      type: object
      description: |
        DE: ID der Verbindlichkeit. <br/>
        EN: ID of the associated Debt.
      required:
      - value
      properties:
        value:
          type: string
    ModifySubmissionCommand:
      type: object
      required:
      - operation
      properties:
        trigger:
          $ref: '#/components/schemas/CommandTrigger'
        operation:
          type: string
          x-extensible-enum:
          - REVOKE
          - ASSIGN_PROCESSOR
          - UPDATE_LOAN_PARTNER_DECISION_DATE
      discriminator:
        propertyName: operation
        mapping:
          REVOKE: '#/components/schemas/RevokeSubmissionCommand'
          ASSIGN_PROCESSOR: '#/components/schemas/AssignLoanPartnerProcessorCommand'
          UPDATE_LOAN_PARTNER_DECISION_DATE: '#/components/schemas/UpdateLoanPartnerDecisionDateCommand'
    CommandTrigger:
      type: object
      required:
      - type
      properties:
        type:
          type: string
          x-extensible-enum:
          - ADVISOR
          - LOAN_PARTNER_PROCESSOR
          - SYSTEM
      discriminator:
        propertyName: type
        mapping:
          ADVISOR: '#/components/schemas/AdvisorCommandTrigger'
          LOAN_PARTNER_PROCESSOR: '#/components/schemas/LoanPartnerProcessorCommandTrigger'
          SYSTEM: '#/components/schemas/SystemCommandTrigger'
    RevokeSubmissionCommand:
      description: This command is only used for internal purposes!
      type: object
      required:
      - reason
      - revokedOn
      allOf:
      - $ref: '#/components/schemas/ModifySubmissionCommand'
      - properties:
          operation:
            type: string
            default: REVOKE
          reason:
            type: string
          reasonDescription:
            type: string
          remark:
            type: string
          revokedOn:
            type: string
            format: date-time
    AssignLoanPartnerProcessorCommand:
      description: Assign a processor to the submission
      type: object
      required:
      - processor
      allOf:
      - $ref: '#/components/schemas/ModifySubmissionCommand'
      - properties:
          operation:
            type: string
            default: ASSIGN_PROCESSOR
          processor:
            $ref: '#/components/schemas/LoanPartnerProcessingInfo'
    UpdateLoanPartnerDecisionDateCommand:
      description: Update the predicted decision date of a submission.
      type: object
      required:
      - decisionDate
      allOf:
      - $ref: '#/components/schemas/ModifySubmissionCommand'
      - properties:
          operation:
            type: string
            default: UPDATE_LOAN_PARTNER_DECISION_DATE
          decisionDate:
            $ref: '#/components/schemas/PredictedLoanPartnerDecisionDate'
    PredictedLoanPartnerDecisionDate:
      description: |
        DE: Voraussichtliches Entscheidungsdatum des Kreditgebers. <br/> EN: Predicted decision date of the loan partner.
      type: object
      required:
      - date
      properties:
        date:
          $ref: '#/components/schemas/ISODate'
        reason:
          type: string
          description: |
            DE: Begründung für das voraussichtliche Entscheidungsdatum. EN: Reason for the predicted decision date.
    InformerId:
      type: object
      required:
      - value
      description: |
        DE: ID des Zuträgers. <br/> EN: Informer id.
      properties:
        value:
          type: string
    ApplicantRelationships:
      type: object
      description: |
        A wrapper Type to hold a set of possible relationships among applicants involved in the financing application.
      properties:
        _href:
          $ref: '#/components/schemas/ResourceRef'
        embedded:
          $ref: '#/components/schemas/ApplicantRelationshipsQuery'
    ApplicantRelationshipsQuery:
      type: object
      description: |
        A wrapper Type to hold a set of possible relationships among applicants involved in the financing application.
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ApplicantRelationship'
    ApplicantRelationship:
      type: object
      description: |
        DE: Beziehung zwischen genau zwei für Antrag relevanten Antragstellern. Wenn dieses Objekt nicht vorhanden ist, dann ist existieren keine Beziehungen. <br/>
        EN: Relationship between exactly 2 applicants involved in the financing application when applicable.

        The absence of this object indicates that no relationship is available.
      required:
      - relationType
      properties:
        applicants:
          description: |
            DE: Referenzen zu den in der Beziehung involvierten Antragstellern. <br/>
            EN: Reference to the applicants involved in this relationship.
          type: array
          minItems: 2
          maxItems: 2
          items:
            $ref: '#/components/schemas/ApplicantIdRef'
        relationType:
          $ref: '#/components/schemas/ApplicantRelationshipType'
    ApplicantRelationshipType:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/ApplicantRelationshipTypeKey'
    ApplicantRelationshipTypeKey:
      type: string
      description: |
        DE: Beziehungsart (nicht abschließende Aufzählung) z.B. (MARRIED=mit Ehepartner/in, REGISTERED_PARTNERSHIP=eingetragenem Lebenspartner/in, PARTNERSHIP=Lebenspartner/in). <br/>
        EN: Open ended enum contains values for relation type, possible values are (MARRIED, REGISTERED_PARTNERSHIP, PARTNERSHIP)
      x-extensible-enum:
      - MARRIED,
      - REGISTERED_PARTNERSHIP,
      - PARTNERSHIP
      - OTHER
    EditingInfo:
      type: object
      required:
      - at
      - by
      properties:
        at:
          $ref: '#/components/schemas/ISODateTime'
        by:
          $ref: '#/components/schemas/Advisor'
        reason:
          type: string
    CycleKey:
      type: string
      description: |
        DE: Mögliche Zykluswerte (nicht abschließende Aufzählung), z.B. MONTHLY, QUARTERLY, HALF_YEARLY, ANNUAL. <br/> EN: Open ended enum contains possible cycle values, possible values are MONTHLY, QUARTERLY, HALF_YEARLY, ANNUAL.
      example: ANNUAL
      x-extensible-enum:
      - MONTHLY
      - QUARTERLY
      - HALF_YEARLY
      - ANNUAL
    Phone:
      type: object
      required:
      - phoneNumber
      - type
      properties:
        phoneNumber:
          type: string
          description: |
            DE: Mobil- oder Festnetztelefonnummer des Antragstellers. <br/> EN: Mobile or landline telephone number of the customer.
          example: +49 160 123456
        type:
          $ref: '#/components/schemas/PhoneType'
        reachable:
          $ref: '#/components/schemas/PhoneReachability'
    PhoneType:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/PhoneTypeKey'
    PhoneTypeKey:
      type: string
      description: |
        DE: Art der Telefonnummer (nicht abschließende Aufzählung, zum Beispiel: MOBILE = Mobilfunknummer, LANDLINE = Festnetznummer, UNSPECIFIED = nicht angegeben). <br/> EN: Type of the phone number, possible values are MOBILE, LANDLINE, UNSPECIFIED.
      x-extensible-enum:
      - MOBILE
      - LANDLINE
      - UNSPECIFIED
    PhoneReachability:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/PhoneReachabilityKey'
    PhoneReachabilityKey:
      type: string
      description: |
        DE: Erreichbarkeit unter dieser Telefonnumer (nicht abschließende Aufzählung, zum Beispiel: DAYTIME = tagsüber, EVENING = abends). <br/> EN: Reachable by this phone number, possible values are DAYTIME, EVENING.
      x-extensible-enum:
      - DAYTIME
      - EVENING
    FinancialStandings:
      type: object
      description: |
        Wrapper Type holds set of Financial Standings.
      required:
      - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/FinancialStandingItem'
        summary:
          $ref: '#/components/schemas/FinancialStandingSummary'
    FinancialStandingItem:
      type: object
      description: |
        Holds basic information associated with a specific financial standing type and whom it belongs.

        Further details will be delivered in the embedded property if specified.

        Please refer to *Expansion* section for more details.
      properties:
        financialStandingRef:
          $ref: '#/components/schemas/FinancialStandingRef'
        type:
          $ref: '#/components/schemas/FinancialStandingType'
        applicantId:
          description: |
            DE: Ein Referenz wem die Bonitätinformation gehören. <br/>
            EN: Reference to whom belongs this financial standing.
          allOf:
          - $ref: '#/components/schemas/ApplicantIdRef'
        embedded:
          $ref: '#/components/schemas/FinancialStanding'
    FinancialStandingRef:
      type: object
      description: |
        A Reference to a specific FinancialStanding.

        This reference consists of a link leads directly to the resource and an Id which could be used to reconstruct the url.
      properties:
        _href:
          $ref: '#/components/schemas/ResourceRef'
        financialStandingId:
          $ref: '#/components/schemas/FinancialStandingId'
    FinancialStandingId:
      type: object
      description: |
        Id of a specific FinancialStanding.
      required:
      - value
      properties:
        value:
          type: string
    FinancialStandingType:
      type: string
      description: |
        DE: Finanzstatus (nicht abschließende Aufzählung), z.B. (EQUITY, DEBT, INCOME, EXPENSE). <br/> EN: Open ended enum contains possible types financial standing, possible values are (EQUITY, DEBT, INCOME, EXPENSE).
      example: EQUITY
      x-extensible-enum:
      - EQUITY
      - DEBT
      - INCOME
      - EXPENSE
    FinancialStanding:
      type: object
      required:
      - financialStandingId
      - applicantId
      - type
      description: |
        DE: Bonitätsdaten des Antragstellers welche während der Beratungsphase gesammelt wurden.
          - Eigenkapital
          - Schulden
          - Einkommen
          - Ausgaben



        EN: Financial Standing as provided by the applicant during the consultation phase.

        A Financial Standing could be any of the following types:
          - EQUITY
          - DEBT
          - INCOME
          - EXPENSE
      properties:
        financialStandingId:
          $ref: '#/components/schemas/FinancialStandingId'
        applicantId:
          description: |
            DE: Ein Referenz wem die Bonitätinformation gehören. <br/> EN: Reference to whom belongs this financial standing.
          allOf:
          - $ref: '#/components/schemas/ApplicantIdRef'
        type:
          $ref: '#/components/schemas/FinancialStandingType'
      discriminator:
        propertyName: type
        mapping:
          EQUITY: '#/components/schemas/FinancialEquity'
          DEBT: '#/components/schemas/FinancialDebt'
          INCOME: '#/components/schemas/Income'
          EXPENSE: '#/components/schemas/Expense'
    FinancialEquity:
      type: object
      description: |
        DE: Informationen zum Eigenkapital vor Beginn des Finanzierungsprozesses. <br/> EN: Financial equity information before the financing process.
      allOf:
      - $ref: '#/components/schemas/FinancialStanding'
      - properties:
          type:
            type: string
            default: EQUITY
          cash:
            description: |
              DE: Bankguthaben (vor der Finanzierung). <br/>
              EN: Bank balance (before financing).
            allOf:
            - $ref: '#/components/schemas/EuroAmount'
          stock:
            description: |
              DE: Informationen über Wertpapiere (vor der Finanzierung). <br/>
              EN: Stock assets information (before financing).
            allOf:
            - $ref: '#/components/schemas/EuroAmount'
          mortgageSaving:
            description: |
              DE: Bausparguthaben (vor der Finanzierung). <br/>
              EN: Home savings plans (before financing).
            allOf:
            - $ref: '#/components/schemas/EuroAmount'
          insurance:
            description: |
              DE: Informationen zu Rückkaufwerte von Lebens-/Pensionsversicherungen. <br/> EN: Surrender value life-/pension insurance equity.
            allOf:
            - $ref: '#/components/schemas/EuroAmount'
          realEstate:
            $ref: '#/components/schemas/RealEstateEquity'
          other:
            $ref: '#/components/schemas/OtherEquity'
    RealEstateEquity:
      type: object
      required:
      - total
      description: |
        DE: Eigenkapital durch Immobilienvermögen. <br/> EN: Real estate equity.
      properties:
        total:
          description: |
            DE: Weiteres Immobilienvermögen (Marktwert). <br/>
            EN: Other real estate assets (market value).
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        guarantee:
          description: |
            DE: Sicherungsabtretung von Immobilienvermögen. Veraltet, ersetzt durch FinancingVenture.assignmentForSecurity.realEstateAssignedForSecurity.<br/>
            EN: Other realestate for assignment for security. Deprected, replaced by FinancingVenture.assignmentForSecurity.realEstateAssignedForSecurity.
          deprecated: true
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        items:
          type: array
          items:
            $ref: '#/components/schemas/RealEstateEquityItem'
        description:
          type: string
    RealEstateEquityItem:
      type: object
      required:
      - estateId
      - equity
      description: |
        DE: Informationen zu einem bestimmten Eigenkapital durch Immobilienvermögen. <br/> EN: Details about a specific real estate equity.
      properties:
        estateId:
          $ref: '#/components/schemas/EstateId'
        description:
          type: string
        equity:
          $ref: '#/components/schemas/RealEstateEquityDetails'
        guarantees:
          $ref: '#/components/schemas/RealEstateGuarantees'
    RealEstateEquityDetails:
      type: object
      required:
      - equity
      description: |
        DE: Informationen zum Eigenkapital durch Immobilienvermögen. <br/> EN: Details about equites associated with the real estate.
      properties:
        equity:
          description: |
            DE: Marktwert. <br/>
            EN: Market value.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
    RealEstateGuarantees:
      type: object
      description: |
        DE: Bürgschaften für die Immobilie. <br/> EN: Guarantees associated with the real estate.
      properties:
        plannedSell:
          description: |
            DE: Flag, ob das Immobilienvermögen vor dem Finanzierungsprozess verkauft werden soll. <br/> EN: Flag indicates whether the real estate to be sold before the financing.
          type: boolean
        secureFinancing:
          description: |
            DE: Flag, ob das Immobilienvermögen als Zusatzsicherheit verwendet werden soll. <br/> EN: Flag indicates whether the real estate to be used to secure the financing.
          type: boolean
    OtherEquity:
      type: object
      description: |
        DE: Sonstiges Vermögen (vor der Finanzierung). <br/>
        EN: Other assets (before financing).
      properties:
        amount:
          $ref: '#/components/schemas/EuroAmount'
        description:
          type: string
    FinancialDebt:
      type: object
      description: |
        DE: Informationen über (finanzielle) Schulden vor Beginn der angefragten Finanzierung. <br/> EN: Financial debts information before the financing process.
      allOf:
      - $ref: '#/components/schemas/FinancialStanding'
      - properties:
          type:
            type: string
            default: DEBT
          liability:
            $ref: '#/components/schemas/LiabilityDebt'
          existingLoans:
            type: array
            description: |
              DE: Alle laufenden Schulden aus Darlehen. <br/> EN: Set of current loans debts.
            items:
              $ref: '#/components/schemas/ExistingLoanDebt'
          other:
            $ref: '#/components/schemas/EuroAmount'
    LiabilityDebt:
      type: object
      description: |
        DE: Verbindlichkeiten vor Beginn der angefragten Finanzierung. <br/> EN: Liability obligations before the financing process.
      properties:
        guarantee:
          description: |
            DE: Bürgschaftsverpflichtungen. <br/>
            EN: Guarantee obligations.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        other:
          description: |
            DE: Sonstige Verbindlichkeiten. <br/>
            EN: Other liabilities.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        description:
          type: string
    ExistingLoanDebt:
      type: object
      required:
      - debtId
      - type
      description: |
        DE: Finanzierungsrelevante Darlehen. <br/> EN: Existing loan debt.

        An Existing debt could be any of the following types:
         - EMPLOYMENT
         - PRIVATE
         - MORTGAGE_SAVING_PLAN
         - OTHER
         - PUBLIC
         - SOLVENCY
         - EXISTING_MORTGAGE
         - EXISTING_REALESTATE
         - OPEN_PROPERTY_SALE
      properties:
        debtId:
          description: |
            DE: Id der dazugehörenden Schulden.

            Die Schulden können mit Hilfe des /v2/financing-applications/{financingApplicationId}/financial-standings/existing-loans/{debtId} abgefragt werden. <br/>

            EN: Id of the associated Debt.

            Debt can be accessed via the respective endpoint. */v2/financing-applications/{financingApplicationId}/financial-standings/existing-loans/{debtId}*
          allOf:
          - $ref: '#/components/schemas/DebtId'
        type:
          $ref: '#/components/schemas/ExistingDebtType'
      discriminator:
        propertyName: type
        mapping:
          EMPLOYMENT: '#/components/schemas/SimpleLoanDebt'
          PRIVATE: '#/components/schemas/SimpleLoanDebt'
          MORTGAGE_SAVING_PLAN: '#/components/schemas/SimpleLoanDebt'
          OTHER: '#/components/schemas/SimpleLoanDebt'
          PUBLIC: '#/components/schemas/SimpleLoanDebt'
          SOLVENCY: '#/components/schemas/SolvencyCreditDebt'
          EXISTING_MORTGAGE: '#/components/schemas/ExistingMortgageDebt'
          EXISTING_REALESTATE: '#/components/schemas/ExistingRealEstateDebt'
          OPEN_PROPERTY_SALE: '#/components/schemas/SimpleLoanDebt'
    ExistingDebtType:
      type: string
      description: |
        DE: Art der Darlehen (nicht abschließende Aufzaehlung EMPLOYMENT, PRIVATE, MORTGAGE_SAVING_PLAN, PUBLIC, OTHER, SOLVENCY, EXISTING_MORTGAGE, OPEN_PROPERTY_SALE, EXISTING_REALESTATE). <br/> EN: Open ended enum contains existing loan debt type, possible values are (EMPLOYMENT, PRIVATE, MORTGAGE_SAVING_PLAN, PUBLIC, OTHER, SOLVENCY, EXISTING_MORTGAGE, OPEN_PROPERTY_SALE, EXISTING_REALESTATE).
      example: EMPLOYMENT
      x-extensible-enum:
      - EMPLOYMENT
      - PRIVATE
      - MORTGAGE_SAVING_PLAN
      - PUBLIC
      - SOLVENCY
      - OTHER
      - EXISTING_MORTGAGE
      - OPEN_PROPERTY_SALE
      - EXISTING_REALESTATE
    SimpleLoanDebt:
      type: object
      required:
      - until
      description: |
        DE: Information zu bestehenden Darlehen. <br/> EN: Information about existing debts.
      allOf:
      - $ref: '#/components/schemas/ExistingLoanDebt'
      - properties:
          amount:
            description: |
              DE: Ursprünglicher Darlehenbetrag. <br/>
              EN: Original debt amount.
            allOf:
            - $ref: '#/components/schemas/EuroAmount'
          residualDebt:
            description: |
              DE: Aktuelle Restschuld. <br/>
              EN: Current remaining debt.
            allOf:
            - $ref: '#/components/schemas/EuroAmount'
          interestFixDate:
            description: |
              DE: Ablauf Sollzinsbindung. <br/>
              EN: Expiry of fixed interest rate.
            allOf:
            - $ref: '#/components/schemas/ISODate'
          description:
            description: |
              DE: Beschreibung der bereitgestellten Schuld. EN: Description of the provided debt.
            type: string
    SolvencyCreditDebt:
      type: object
      required:
      - type
      description: |
        DE: Raten- und Leasingkredite. <br/> EN: Installment and leasing credits.
      allOf:
      - $ref: '#/components/schemas/ExistingLoanDebt'
      - properties:
          type:
            type: string
            default: SOLVENCY
          residualDebt:
            description: |
              DE: Aktuelle Restschuld. <br/>
              EN: Current remaining debt.
            allOf:
            - $ref: '#/components/schemas/EuroAmount'
          repay:
            description: |
              DE: Flag ob die Ablösung des Kredites vor der Finanzierung geplant ist. <br/> EN: Flag indicates that the loan is planed to be repayed before the financing.
            type: boolean
          until:
            description: |
              DE: Ablauf der Sollzinsbindung. <br/>
              EN: Expiry of the fixed interest rate.
            allOf:
            - $ref: '#/components/schemas/ISODate'
    ExistingMortgageDebt:
      type: object
      required:
      - type
      - estate
      description: |
        DE: Bestehende Hypothek auf die Immobilie. <br/> EN: Existing mortgage of the property.
      allOf:
      - $ref: '#/components/schemas/ExistingLoanDebt'
      - properties:
          type:
            type: string
            default: EXISTING_MORTGAGE
          estate:
            description: |
              DE: Referenz zu dem Darlehen gehörenden Immobilie. <br/>
              EN: Reference to the Estate which this Loan is associated with.
            allOf:
            - $ref: '#/components/schemas/EstateRef'
          amount:
            description: |
              DE: Ursprünglicher Darlehenbetrag. <br/>
              EN: Original debt amount.
            allOf:
            - $ref: '#/components/schemas/EuroAmount'
          debitor:
            $ref: '#/components/schemas/Debitor'
          payoutDate:
            description: |
              DE: Datum der Vollauszahlung. <br/>
              EN: Date of full payment.
            allOf:
            - $ref: '#/components/schemas/ISODate'
          contractNumber:
            description: |
              DE: Darlehensnummer. <br/> EN: Loan number.
            type: string
          promotionalLoan:
            description: |
              DE: Flag ob es sich um einen Förderdarlehen handelt. <br/> EN: Flag indicates whether promotional loan is used.
            type: boolean
          interestFixDate:
            description: |
              DE: Ablauf Sollzinsbindung. <br/>
              EN: Expiry of fixed interest rate.
            allOf:
            - $ref: '#/components/schemas/ISODate'
          forward:
            $ref: '#/components/schemas/ForwardExistingMortgage'
          residualDebt:
            description: |
              DE: Vrs. Restschuld zum Zinsanpassungstermin. <br/>
              EN: Current remaining debt.
            allOf:
            - $ref: '#/components/schemas/EuroAmount'
          collateral:
            description: |
              DE: Beleihung. <br/> EN: Collateral.
            type: string
          repay:
            description: |
              DE: Gewünschte Ablösung des Darlehens. <br/> EN: Repayment of the loan desired.
            type: boolean
    Debitor:
      type: object
      description: |
        DE: Darlehensgeber. <br/>
        EN: Information about loan debitor.
      properties:
        bic:
          description: |
            DE: BIC-Code des Darlehensgebers. <br/> EN: BIC code of loaner.
          allOf:
          - $ref: '#/components/schemas/Bic'
        name:
          description: |
            DE: Schuldner. <br/> EN: Debitor.
          type: string
    Bic:
      type: object
      description: |
        DE: BIC <br/> EN: The Business Identifier Code
      required:
      - value
      properties:
        value:
          type: string
          example: INGBDEFF
          pattern: ^[A-Z]{6}[2-9A-Z]{1}[0-9A-Z]{1}([0-9A-Z]{3})?$
    ForwardExistingMortgage:
      type: object
      description: |
        DE: Das Darlehen soll erst nach einer bestimmten Vorlaufzeit ausgezahlt werden. <br/> EN: Loan shall be released.
      properties:
        date:
          $ref: '#/components/schemas/ISODate'
    ExistingRealEstateDebt:
      type: object
      required:
      - estate
      allOf:
      - $ref: '#/components/schemas/ExistingLoanDebt'
      - properties:
          type:
            type: string
            default: EXISTING_REALESTATE
          estate:
            description: |
              DE: Referenz zu dem Darlehen gehörenden Immobileie. <br/>
              EN: Reference to the Estate which this Loan is associated with.
            allOf:
            - $ref: '#/components/schemas/EstateRef'
          residualDebt:
            description: |
              DE: Aktuelle Restschuld. <br/>
              EN: Current remaining debt.
            allOf:
            - $ref: '#/components/schemas/EuroAmount'
          repay:
            description: |
              DE: Flag ob die Ablösung des Kredites vor der Finanzierung geplant ist. <br/> EN: Flag indicates that the loan is planed to be repayed before the financing.
            type: boolean
          until:
            $ref: '#/components/schemas/ISODate'
          interestFixDate:
            description: |
              DE: Ablauf Sollzinsbindung. <br/>
              EN: Expiry of fixed interest rate.
            allOf:
            - $ref: '#/components/schemas/ISODate'
          description:
            type: string
    Income:
      type: object
      description: |
        DE: Ein Untertyp von "Financial Standing", welcher alle Informationen zu den `Einkünften` beinhaltet. <br/>
        EN: A specific financial standing type holds all information related to periodical `Income` aspects.
      allOf:
      - $ref: '#/components/schemas/FinancialStanding'
      - properties:
          type:
            type: string
            default: INCOME
          regularEmployment:
            $ref: '#/components/schemas/RegularEmploymentIncome'
          selfEmployment:
            $ref: '#/components/schemas/SelfEmploymentIncome'
          auxiliary:
            $ref: '#/components/schemas/AuxiliaryIncome'
          family:
            $ref: '#/components/schemas/FamilyIncome'
          pension:
            description: |
              DE: Zusätzliches regelmäßiges Einkommen aus Rente/Pension. <br/> EN: Additional periodical income from pension.
            allOf:
            - $ref: '#/components/schemas/PensionIncome'
          pensionEntitlement:
            description: |
              DE: Rentenansprüche. <br/> EN: Pension entitlement.
            allOf:
            - $ref: '#/components/schemas/PensionIncome'
          capital:
            $ref: '#/components/schemas/CapitalIncome'
          other:
            $ref: '#/components/schemas/OtherIncome'
    RegularEmploymentIncome:
      type: object
      description: |
        DE: Informationen über ein regelmäßiges Einkommen aus einem Beschaeftigungsverhaeltnis. <br/> EN: Information about regular employment income.
      properties:
        salary:
          $ref: '#/components/schemas/Salary'
        variable:
          $ref: '#/components/schemas/VariableIncome'
        grossIncomePreviousYear:
          description: |
            DE: Bruttoeinkommen des Vorjahres. <br/>
            EN: Gross income of the previous year.
          allOf:
          - $ref: '#/components/schemas/PeriodicalEuroAmount'
    Salary:
      type: object
      required:
      - net
      description: |
        DE: Informationen über das Gehalt. <br/> EN: Information regarding salary.
      properties:
        gross:
          description: |
            DE: Regelmäßiges Lohn und Gehalt (brutto). <br/>
            EN: Periodical gross salary.
          allOf:
          - $ref: '#/components/schemas/PeriodicalEuroAmount'
        net:
          description: |
            DE: Regelmäßiges Lohn und Gehalt (netto). <br/>
            EN: Periodical net salary.
          allOf:
          - $ref: '#/components/schemas/PeriodicalEuroAmount'
        numberOfPayments:
          type: number
          format: double
          description: |
            DE: Anzahl an Gehaltszahlungen. <br/> EN: Number of payments
        assuredNumber:
          type: number
          format: double
          description: |
            DE: Vertraglich zugesicherte Gehaltszahlungen (wenn numberOfPayments > 12). <br/> EN: Annually secured number of salaries as per employment contract (if numberOfPayments > 12)
    VariableIncome:
      type: object
      description: |
        DE: Regelmäßige variable Einkünfte (netto). <br/>
        EN: Regular variable gross income.
      required:
      - amount
      properties:
        amount:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        breakdown:
          $ref: '#/components/schemas/VariableIncomeBreakdown'
    VariableIncomeBreakdown:
      type: object
      description: |
        DE: Details über regelmäßige Einnahmen <br/>
        EN: Breakdown of the periodical income.
      properties:
        bonus:
          $ref: '#/components/schemas/BonusIncome'
        shift:
          description: |
            DE: Zusätzliches regelmäßiges Einkommen durch Nacht-/Schichtzuschlag. <br/>
            EN: Additional periodical income through night-/shift allowance.
          allOf:
          - $ref: '#/components/schemas/PeriodicalEuroAmount'
        overtime:
          description: |
            DE: Zusätzliches regelmäßiges Einkommen durch Überstunden. <br/>
            EN: Additional periodical income through overtime allowance.
          allOf:
          - $ref: '#/components/schemas/PeriodicalEuroAmount'
        travelAllowance:
          description: |
            DE: Zusätzliches regelmäßiges Einkommen durch Spesen/Reisekostenbeihilfe. <br/>
            EN: Additional periodical income through travel allowance.
          allOf:
          - $ref: '#/components/schemas/PeriodicalEuroAmount'
        commission:
          description: |
            DE: Zusätzliches regelmäßiges Einkommen durch Provisionen. <br/>
            EN: Additional periodical income through commission allowance.
          allOf:
          - $ref: '#/components/schemas/PeriodicalEuroAmount'
    BonusIncome:
      description: |
        DE: Zusätzliches regelmäßiges Einkommen durch Boni/Tantiemen. <br/> EN: Additional periodical bonus income.
      type: object
      properties:
        abroad:
          description: |
            DE: Zusätzliches regelmäßiges Einkommen durch Auslandseinsatz. <br/>
            EN: Additional periodical income through assignment abroad.
          allOf:
          - $ref: '#/components/schemas/PeriodicalEuroAmount'
        performance:
          description: |
            DE: Zusätzliches regelmäßiges Einkommen durch Prämien/ Leistungszulage. <br/>
            EN: Additional periodical income through bonuses / performance allowances.
          allOf:
          - $ref: '#/components/schemas/PeriodicalEuroAmount'
        profitSharing:
          description: |
            DE: Zusätzliches regelmäßiges Einkommen durch Tantieme/ Bonus. <br/>
            EN: Additional periodical income through royalty / bonus.
          allOf:
          - $ref: '#/components/schemas/PeriodicalEuroAmount'
    SelfEmploymentIncome:
      type: object
      description: |
        DE: Informationen über Einkommen aus einer selbststaendigen Taetigkeit (nach Steuern). <br/> EN: Information about self-employment Income (after Tax deduction).
      required:
      - income
      properties:
        income:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        details:
          $ref: '#/components/schemas/SelfEmploymentIncomeDetails'
    SelfEmploymentIncomeDetails:
      type: object
      description: |
        DE: Berechnung des selbstständigen Einkommens. <br/> EN: Calculation of independent (self employment) income.
      properties:
        method:
          $ref: '#/components/schemas/SelfEmploymentIncomeMethod'
        description:
          type: string
          description: |
            DE: Anmerkungen zur Bilanz. <br/> EN: Notes on the balance.
        averageNetProfit:
          description: |
            DE: Durchschn. persönlicher Nachsteuergewinn. <br/>
            EN: Average after-tax profit.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        values:
          type: array
          items:
            $ref: '#/components/schemas/SelfEmploymentIncomeItem'
    SelfEmploymentIncomeMethod:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/SelfEmploymentIncomeMethodKey'
    SelfEmploymentIncomeMethodKey:
      type: string
      description: |
        DE: Berechnungsmethode für das Einkommen (nicht abschließende Aufzaehlung), z.B. (CUSTOMER_SPECIFICATION=Kundenangabe, PROFIT_AND_LOSS_ACCOUNT=Gewinn- und Verlustrechnung, NO_METHOD). <br/> EN: Open ended enum contains method for profit calculation, possible values are (CUSTOMER_SPECIFICATION, PROFIT_AND_LOSS_ACCOUNT, NO_METHOD).
      example: CUSTOMER_SPECIFICATION
      x-extensible-enum:
      - CUSTOMER_SPECIFICATION
      - PROFIT_AND_LOSS_ACCOUNT
      - NO_METHOD
      - OTHER
    SelfEmploymentIncomeItem:
      type: object
      description: |
        DE: Informationen zum Einkommen aus selbständiger Tätigkeit für ein Jahr <br/> EN: Describes the self employment income information for a year.
      properties:
        year:
          type: integer
          format: int32
          description: |
            DE: Jahr (lfd/Vorjahr/Vorvorjahr). <br/>
            EN: The balance year.
        netProfit:
          description: |
            DE: Persönlicher Nachsteuergewinn. <br/>
            EN: Personal after-tax profit.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        surplus:
          description: |
            DE: Überschuss/Fehlbetrag. <br/>
            EN: Excess / shortfall.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        deficit:
          $ref: '#/components/schemas/EuroAmount'
        taxes:
          description: |
            DE: Steuern. <br/>
            EN: Deducted Taxes.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
    AuxiliaryIncome:
      type: object
      required:
      - income
      description: |
        DE: Regelmäßige Nebeneinkünfte. <br/> EN: Periodical auxiliary income.
      properties:
        income:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        since:
          $ref: '#/components/schemas/ISODate'
    FamilyIncome:
      description: |
        DE: Zusätzliches regelmäßiges Einkommen durch bzw. für Kinder / Familie. <br/> EN: Additional periodical income for children / family.
      type: object
      properties:
        alimony:
          $ref: '#/components/schemas/AlimonyInfo'
        childAllowance:
          description: |
            DE: Kindergeld. <br/>
            EN: Child Allowance.
          allOf:
          - $ref: '#/components/schemas/PeriodicalEuroAmount'
        parentalAllowance:
          $ref: '#/components/schemas/ParentalAllowanceInfo'
    AlimonyInfo:
      type: object
      required:
      - alimony
      description: |
        DE: Informationen über Unterhaltseinkünfte. <br/> EN: Information regarding alimony income.
      properties:
        alimony:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        maritalPart:
          description: |
            DE: Davon: aus Ehegattenunterhalt. <br/>
            EN: Of which: from spousal aliment.
          allOf:
          - $ref: '#/components/schemas/PeriodicalEuroAmount'
        childPart:
          description: |
            DE: Davon: aus Kindesunterhalt. <br/>
            EN: Of which: from child support.
          allOf:
          - $ref: '#/components/schemas/PeriodicalEuroAmount'
    ParentalAllowanceInfo:
      type: object
      description: |
        DE: Informationen über Elterngeld. <br/> EN: Informations regarding parental/child-raising allowance.
      required:
      - parentalAllowance
      properties:
        parentalAllowance:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        endDate:
          $ref: '#/components/schemas/ISODate'
    PensionIncome:
      type: object
      required:
      - pension
      description: |
        DE: Regelmäßiges Einkommen aus Rente/Pension. <br/> EN: Periodical income from pension.
      properties:
        pension:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        breakdown:
          $ref: '#/components/schemas/PensionIncomeBreakdown'
    PensionIncomeBreakdown:
      type: object
      description: |
        DE: Details über die für den Rentenanspruch releventen Daten. <br/>
        EN: Breakdown for Pension entitlement details.
      properties:
        claimState:
          description: |
            DE: Rentenanspruch gesetzlich. <br/>
            EN: Public pension entitlement.
          allOf:
          - $ref: '#/components/schemas/PeriodicalEuroAmount'
        claimInsurance:
          description: |
            DE: Rentenanspruch aus privaten Lebens- und Rentenversicherungsbeiträgen. <br/>
            EN: Pension entitlement from private life and pension insurance contributions.
          allOf:
          - $ref: '#/components/schemas/PeriodicalEuroAmount'
    CapitalIncome:
      type: object
      description: |
        DE: Zusätzliches regelmäßiges Einkommen durch Kapitalvermögen. <br/> EN: Additional periodical income from capital.
      properties:
        capitalYield:
          description: |
            DE: Regelmäßige Kapitalerträge (z.B. Zinsen, Dividenden). <br/>
            EN: Regular investment income (e.g. interest, dividends).
          allOf:
          - $ref: '#/components/schemas/PeriodicalEuroAmount'
        stocksAndBondsIncome:
          description: |
            DE: Regelmäßige Einkünfte aus Beteiligungen (z.B. GmbH-Anteil). <br/>
            EN: Regular income from stock and bonds investments (e.g. GmbH share)
          allOf:
          - $ref: '#/components/schemas/PeriodicalEuroAmount'
        rentalIncomes:
          type: array
          items:
            $ref: '#/components/schemas/RentalIncomeItem'
    RentalIncomeItem:
      type: object
      required:
      - estate
      - rent
      description: |
        DE: Mieteinnahmen aus einem bestimmten Objekt. <br/> EN: The rental income for a specific real estate.
      properties:
        rent:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        estate:
          description: |
            DE: Referenz zum Mietobjekt. <br/>
            EN: Reference to the Estate which the rent is associated with.
          allOf:
          - $ref: '#/components/schemas/EstateRef'
    OtherIncome:
      type: object
      required:
      - other
      description: |
        DE: Anderes (zusätzliches) regelmäßiges Einkommen. <br/> EN: Other periodical income.
      properties:
        other:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        external:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        description:
          type: string
    Expense:
      type: object
      description: |
        DE: Ein Untertyp von "Financial Standing", welcher alle Informationen zu den `Ausgaben` beinhaltet. <br/>
        EN: A specific financial standing type holds all information related to periodical `Expenses` aspects.
      allOf:
      - $ref: '#/components/schemas/FinancialStanding'
      - properties:
          type:
            type: string
            default: EXPENSE
          housing:
            $ref: '#/components/schemas/HousingExpense'
          insurance:
            $ref: '#/components/schemas/InsuranceExpense'
          alimony:
            $ref: '#/components/schemas/AlimonyExpense'
          existingLoans:
            $ref: '#/components/schemas/ExistingLoanExpenses'
          other:
            $ref: '#/components/schemas/OtherExpense'
    HousingExpense:
      type: object
      required:
      - currentHousingSituation
      description: |
        DE: Informationen zu Wohnungsausgaben. <br/> EN: Information regarding housing expenses.
      properties:
        currentHousingSituation:
          $ref: '#/components/schemas/HousingSituation'
        costs:
          description: |
            DE: Derzeitige Wohnkosten <br/>
            EN: Current housing costs.
          allOf:
          - $ref: '#/components/schemas/PeriodicalEuroAmount'
        costsObsolete:
          type: boolean
          description: |
            DE: Wahr, wenn die Wohnungsausgaben nach der Finanzierung entfallen. <br/> EN: True if accommodation/housing costs are obsolete after financing.
    HousingSituation:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/HousingSituationKey'
    HousingSituationKey:
      type: string
      description: |
        DE: Art der derzeitigen Wohnsituation (nicht abschließende Aufzaehlung), z.B. (RENT=zur Miete, RATE=im Eigentum mit Darlehensrate, DEBT_FREE=im abbezahlten Eigentum, PARENTS=mietfrei bei den Eltern/Partner, OWN_PROPERTY=im Eigentum, FIRST_APPLICANT=in einer Eigentumswohnung). <br/> EN: Open ended enum contains value for the current housing/accomodation types, possible values are (RENT, RATE, DEBT_FREE, PARENTS, OWN_PROPERTY, FIRST_APPLICANT).
      example: RENT
      x-extensible-enum:
      - RENT
      - RATE
      - DEBT_FREE
      - PARENTS
      - OWN_PROPERTY
      - FIRST_APPLICANT
      - OTHER
    InsuranceExpense:
      type: object
      description: |
        DE: Informationen über Ausgaben durch Versicherungen. <br/> EN: Informations related insurance expences.
      properties:
        healthInsurance:
          description: |
            DE: Private/freiw. gesetzliche Krankenversicherungsbeiträge. <br/>
            EN: Private/ voluntary statutory health insurance contributions.
          allOf:
          - $ref: '#/components/schemas/PeriodicalEuroAmount'
        lifeInsurance:
          description: |
            DE: Private Lebens- und Rentenversicherungsbeiträge. <br/>
            EN: Private life and pension insurance contributions.
          allOf:
          - $ref: '#/components/schemas/InsuranceBurden'
        accidentInsurance:
          description: |
            DE: Unfallversicherungsbeiträge. <br/>
            EN: Accident insurance contributions.
          allOf:
          - $ref: '#/components/schemas/InsuranceBurden'
        disabilityInsurance:
          description: |
            DE: Berufsunfähigkeitsversicherungsbeiträge. <br/>
            EN: Disability insurance contributions.
          allOf:
          - $ref: '#/components/schemas/InsuranceBurden'
    InsuranceBurden:
      type: object
      required:
      - burden
      properties:
        burden:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        minimum:
          description: |
            DE: Davon nicht beitragsfrei stellbar. <br/>
            EN: Of which not exempt from contributions.
          allOf:
          - $ref: '#/components/schemas/PeriodicalEuroAmount'
    AlimonyExpense:
      type: object
      required:
      - alimony
      description: |
        DE: Ausgaben durch Unterhalt. <br/> EN: Expenses for alimony.
      properties:
        alimony:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
    ExistingLoanExpenses:
      type: object
      description: |
        Wrapper Type holds a set of periodical expenses associated with existing credits.
      properties:
        credits:
          type: array
          items:
            $ref: '#/components/schemas/DebtExpense'
    DebtExpense:
      type: object
      description: |
        DE: Details über bereits existierende Kreditausgaben. <br/>
        EN: Information about periodical expenses associated with existing loans.
      required:
      - debtId
      - burden
      properties:
        debtId:
          $ref: '#/components/schemas/DebtId'
        burden:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
    OtherExpense:
      type: object
      required:
      - value
      description: |
        DE: Andere (zusätzliche) regelmäßige Ausgaben. <br/> EN: Other periodical expenses.
      properties:
        value:
          $ref: '#/components/schemas/PeriodicalEuroAmount'
        description:
          type: string
    InterestMaturity:
      type: object
      required:
      - type
      properties:
        type:
          $ref: '#/components/schemas/InterestMaturityType'
      discriminator:
        propertyName: type
        mapping:
          VARIABLE: '#/components/schemas/VariableInterestMaturity'
          FIXED_PERIOD: '#/components/schemas/FixedInterestMaturity'
    InterestMaturityType:
      type: string
      description: |
        DE: Art der Sollzinsbindung(nicht abschließende Aufzählung), z.B. FIXED_PERIOD, VARIABLE. <br/> EN: Open ended enum contains types of the interest maturity, possible values are FIXED_PERIOD, VARIABLE.
      example: FIXED_PERIOD
      x-extensible-enum:
      - FIXED_PERIOD
      - VARIABLE
      - OTHER
    VariableInterestMaturity:
      description: |
        DE: Information über die variable Sollzinsbindung. <br/>
        EN: Information about variable interest rate maturity.
      type: object
      required:
      - type
      allOf:
      - $ref: '#/components/schemas/InterestMaturity'
      - properties:
          type:
            type: string
            default: VARIABLE
    FixedInterestMaturity:
      description: |
        DE: Information über die Sollzinsbindung mit dem festen Dauer. <br/>
        EN: Information about fixed interest rate maturity.
      type: object
      required:
      - type
      - period
      allOf:
      - $ref: '#/components/schemas/InterestMaturity'
      - properties:
          type:
            type: string
            default: FIXED_PERIOD
          period:
            description: |
              DE: Dauer der Sollzinsbindung. <br/>
              EN: Fixed interest rate duration.
            allOf:
            - $ref: '#/components/schemas/Duration'
          fixedUntil:
            description: |
              DE: Enddatum der Sollzinsbindung. <br/>
              EN: End date of the fixed interest rate.
            allOf:
            - $ref: '#/components/schemas/ISODate'
    FinancialVentureItem:
      type: object
      description: |
        DE: Relevante Information zu dem geplanten Finanziehrungsvorhaben. <br/>
        EN: Information about planed financing venture.
      required:
      - _href
      - reason
      - mortgageProperty
      properties:
        _href:
          $ref: '#/components/schemas/ResourceRef'
        reason:
          $ref: '#/components/schemas/FinancingApplicationReason'
        mortgageProperty:
          description: |
            DE: Referenz zum Beleihungsobjekt/Finanzierungsobjekt auf welches sich das Finanzierungsvorhaben bezieht. <br/> EN: The Financing Asset / Property to which the financing venture relates.
          allOf:
          - $ref: '#/components/schemas/EstateRef'
        embedded:
          description: |
            DE: Komplette Information über das Finanzierungsvorhaben. <br/>
            EN: Complete information about the financing venture.
          allOf:
          - $ref: '#/components/schemas/FinancingVenture'
    Iban:
      type: object
      description: |
        DE: IBAN <br/> EN: The International Bank Account Number
      required:
      - value
      properties:
        value:
          type: string
          example: DE46500210000010130383
          pattern: ^[A-Z]{2}[0-9]{3,32}$
    ModifySubmissionLegacyCommand:
      type: object
      required:
      - operation
      properties:
        trigger:
          $ref: '#/components/schemas/CommandTrigger'
        operation:
          type: string
          x-extensible-enum:
          - START_EDITING
          - ABORT_EDITING
          - EDIT
          - CHANGE_STATUS
          - UPDATE_CREDIT_LOANS
      discriminator:
        propertyName: operation
        mapping:
          START_EDITING: '#/components/schemas/StartEditingSubmissionLegacyCommand'
          ABORT_EDITING: '#/components/schemas/AbortEditingSubmissionLegacyCommand'
          EDIT: '#/components/schemas/EditSubmissionLegacyCommand'
          CHANGE_STATUS: '#/components/schemas/ChangeSubmissionStatusLegacyCommand'
          UPDATE_CREDIT_LOANS: '#/components/schemas/UpdateSubmissionCreditLoansLegacyCommand'
    StartEditingSubmissionLegacyCommand:
      description: This command is only used for internal purposes!
      type: object
      required:
      - editingInfo
      allOf:
      - $ref: '#/components/schemas/ModifySubmissionLegacyCommand'
      - properties:
          operation:
            type: string
            default: START_EDITING
          editingInfo:
            $ref: '#/components/schemas/EditingInfo'
    AbortEditingSubmissionLegacyCommand:
      description: This command is only used for internal purposes!
      type: object
      required:
      - editingInfo
      allOf:
      - $ref: '#/components/schemas/ModifySubmissionLegacyCommand'
      - properties:
          operation:
            type: string
            default: ABORT_EDITING
          editingInfo:
            $ref: '#/components/schemas/EditingInfo'
    EditSubmissionLegacyCommand:
      description: This command is only used for internal purposes!
      type: object
      required:
      - submissionId
      - financingApplication
      - loans
      - editingInfo
      allOf:
      - $ref: '#/components/schemas/ModifySubmissionLegacyCommand'
      - properties:
          operation:
            type: string
            default: EDIT
          submissionId:
            $ref: '#/components/schemas/SubmissionId'
          financingApplication:
            $ref: '#/components/schemas/FinancingApplicationCommandData'
          loans:
            $ref: '#/components/schemas/CreditLoansEdit'
          editingInfo:
            $ref: '#/components/schemas/EditingInfo'
    SubmissionId:
      type: object
      description: |
        An Id refers to a specific submission resource.
      properties:
        value:
          type: string
    FinancingApplicationCommandData:
      type: object
      required:
      - venture
      - applicants
      - financialStandings
      - estates
      - offers
      - consultation
      properties:
        status:
          $ref: '#/components/schemas/FinancingApplicationStatus'
        subType:
          $ref: '#/components/schemas/ApplicationSubType'
        applicants:
          type: array
          items:
            $ref: '#/components/schemas/Applicant'
        applicantRelationships:
          type: array
          items:
            $ref: '#/components/schemas/ApplicantRelationship'
        households:
          type: array
          items:
            $ref: '#/components/schemas/Household'
          minItems: 1
        estates:
          type: array
          items:
            $ref: '#/components/schemas/Estate'
          minItems: 1
        financialStandings:
          $ref: '#/components/schemas/FinancialStandingsCommand'
        venture:
          $ref: '#/components/schemas/FinancingVenture'
        consultation:
          $ref: '#/components/schemas/ConsultationCommand'
        offers:
          type: array
          items:
            $ref: '#/components/schemas/FinancingOffer'
          minItems: 1
    CreditLoansEdit:
      type: object
      required:
      - loans
      properties:
        loans:
          type: array
          items:
            $ref: '#/components/schemas/CreditLoan'
        offerId:
          $ref: '#/components/schemas/OfferId'
        calculations:
          $ref: '#/components/schemas/Calculations'
    CreditLoan:
      type: object
      description: |
        DE: Informationen zur Finanzierungsstruktur. <br/>
        EN: A Credit Loan represents specific financing structure component.
      properties:
        id:
          $ref: '#/components/schemas/CreditLoanId'
        financingLoans:
          type: array
          items:
            $ref: '#/components/schemas/Loan'
          minItems: 1
        handover:
          $ref: '#/components/schemas/Handover'
    OfferId:
      type: object
      properties:
        value:
          type: string
    Calculations:
      description: |
        A wrapper Type to hold a set of calculations.
      type: object
      properties:
        calculations:
          type: array
          items:
            $ref: '#/components/schemas/CalculationItem'
    ChangeSubmissionStatusLegacyCommand:
      type: object
      required:
      - status
      description: |
        This command is only used for internal purposes!
        This command is intended to change the submission status
      allOf:
      - $ref: '#/components/schemas/ModifySubmissionLegacyCommand'
      - properties:
          operation:
            type: string
            default: CHANGE_STATUS
          data:
            $ref: '#/components/schemas/ChangeSubmissionStatusLegacyCommandData'
    ChangeSubmissionStatusLegacyCommandData:
      type: object
      properties:
        remark:
          type: string
        changedOn:
          $ref: '#/components/schemas/ISODateTime'
        origin:
          $ref: '#/components/schemas/LegacyStatusChangeOrigin'
        status:
          $ref: '#/components/schemas/LegacyStatusType'
      discriminator:
        propertyName: status
        mapping:
          ACCEPT: '#/components/schemas/AcceptSubmissionLegacyStatus'
          CANCEL: '#/components/schemas/CancelSubmissionLegacyStatus'
          CONTRACT_SIGN: '#/components/schemas/ContractSignSubmissionLegacyStatus'
          INWORK: '#/components/schemas/InworkSubmissionLegacyStatus'
          ONHOLD: '#/components/schemas/OnholdSubmissionLegacyStatus'
          REJECT: '#/components/schemas/RejectSubmissionLegacyStatus'
          CONFIRM: '#/components/schemas/ConfirmSubmissionLegacyStatus'
    LegacyStatusChangeOrigin:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/LegacyStatusChangeKey'
    LegacyStatusChangeKey:
      type: string
      description: |
        EN: Source system that can trigger legacy status change, possible values are PARTNER_PORTAL, LEGACY_IHK.
      x-extensible-enum:
      - PARTNER_PORTAL
      - LEGACY_IHK
    LegacyStatusType:
      type: string
      x-extensible-enum:
      - ACCEPT
      - CANCEL
      - CONTRACT_SIGN
      - INWORK
      - ONHOLD
      - REJECT
    AcceptSubmissionLegacyStatus:
      type: object
      required:
      - sendContractDate
      allOf:
      - $ref: '#/components/schemas/ChangeSubmissionStatusLegacyCommandData'
      - properties:
          status:
            type: string
            default: ACCEPT
          sendContractDate:
            $ref: '#/components/schemas/ISODate'
          loans:
            $ref: '#/components/schemas/LegacyStatusLoans'
    LegacyStatusLoans:
      type: object
      properties:
        items:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/LegacyStatusLoan'
    LegacyStatusLoan:
      type: object
      properties:
        seq:
          type: integer
          format: int32
        loanId:
          $ref: '#/components/schemas/LoanId'
        creditLoanId:
          $ref: '#/components/schemas/CreditLoanId'
        contractNumber:
          type: string
        amount:
          $ref: '#/components/schemas/EuroAmount'
        maturity:
          $ref: '#/components/schemas/InterestMaturity'
        nominalRate:
          $ref: '#/components/schemas/PeriodicalPercentage'
        amortisation:
          $ref: '#/components/schemas/PeriodicalPercentage'
        effectiveRate:
          $ref: '#/components/schemas/PeriodicalPercentage'
        fixedUntil:
          $ref: '#/components/schemas/ISODate'
        sotiDesc:
          type: string
        sotiPercentage:
          $ref: '#/components/schemas/PeriodicalPercentage'
        commission:
          $ref: '#/components/schemas/Percentage'
        commissionAmount:
          $ref: '#/components/schemas/EuroAmount'
        kfwProduct:
          type: string
    CreditLoanId:
      type: object
      description: |
        DE: Id der Finanzierungsstruktur. <br/> EN: Credit Loan identifier.
      required:
      - value
      properties:
        value:
          type: string
    CancelSubmissionLegacyStatus:
      type: object
      required:
      - cancelContractDate
      allOf:
      - $ref: '#/components/schemas/ChangeSubmissionStatusLegacyCommandData'
      - properties:
          status:
            type: string
            default: CANCEL
          cancelContractDate:
            $ref: '#/components/schemas/ISODate'
    ContractSignSubmissionLegacyStatus:
      type: object
      required:
      - signContractDate
      allOf:
      - $ref: '#/components/schemas/ChangeSubmissionStatusLegacyCommandData'
      - properties:
          status:
            type: string
            default: CONTRACT_SIGN
          signContractDate:
            $ref: '#/components/schemas/ISODate'
          loans:
            $ref: '#/components/schemas/LegacyStatusLoans'
    InworkSubmissionLegacyStatus:
      type: object
      allOf:
      - $ref: '#/components/schemas/ChangeSubmissionStatusLegacyCommandData'
      - properties:
          status:
            type: string
            default: INWORK
    OnholdSubmissionLegacyStatus:
      type: object
      required:
      - predictedOffHoldDate
      - predictedDaysPost
      - onHoldReason
      allOf:
      - $ref: '#/components/schemas/ChangeSubmissionStatusLegacyCommandData'
      - properties:
          status:
            type: string
            default: ONHOLD
          predictedOffHoldDate:
            $ref: '#/components/schemas/ISODate'
          predictedDaysPost:
            type: integer
            format: int32
          onHoldReason:
            $ref: '#/components/schemas/OnHoldReason'
    OnHoldReason:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/OnHoldReasonKey'
    OnHoldReasonKey:
      type: string
      x-extensible-enum:
      - DOCUMENTS
      - INFOS
      - BY_CUSTOMER
      - ONHOLD
      - EXPERTISE
      - ORIG_CONTR
      - REJ_SOON
      - FIN_APPROV
      - MIN_DOCS
    RejectSubmissionLegacyStatus:
      type: object
      required:
      - rejectReason
      allOf:
      - $ref: '#/components/schemas/ChangeSubmissionStatusLegacyCommandData'
      - properties:
          status:
            type: string
            default: REJECT
          rejectSolution:
            type: string
          rejectReason:
            $ref: '#/components/schemas/RejectReason'
    RejectReason:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/RejectReasonKey'
    RejectReasonKey:
      type: string
      x-extensible-enum:
      - OBJ_CRAFT
      - GRND_PRICE
      - BAD_UTILIZE
      - BAD_STATE
      - LUX_HOBBY
      - CREDIT_NEG
      - REL_DEBIT
      - HH_INC_TO_VOL
      - HH_CREDITS
      - HH_NO_DEDUCT
      - HH_HI_INCOME
      - HH_EXPENSES
      - HH_NEG_BAL
      - SCHUFA_NEG
      - SCHUFA_SCOR
      - INTERN_RED
      - FRAME
      - LOW_EQUITY
      - DEBT_RATIO
      - JOB_AMOUNT
      - RENT_RISK
      - PROBATION
      - SHORT_SE
      - SECTION2
      - SECTION3
      - EXIST_CUST
      - MANIPULATE
      - EVIDENCE
      - UNKNOWN
      - CONTRACT
      - OTHER
    ConfirmSubmissionLegacyStatus:
      type: object
      required:
      - confirmedAt
      - loans
      allOf:
      - $ref: '#/components/schemas/ChangeSubmissionStatusLegacyCommandData'
      - properties:
          status:
            type: string
            default: CONFIRM
          signContractDate:
            $ref: '#/components/schemas/ISODate'
          confirmedAt:
            $ref: '#/components/schemas/ISODateTime'
          loans:
            $ref: '#/components/schemas/LegacyStatusLoans'
    UpdateSubmissionCreditLoansLegacyCommand:
      type: object
      required:
      - loans
      description: |
        This command is only used for internal purposes!
        This command is intended to change the submission credit loans
      allOf:
      - $ref: '#/components/schemas/ModifySubmissionLegacyCommand'
      - properties:
          operation:
            type: string
            default: UPDATE_CREDIT_LOANS
          loans:
            $ref: '#/components/schemas/LegacyStatusLoans'
    Informers:
      type: object
      description: |
        A wrapper Type to hold a set of financing informer involved in the consultation phase.
      required:
      - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/InformerItem'
    InformerItem:
      type: object
      description: |
        A wrapper Type to hold detailed information about a financing informer involved in the consultation phase.
      properties:
        _href:
          $ref: '#/components/schemas/ResourceRef'
        informerId:
          $ref: '#/components/schemas/InformerId'
        person:
          $ref: '#/components/schemas/PersonName'
        company:
          type: string
          description: |
            DE: Firma des Zuträgers. <br/> EN: Company of the informer.
        embedded:
          $ref: '#/components/schemas/Informer'
    Handover:
      type: object
      description: |
        DE: Beratunsprotokoll und Empfehlung des Beraters. <br/> EN: Advisor Handover notes and recommendations.
      properties:
        hints:
          type: string
          description: |
            DE: Hinweise des Beraters. <br/> EN: Hints provided by the financing advisor.
        handoverReports:
          type: array
          items:
            $ref: '#/components/schemas/HandoverReport'
    HandoverReport:
      type: object
      description: |
        DE: Metadaten zur den Einreichungsunterlagen. <br/>
        EN: Metadata regarding the system generated reports for a specific submission.
        Handover reports including but not limited to:
          - Übergabeprotokoll

          - Provideranschreiben

          - Überarbeiteter Antrag

          - Kalkulation

          - HH-Rechnung
      required:
      - name
      - description
      - createdAt
      properties:
        name:
          type: string
          description: |
            DE: Bezeichnung der Einreichungsunterlage. <br/>
            EN: Name of the handover report.
        description:
          type: string
          description: |
            DE: Kurze Beschreibung der Einreichungsunterlage. <br/>
            EN: Short description of the handover report.
        createdAt:
          $ref: '#/components/schemas/ISODateTime'
        context:
          type: array
          description: |
            DE: Einreichungsunterlage nach Art des Darlehens. <br/>
            EN: A set of financing structure contexts, which are associated with this handover report (i.e `Main` or `Nachrang` component)..
          items:
            $ref: '#/components/schemas/LoanType'
        content:
          description: |
            DE: Link zur Unterlage als `PDF` Document. <br/>
            EN: Link to retrieve the content of a specific handover report as `PDF` document.
          allOf:
          - $ref: '#/components/schemas/ResourceRef'
    Title:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/TitleKey'
    TitleKey:
      type: string
      description: |
        DE: Akademischer Titel des Antragstellers (nicht abschließende Aufzählung, zum Beispiel: DR, PH_D, PD_DR, PROF, PROF_DR). <br/> EN: Open ended enum contains possible title values, possible values are DR, PH_D, PD_DR, PROF, PROF_DR.
      example: PROF_DR
      x-extensible-enum:
      - DR
      - PH_D
      - PD_DR
      - PROF
      - PROF_DR
      - OTHER
    Correspondence:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CorrespondenceItem'
    FinancingApplicationItem:
      type: object
      required:
      - id
      - _href
      description: |
        A wrapper type Holds information about the requested financing application.

        Further details will be delivered in the embedded property if specified.

        Please refer to *Expansion* section for more details.
      properties:
        financingApplicationRef:
          $ref: '#/components/schemas/FinancingApplicationRef'
        embedded:
          $ref: '#/components/schemas/FinancingApplication'
    FinancingApplication:
      type: object
      required:
      - id
      - applicants
      - venture
      - financialStanding
      - estates
      properties:
        id:
          $ref: '#/components/schemas/FinancingApplicationId'
        status:
          $ref: '#/components/schemas/FinancingApplicationStatus'
        subType:
          $ref: '#/components/schemas/ApplicationSubType'
        applicantRelationships:
          $ref: '#/components/schemas/ApplicantRelationships'
        applicants:
          $ref: '#/components/schemas/Applicants'
        households:
          $ref: '#/components/schemas/Households'
        estates:
          $ref: '#/components/schemas/Estates'
        financialStanding:
          $ref: '#/components/schemas/FinancialStandings'
        venture:
          $ref: '#/components/schemas/FinancialVentureItem'
        consultation:
          $ref: '#/components/schemas/ConsultationItem'
        offer:
          $ref: '#/components/schemas/FinancingOfferItem'
    FinancingApplicationStatus:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/FinancingApplicationStatusKey'
    FinancingApplicationStatusKey:
      type: string
      description: |
        DE: Status des Finanzierungsantrages. <br/> EN: Status of the application.
      x-extensible-enum:
      - QUALIFIED_FOR_SUBMISSION
      - SUBMITTED
    ApplicationSubType:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/ApplicationSubTypeKey'
    ApplicationSubTypeKey:
      type: string
      description: |
        DE: Unterkategorie des Antragstyp (nicht abschließende Aufzählung), z.B. (NEW_APPLICANT, PROLONGATION, SUPPLEMENTARY_FINANCING). <br/>
        EN: Open ended enum contains application sub type, possible values are (NEW_APPLICANT, PROLONGATION, SUPPLEMENTARY_FINANCING).
      example: NEW_APPLICANT
      x-extensible-enum:
      - NEW_APPLICANT
      - PROLONGATION
      - SUPPLEMENTARY_FINANCING
    Applicants:
      type: object
      description: |
        A wrapper type which holds the essential applicant information.
      required:
      - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ApplicantItem'
          minItems: 1
    FinancingOfferItem:
      type: object
      description: |
        DE: Referenz zum Finanzierungsangebot. <br/> EN: Reference to the financing offer.
      required:
      - _href
      properties:
        _href:
          $ref: '#/components/schemas/ResourceRef'
        embedded:
          description: |
            DE: Komplette Information über das Finanzierungsangebot. <br/> EN: Complete information about the financing offer.
          allOf:
          - $ref: '#/components/schemas/FinancingOffer'
    AdvisorCommandTrigger:
      type: object
      required:
      - advisor
      allOf:
      - $ref: '#/components/schemas/CommandTrigger'
      - properties:
          type:
            type: string
            default: ADVISOR
          advisor:
            $ref: '#/components/schemas/Advisor'
    LoanPartnerProcessorCommandTrigger:
      type: object
      required:
      - processingUnit
      allOf:
      - $ref: '#/components/schemas/CommandTrigger'
      - properties:
          type:
            type: string
            default: LOAN_PARTNER_PROCESSOR
          processingUnit:
            $ref: '#/components/schemas/LoanPartnerProcessingInfo'
    SystemCommandTrigger:
      type: object
      required:
      - name
      allOf:
      - $ref: '#/components/schemas/CommandTrigger'
      - properties:
          name:
            type: string
          description:
            type: string
          type:
            type: string
            default: SYSTEM
    MainLoan:
      description: |
        DE: Information zum Hauptdarlehen. <br/>
        EN: Information about the main loan.
      type: object
      required:
      - type
      - product
      allOf:
      - $ref: '#/components/schemas/Loan'
      - properties:
          type:
            type: string
            default: MAIN_LOAN
          product:
            $ref: '#/components/schemas/MainProduct'
          rateDetails:
            description: |
              DE: Detailinformation zu den Raten. <br/>
              EN: Detailed information about the rates.
            allOf:
            - $ref: '#/components/schemas/RateDetails'
          additionalInfo:
            $ref: '#/components/schemas/MainLoanAdditionalInfo'
    Loan:
      type: object
      description: |
        DE: Information zum Darlehen(-objekt). <br/> EN: Information about the financial loan.
      required:
      - id
      - type
      - amount
      - loanPartner
      properties:
        id:
          $ref: '#/components/schemas/LoanId'
        seq:
          type: integer
          format: int32
          deprecated: true
        type:
          $ref: '#/components/schemas/LoanType'
        amount:
          description: |
            DE: Darlehnsbetrag (per Tranche). <br/>
            EN: Loan amount (for loan component).
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        maturity:
          description: |
            DE: Information zur Sollzinsbindung. <br/>
            EN: Information about interest rate maturity.
          allOf:
          - $ref: '#/components/schemas/InterestMaturity'
        specialRepayment:
          $ref: '#/components/schemas/SpecialRepayment'
        payout:
          $ref: '#/components/schemas/PayoutInfo'
        duration:
          description: |
            DE: Darlehensdauer. <br/>
            EN: Loan duration.
          allOf:
          - $ref: '#/components/schemas/Duration'
        loanPartner:
          $ref: '#/components/schemas/LoanPartnerProcessingUnit'
        financedMortgageProperty:
          description: |
            DE: Referenz zu dem Beleihungsobjekt. <br/>
            EN: Reference to the lending object.
          allOf:
          - $ref: '#/components/schemas/EstateRef'
        contractNumber:
          type: string
          description: |
            DE: Darlehensnummer / Vertragsnummer. <br/> EN: Loan number / contract number.
        commission:
          $ref: '#/components/schemas/CommissionInfo'
      discriminator:
        propertyName: type
        mapping:
          MAIN_LOAN: '#/components/schemas/MainLoan'
          KFW_PROMOTION_LOAN: '#/components/schemas/KfwPromotionLoan'
          AUXILIARY_LOAN: '#/components/schemas/AuxiliaryLoan'
    MainProduct:
      type: object
      description: |
        DE: Information zum Hauptdarlehensprodukt. <br/> EN: Main loan product information.
      required:
      - product
      properties:
        product:
          description: |
            DE: Typ des Hauptdarlehensproduktes. <br/>
            EN: Main loan product type.
          allOf:
          - $ref: '#/components/schemas/MainProductType'
      discriminator:
        propertyName: product
        mapping:
          ANNUITAET: '#/components/schemas/RegularMainProduct'
          W_RIESTER: '#/components/schemas/RegularMainProduct'
          ZWIFI: '#/components/schemas/BridgingFinancingMainProduct'
          FLEX_PLUS: '#/components/schemas/RegularMainProduct'
          FLEX: '#/components/schemas/RegularMainProduct'
          FORWARD: '#/components/schemas/RegularMainProduct'
          KOMBI: '#/components/schemas/RegularMainProduct'
          KONSTANT: '#/components/schemas/RegularMainProduct'
          KONST_KOMBI: '#/components/schemas/RegularMainProduct'
          VERSICHER: '#/components/schemas/RegularMainProduct'
          VOLLTILGER: '#/components/schemas/RegularMainProduct'
          OTHER: '#/components/schemas/RegularMainProduct'
    MainProductType:
      type: string
      description: |
        DE: Produkttyp des Darlehens (nicht abschließende Aufzählung), z.B. (ANNUITAET=Annuitätendarlehen, W_RIESTER=Wohnriesterdarlehen, ZWIFI=Zwischenfinanzierung, FLEX_PLUS, FLEX, FORWARD, KOMBI, KONSTANT, KONST_KOMBI, VERSICHER, VOLLTILGER, OTHER) EN: open ended enum contains loan product type, possible values are (ANNUITAET, W_RIESTER, ZWIFI, FLEX_PLUS, FLEX, FORWARD, KOMBI, KONSTANT, KONST_KOMBI, VERSICHER, VOLLTILGER, OTHER)
      example: ANNUITAET
      x-extensible-enum:
      - ANNUITAET
      - W_RIESTER
      - ZWIFI
      - FLEX_PLUS
      - FLEX
      - FORWARD
      - KOMBI
      - KONSTANT
      - KONST_KOMBI
      - VERSICHER
      - VOLLTILGER
      - OTHER
    RegularMainProduct:
      allOf:
      - $ref: '#/components/schemas/MainProduct'
    BridgingFinancingMainProduct:
      type: object
      description: |
        DE: Information zur Zwischenfinanzierung im Annuitätendarlehen. <br/> EN: Information on the bridging financing product in the annuity product.
      allOf:
      - $ref: '#/components/schemas/MainProduct'
      - properties:
          product:
            type: string
            default: ZWIFI
          details:
            $ref: '#/components/schemas/BridgingLoanDetails'
    BridgingLoanDetails:
      type: object
      required:
      - neededAmount
      - reason
      description: |
        DE: Information zur Zwischenfinanzierung. <br/> EN: Details about bridging loan.
      properties:
        reason:
          type: string
          description: |
            DE: Grund für die Zwischenfinanzierung (nicht abschließende Aufzaehlung), z.B. OPEN_PROPERTY_SALE, CLOSED_PROPERTY_SALE, UNAVAILABLE, PUBLIC_PRE_FINANCE. <br/> EN: Open ended enum contains bridging loan debt reason, possible values are OPEN_PROPERTY_SALE, CLOSED_PROPERTY_SALE, UNAVAILABLE, PUBLIC_PRE_FINANCE.
          example: OPEN_PROPERTY_SALE
          x-extensible-enum:
          - OPEN_PROPERTY_SALE
          - CLOSED_PROPERTY_SALE
          - UNAVAILABLE
          - PUBLIC_PRE_FINANCE
        neededAmount:
          description: |
            DE: Zwischenfinanzierungsbetrag. <br/>
            EN: Bridging loan amount.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        equityAvailabilityDate:
          description: |
            DE: Verfügbarkeit des Kapitals. <br/>
            EN: Bridging loan availability date.
          allOf:
          - $ref: '#/components/schemas/ISODate'
      discriminator:
        propertyName: reason
        mapping:
          OPEN_PROPERTY_SALE: '#/components/schemas/OpenPropertySale'
          CLOSED_PROPERTY_SALE: '#/components/schemas/ClosedPropertySale'
          UNAVAILABLE: '#/components/schemas/UnavailableEquity'
          PUBLIC_PRE_FINANCE: '#/components/schemas/PublicPreFinancing'
    OpenPropertySale:
      type: object
      description: |
        DE: Information zur Zwischenfinanzierung in Zusammenhang mit einem Immobilienverkauf. <br/> EN: Information about bridging debt associated with property sale.
      allOf:
      - $ref: '#/components/schemas/BridgingLoanDetails'
      - properties:
          reason:
            type: string
            default: OPEN_PROPERTY_SALE
          debtAmount:
            description: |
              DE: Aktuelle Grundschuldhöhe. <br/>
              EN: Current debt amount.
            allOf:
            - $ref: '#/components/schemas/EuroAmount'
          residualDebt:
            description: |
              DE: Aktuelle Restschuld. <br/>
              EN: Current remaining debt.
            allOf:
            - $ref: '#/components/schemas/EuroAmount'
    ClosedPropertySale:
      description: |
        DE: Information zur Zwischenfinanzierung in Zusammenhang mit einem abgeschlossenen Immobilienverkauf. <br/> EN: Bridging debt associated with a closed property sale.
      allOf:
      - $ref: '#/components/schemas/BridgingLoanDetails'
      - properties:
          reason:
            type: string
            default: CLOSED_PROPERTY_SALE
    UnavailableEquity:
      type: object
      required:
      - investmentType
      - investmentAmount
      description: |
        DE: Information zur Zwischenfinanzierung in Zusammenhang mit nicht verfügbaren Eigenkapital. <br/> EN: Bridging Debt associated with unavailable equity
      allOf:
      - $ref: '#/components/schemas/BridgingLoanDetails'
      - properties:
          reason:
            type: string
            default: UNAVAILABLE
          investmentType:
            description: |
              DE: Art der Kapitalbeteiligung. <br/> EN: Type of the equity investment.
            type: string
          investmentCompany:
            description: |
              DE: Unternehmen in welches das Kapital investiert wurde. <br/> EN: Company in which the equity is invested.
            type: string
          investmentAmount:
            description: |
              DE: Investionsbetrag. <br/>
              EN: Investment amount.
            allOf:
            - $ref: '#/components/schemas/EuroAmount'
    PublicPreFinancing:
      type: object
      required:
      - amount
      - type
      description: |
        DE: Information zu einem Zwischenfinanzierung in Zusammenhang mit einer öffentlichen Vorfinanzierung. <br/> EN: Bridging debt associated with public pre-financing.
      allOf:
      - $ref: '#/components/schemas/BridgingLoanDetails'
      - properties:
          reason:
            type: string
            default: PUBLIC_PRE_FINANCE
          type:
            description: |
              DE: Art der öffentlichen Vorfinanzierung. <br/> EN: Type of the public pre financing.
            type: string
          company:
            description: |
              DE: Unternehmen, welches die öffentlichen Vorfinanzierung bereitgestellt hat. <br/> EN: Company that provided the pre-financing.
            type: string
          amount:
            description: |
              DE: Vorfinanzierungsbetrag. <br/>
              EN: Pre-financing amount.
            allOf:
            - $ref: '#/components/schemas/EuroAmount'
    MainLoanAdditionalInfo:
      type: object
      description: |
        DE: Zustzäliche Information zum Hauptdarlehen. <br/> EN: Additional informations for main loan.
      properties:
        conditionDetails:
          type: array
          description: |
            DE: Zusätzliche Konditionsdetails für das Hauptdarlehen (Schlüssel-Werte Paar). <br/> EN: Additional condition details for the main loan (key-value pairs).
          items:
            $ref: '#/components/schemas/AdditionalInfo'
        provisionDetails:
          type: array
          description: |
            DE: Zusätzliche Provisionsdetails für das Hauptdarlehen (Schlüssel-Werte Paar). <br/> EN: Additional commission (provision) details for the main loan (key-value pairs).
          items:
            $ref: '#/components/schemas/AdditionalInfo'
    FinancialStandingsCommand:
      type: object
      required:
      - details
      properties:
        details:
          type: array
          items:
            $ref: '#/components/schemas/FinancialStanding'
          minItems: 1
        summary:
          $ref: '#/components/schemas/FinancialStandingSummary'
    ConsultationCommand:
      type: object
      required:
      - broker
      - originInfo
      properties:
        broker:
          description: |
            Company information about the main Broker (Interhp, Prohyp, MLP Hyp or Prohyp-WhiteLabel-Partner)
          allOf:
          - $ref: '#/components/schemas/Advisor'
        subBroker:
          description: |
            Company information about the sub broker.
          allOf:
          - $ref: '#/components/schemas/Advisor'
        informers:
          type: array
          items:
            $ref: '#/components/schemas/Informer'
        recommendation:
          $ref: '#/components/schemas/Recommendation'
        originInfo:
          $ref: '#/components/schemas/OriginInfo'
        consultationCompanyKey:
          $ref: '#/components/schemas/ConsultationCompanyKey'
    FinancingOffer:
      description: |
        DE: Information über das Finanzierungsangebot. <br/>
        EN: Information about the financing offer (bid).
      type: object
      required:
      - id
      - status
      properties:
        id:
          $ref: '#/components/schemas/OfferId'
        financingConfirmationRequired:
          description: |
            DE: Gibt an, ob eine Finanzierungsbestätigung benötigt wird. <br/> EN: Indicates if financing confirmation should be provided
          type: boolean
        status:
          $ref: '#/components/schemas/FinancingOfferStatus'
        loanQuota:
          $ref: '#/components/schemas/LoanQuota'
        financingNeed:
          $ref: '#/components/schemas/OfferFinancingNeed'
        financingStructures:
          $ref: '#/components/schemas/FinancingStructures'
        validity:
          description: |
            DE: Ablaufdatum des Angebots. <br/>
            EN: Offer expiration date.
          allOf:
          - $ref: '#/components/schemas/ISODateTime'
        baserateIssueDate:
          description: |
            DE: Einstandsdatum. <br/>
            EN: Base rate issue date.
          allOf:
          - $ref: '#/components/schemas/ISODate'
        offerDate:
          description: |
            DE: Angebotsdatum. <br/>
            EN: Offer creation date.
          allOf:
          - $ref: '#/components/schemas/ISODate'
        additionalInfos:
          description: |
            DE: Zusätzliche Details für das Angebot (Schlüssel-Werte Paar). <br/>
            EN: Additional offer details (key-value pairs).
          type: array
          items:
            $ref: '#/components/schemas/AdditionalInfo'
    ApplicantItem:
      type: object
      required:
      - applicantRef
      - person
      properties:
        applicantRef:
          description: |
            DE: Id und Referenz des Antragstellers. <br/> EN: Id and reference of the applicant.
          allOf:
          - $ref: '#/components/schemas/ApplicantIdRef'
        person:
          description: |
            DE: Personendaten des Antragsstellers. <br/> EN: Personal data of the applicant.
          allOf:
          - $ref: '#/components/schemas/Person'
        embedded:
          description: |
            DE: Vollständige Daten des Antragsstellers. <br/> EN: Complete data of the applicant.
          allOf:
          - $ref: '#/components/schemas/Applicant'
    ModifyFinancingApplicationLegacyCommand:
      type: object
      required:
      - operation
      properties:
        trigger:
          $ref: '#/components/schemas/CommandTrigger'
        operation:
          type: string
          x-extensible-enum:
          - START_EDITING
          - ABORT_EDITING
          - EDIT
      discriminator:
        propertyName: operation
        mapping:
          START_EDITING: '#/components/schemas/StartEditingFinancingApplicationLegacyCommand'
          ABORT_EDITING: '#/components/schemas/AbortEditingFinancingApplicationLegacyCommand'
          EDIT: '#/components/schemas/EditFinancingApplicationLegacyCommand'
    StartEditingFinancingApplicationLegacyCommand:
      description: This command is only used for internal purposes!
      type: object
      required:
      - editingInfo
      allOf:
      - $ref: '#/components/schemas/ModifyFinancingApplicationLegacyCommand'
      - properties:
          operation:
            type: string
            default: START_EDITING
          editingInfo:
            $ref: '#/components/schemas/EditingInfo'
          submissions:
            type: array
            items:
              $ref: '#/components/schemas/SubmissionId'
    AbortEditingFinancingApplicationLegacyCommand:
      description: This command is only used for internal purposes!
      type: object
      required:
      - editingInfo
      allOf:
      - $ref: '#/components/schemas/ModifyFinancingApplicationLegacyCommand'
      - properties:
          operation:
            type: string
            default: ABORT_EDITING
          editingInfo:
            $ref: '#/components/schemas/EditingInfo'
          submissions:
            type: array
            items:
              $ref: '#/components/schemas/SubmissionId'
    EditFinancingApplicationLegacyCommand:
      description: This command is only used for internal purposes!
      type: object
      allOf:
      - $ref: '#/components/schemas/ModifyFinancingApplicationLegacyCommand'
      - properties:
          operation:
            type: string
            default: EDIT
          financingApplication:
            $ref: '#/components/schemas/FinancingApplicationCommandData'
          submissionRequest:
            $ref: '#/components/schemas/EditSubmissionRequest'
          editingInfo:
            $ref: '#/components/schemas/EditingInfo'
    EditSubmissionRequest:
      type: object
      properties:
        submitted:
          $ref: '#/components/schemas/SubmissionDate'
        submittedBy:
          $ref: '#/components/schemas/Advisor'
        submissionRequestComponents:
          type: array
          items:
            $ref: '#/components/schemas/EditSubmissionRequestComponent'
    SubmissionDate:
      description: |
        DE: Erstellungsdatum der Einreichungsanforderung. <br/> EN: Submission Request creation date.
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
    EditSubmissionRequestComponent:
      type: object
      properties:
        submissionId:
          $ref: '#/components/schemas/SubmissionId'
        submissionRequestComponent:
          $ref: '#/components/schemas/SubmissionRequestComponent'
    SubmissionRequestComponent:
      type: object
      properties:
        externalSubmissionId:
          type: string
          description: External submission id from eHyp
        loanPartnerProcessingUnit:
          $ref: '#/components/schemas/LoanPartnerProcessingUnit'
        loanPartnerProcessor:
          $ref: '#/components/schemas/LoanPartnerProcessor'
        initialEstimate:
          $ref: '#/components/schemas/InitialSubmissionEstimate'
        loanTypes:
          $ref: '#/components/schemas/LoanTypes'
        handover:
          $ref: '#/components/schemas/Handover'
        calculation:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Calculation'
    LoanTypes:
      type: object
      required:
      - loanTypes
      properties:
        loanTypes:
          type: array
          items:
            $ref: '#/components/schemas/LoanType'
    Command:
      type: object
      required:
      - commandId
      - status
      properties:
        commandId:
          $ref: '#/components/schemas/CommandId'
        status:
          type: string
          x-extensible-enum:
          - SUCESSFULL
          - FAILED
      discriminator:
        propertyName: status
        mapping:
          SUCESSFULL: '#/components/schemas/SuccessfulCommand'
          FAILED: '#/components/schemas/FailedCommand'
    SuccessfulCommand:
      type: object
      required:
      - modifiedResources
      allOf:
      - $ref: '#/components/schemas/Command'
      - properties:
          modifiedResources:
            type: array
            items:
              $ref: '#/components/schemas/ResourceRef'
    FailedCommand:
      type: object
      allOf:
      - $ref: '#/components/schemas/SuccessfulCommand'
      - properties:
          errorMessage:
            type: string
    CreditLoans:
      type: object
      description: |
        A wrapper Type to hold a set of submission credit loans.
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CreditLoanItem'
    CreditLoanItem:
      type: object
      description: |
        Holds information regarding a specific submission credit loan.

        Further details will be delivered in the embedded property if specified.

        Please refer to *Expansion* section for more details.
      properties:
        id:
          $ref: '#/components/schemas/CreditLoanId'
        _href:
          $ref: '#/components/schemas/ResourceRef'
        types:
          type: array
          description: |
            DE: Art des Darlehens. <br/>
            EN: set of loan types associated with this credit loan.
          items:
            $ref: '#/components/schemas/LoanType'
          minItems: 1
        embedded:
          $ref: '#/components/schemas/CreditLoan'
    SubmissionRequest:
      type: object
      properties:
        submitted:
          $ref: '#/components/schemas/SubmissionDate'
        submittedBy:
          $ref: '#/components/schemas/Advisor'
        submissionRequestComponents:
          type: array
          items:
            $ref: '#/components/schemas/SubmissionRequestComponent'
    PropertyRegisterOwnerApplicant:
      type: object
      required:
      - applicant
      allOf:
      - $ref: '#/components/schemas/PropertyRegisterOwner'
      - properties:
          type:
            type: string
            default: APPLICANT
          applicant:
            $ref: '#/components/schemas/ApplicantIdRef'
    PropertyRegisterOwnerThirdPerson:
      type: object
      allOf:
      - $ref: '#/components/schemas/PropertyRegisterOwner'
      - properties:
          type:
            type: string
            default: THIRD_PERSON
          fullName:
            type: string
          person:
            $ref: '#/components/schemas/Person'
    CalculationItem:
      type: object
      properties:
        context:
          type: array
          description: |
            DE: Kalkulation nach Art des Darlehens. <br/>
            EN: A set of financing structure contexts, which are associated with this calculation (i.e `Main` or `Nachrang` component)..
          items:
            $ref: '#/components/schemas/LoanType'
        calculation:
          $ref: '#/components/schemas/Calculation'
    Protocol:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProtocolItem'
    ProtocolItem:
      type: object
      required:
      - type
      properties:
        type:
          $ref: '#/components/schemas/ProtocolItemType'
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        author:
          type: string
      discriminator:
        propertyName: type
        mapping:
          DOCUMENT: '#/components/schemas/SubmissionDocumentUpdate'
          DATA: '#/components/schemas/SubmissionDataUpdate'
          STATUS: '#/components/schemas/SubmissionStatusUpdate'
          NEW_SUBMISSION: '#/components/schemas/NewSubmission'
    ProtocolItemType:
      type: string
      description: |
        DE: Art des Protokollitems (nicht abschließende Aufzählung), z.B. (DOCUMENT, DATA, STATUS, NEW_SUBMISSION). <br/> EN: open ended enum contains possible protocol item types, possible values are (DOCUMENT, DATA, STATUS, NEW_SUBMISSION).
      example: DOCUMENT
      x-extensible-enum:
      - DOCUMENT
      - DATA
      - STATUS
      - NEW_SUBMISSION
    SubmissionDocumentUpdate:
      type: object
      description: |
        DE: Aktualisierungen der Einreichungsdokumente, die ggf. weitere Maßnahmen erfordern. <br/> EN: Contains submission document related updates which may require action to be taken
      allOf:
      - $ref: '#/components/schemas/ProtocolItem'
      - properties:
          action:
            type: string
            description: |
              DE: Mögliche Aktualisierungen (nicht abschließende Aufzählung), z.B. (ADDED, REMOVED, CHANGED). <br/> EN: Open ended enum contains possible actions, possible values are (ADDED, REMOVED, CHANGED)
            example: ADDED
            x-extensible-enum:
            - ADDED
            - REMOVED
            - CHANGED
          document:
            $ref: '#/components/schemas/ResourceRef'
    SubmissionDataUpdate:
      type: object
      description: |
        DE: Enthält den Zustand und ggf. Aktualisierungen der Einreichungsdaten. <br/> EN: Contains submission data related state transitions and updates.
      allOf:
      - $ref: '#/components/schemas/ProtocolItem'
      - properties:
          field:
            type: string
          change:
            $ref: '#/components/schemas/StateTransitionValue'
          reason:
            type: string
          remark:
            type: string
    StateTransitionValue:
      type: object
      properties:
        old:
          type: string
        new:
          type: string
    SubmissionStatusUpdate:
      type: object
      description: |
        DE: Statusänderungen zur Einreichung, die ggf. weitere Maßnahmen erfordern bzw. Anzeige des aktuellen Zustand der Einreichung. <br/> EN: Contains submission status related updates which require actions to be taken, or show state transition
      allOf:
      - $ref: '#/components/schemas/SubmissionDataUpdate'
    NewSubmission:
      type: object
      description: |
        DE: Informationen, wann die neue Einreichung erzeugt wurde. <br/> EN: Contains information when the new submission was created.
      allOf:
      - $ref: '#/components/schemas/ProtocolItem'
      - properties:
          documents:
            $ref: '#/components/schemas/SubmissionRef'
    SubmissionRef:
      type: object
      description: |
        A reference to a specific submisson resource.

        This reference consists of a link which leads directly to the resource and an Id which could be used to reconstruct the url.
      properties:
        _href:
          $ref: '#/components/schemas/ResourceRef'
        id:
          $ref: '#/components/schemas/SubmissionId'
    Submissions:
      type: object
      description: |
        A wrapper Type to hold a set of submission references and paging metadata.
      required:
      - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SubmissionItem'
        paging:
          $ref: '#/components/schemas/Paging'
    SubmissionItem:
      type: object
      description: |
        Holds basic information identifying a specific submission resource.
      required:
      - submissionRef
      - submittedAt
      properties:
        submissionRef:
          $ref: '#/components/schemas/SubmissionRef'
        submittedAt:
          description: |
            DE: Datum der Einreichung. <br/>
            EN: Date when this submission has been submitted.
          allOf:
          - $ref: '#/components/schemas/ISODateTime'
    Paging:
      type: object
      description: |
        Cursor-based pagination to improve performance and minimize networks traffic, Pagination is enforced for operations
        that potentially could return a large collection of items.
      properties:
        cursor:
          $ref: '#/components/schemas/Cursor'
        previous:
          type: string
          format: uri
          description: |
            A Hyperlink that will return the previous page of data. If not included, this is the first page of data.
        next:
          type: string
          format: uri
          description: |
            A Hyperlink that will return the next page of data. If not included, this is the last page of data.


            > The Absence of *next* hyperlink indicates that a query reached the end of the available result.
        first:
          type: string
          format: uri
          description: |
            A Hyperlink that will return the first page of data.
        last:
          type: string
          format: uri
          description: |
            A Hyperlink that will return the last page of data at this point of time.
        self:
          type: string
          format: uri
          description: |
            A Hyperlink that will return the current page of data.
    UtilizationKey:
      type: string
      description: |
        DE: Nutzung des Ojektes (nicht abschließende Aufzählung), z.B. SELF_OCCUPIED, PARTLY_RENT_OUT, RENT_OUT. <br/> EN: Open ended enum contains utilization of the property, possible values are SELF_OCCUPIED, PARTLY_RENT_OUT, RENT_OUT.
      example: SELF_OCCUPIED
      x-extensible-enum:
      - SELF_OCCUPIED
      - PARTLY_RENT_OUT
      - RENT_OUT
    SubmissionDocumentBinary:
      type: string
      format: binary
    SubmissionCorrespondence:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SubmissionCorrespondenceItem'
        paging:
          $ref: '#/components/schemas/Paging'
    SubmissionCorrespondenceItem:
      type: object
      properties:
        submission:
          $ref: '#/components/schemas/SubmissionRef'
        correspondence:
          $ref: '#/components/schemas/SubmissionCorrespondenceRef'
    SubmissionCorrespondenceRef:
      type: object
      properties:
        _href:
          $ref: '#/components/schemas/ResourceRef'
        embedded:
          $ref: '#/components/schemas/EmbeddedSubmissionCorrespondence'
    EmbeddedSubmissionCorrespondence:
      type: object
      properties:
        correspondence:
          type: array
          items:
            $ref: '#/components/schemas/CorrespondenceItem'
    SpecialRepayment:
      type: object
      required:
      - type
      description: |
        DE: Information zur Sondertilgung. <br/> EN: Special repayment information.
      properties:
        type:
          $ref: '#/components/schemas/SpecialRepaymentType'
      discriminator:
        propertyName: type
        mapping:
          PERCENTAGE: '#/components/schemas/PercentageSpecialRepayment'
          TEXT: '#/components/schemas/TextSpecialRepayment'
    SpecialRepaymentType:
      type: string
      description: |
        DE: Typ der speziellen Rückzahlung (nicht abschließende Aufzählung), z.B. PERCENTAGE, TEXT. <br/>
        EN: Open ended enum contains possible special repayment types, possible values are PERCENTAGE, TEXT.
      example: PERCENTAGE
      x-extensible-enum:
      - PERCENTAGE
      - TEXT
    PercentageSpecialRepayment:
      description: |
        DE: Sondertilgung in Prozent pro Periode. <br/>
        EN: Special repayment presented as percent per period.
      type: object
      required:
      - type
      - percent
      allOf:
      - $ref: '#/components/schemas/SpecialRepayment'
      - properties:
          type:
            type: string
            default: PERCENTAGE
          description:
            description: |
              DE: Beschreibung der Sondertilgung. <br/> EN: Special repayment description.
            type: string
          percent:
            description: |
              DE: Sondertilgung in Prozent. <br/>
              EN: Payment percent per period.
            allOf:
            - $ref: '#/components/schemas/PeriodicalPercentage'
    TextSpecialRepayment:
      description: |
        DE: Sondertilgung in Textform. <br/>
        EN: Special repayment presented as text.
      type: object
      required:
      - type
      - text
      allOf:
      - $ref: '#/components/schemas/SpecialRepayment'
      - properties:
          type:
            type: string
            default: TEXT
          text:
            description: |
              DE: Sondertilgung in Textform. <br/> EN: Special repayment in text format.
            type: string
    PayoutInfo:
      type: object
      description: |
        DE: Information zur Auszahlung des Darlehens. <br/> EN: Loan payout information.
      properties:
        firstPayout:
          description: |
            DE: Datum der ersten Teilauszahlung. <br/>
            EN: First payout date.
          allOf:
          - $ref: '#/components/schemas/ISODate'
        freeAllocationPeriod:
          description: |
            DE: Bereitstellungszinsfreie Zeit. <br/>
            EN: Interest free period.
          allOf:
          - $ref: '#/components/schemas/Duration'
        payoutRate:
          description: |
            DE: Auszahlungskurs. <br/>
            EN: Payout rate.
          allOf:
          - $ref: '#/components/schemas/Percentage'
    CommissionInfo:
      type: object
      required:
      - percent
      description: |
        DE: Abschließende Information zur Provision. <br/> EN: Complete information about commissions.
      properties:
        percent:
          description: |
            DE: Provision in Prozent. <br/>
            EN: Commision in percent.
          allOf:
          - $ref: '#/components/schemas/Percentage'
        amount:
          description: |
            DE: Provisionsbetrag. <br/>
            EN: Provision amount.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
    KfwPromotionLoan:
      description: |
        DE: Information zum Kfw-Darlehen. <br/>
        EN: Information about the KFW promotion loan.
      type: object
      allOf:
      - $ref: '#/components/schemas/Loan'
      - properties:
          type:
            type: string
            default: KFW_PROMOTION_LOAN
          program:
            $ref: '#/components/schemas/KfwProgram'
          annuityDetails:
            $ref: '#/components/schemas/AnnuityDetails'
          reservations:
            description: |
              DE: Sammlung von KFW-Darlehensreservierungen. <br/>
              EN: Collection of KFW loan reservations.
            type: array
            items:
              $ref: '#/components/schemas/KfwReservationInfo'
    AuxiliaryLoan:
      description: |
        DE: Information zum Nachrangdarlehen. <br/>
        EN: Information about the auxiliary loan.
      type: object
      required:
      - type
      - product
      allOf:
      - $ref: '#/components/schemas/Loan'
      - properties:
          type:
            type: string
            default: AUXILIARY_LOAN
          annuityDetails:
            $ref: '#/components/schemas/AnnuityDetails'
          product:
            $ref: '#/components/schemas/AuxProductType'
    HandoverReportBinary:
      type: string
      format: binary
    HandoverReports:
      type: object
      description: |
        A wrapper Type to hold a set of handover reports references.
      required:
      - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/HandoverReport'
    ModifyFinancingApplicationCommand:
      type: object
      required:
      - operation
      properties:
        trigger:
          $ref: '#/components/schemas/CommandTrigger'
        operation:
          type: string
          x-extensible-enum:
          - REPLACE
          - SUBMIT
      discriminator:
        propertyName: operation
        mapping:
          REPLACE: '#/components/schemas/FinancingApplicationReplaceCommand'
          SUBMIT: '#/components/schemas/FinancingApplicationSubmitCommand'
    FinancingApplicationReplaceCommand:
      type: object
      allOf:
      - $ref: '#/components/schemas/ModifyFinancingApplicationCommand'
      - properties:
          operation:
            type: string
            default: REPLACE
          data:
            $ref: '#/components/schemas/FinancingApplicationCommandData'
    FinancingApplicationSubmitCommand:
      type: object
      allOf:
      - $ref: '#/components/schemas/ModifyFinancingApplicationCommand'
      - properties:
          operation:
            type: string
            default: SUBMIT
          submissionRequest:
            $ref: '#/components/schemas/SubmissionRequest'
    ConsultationCompanyKey:
      type: string
      description: |
        DE: Interne Vermittler Quelle, wichtig für ermitteln des Vermittlernummers.</br>
        EN: Advisor company key, used to determine company identifier.
      example: INTERHYP
      x-extensible-enum:
      - INTERHYP
      - PROHYP
      - MLP_HYP
    Submission:
      type: object
      description: |
        DE: Ein Kreditantrag enthält alle relevanten Informationen für eine Kreditentscheidung. <br/>
        EN: A submission holds all the information in order to help the financing partners during credit decision phase.
      required:
      - submissionId
      properties:
        submissionId:
          $ref: '#/components/schemas/SubmissionId'
        financingApplication:
          $ref: '#/components/schemas/FinancingApplicationItem'
        overview:
          $ref: '#/components/schemas/SubmissionOverviewItem'
        creditLoans:
          $ref: '#/components/schemas/CreditLoans'
        originInfo:
          $ref: '#/components/schemas/OriginInfo'
    LoanQuotaType:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/LoanQuotaTypeKey'
    LoanQuotaTypeKey:
      type: string
      description: |
        DE: Ursprung des Wertes der Darlehensquote (nicht abschließende Aufzählung), z.B. CALCULATED, EXTERNAL. <br/> EN: Open ended enum contains loan quota values, possible values are CALCULATED, EXTERNAL.
      example: CALCULATED
      x-extensible-enum:
      - CALCULATED
      - EXTERNAL
    OAuthProblem:
      type: object
      description: Error while Authentication
      required:
      - error
      - error_description
      properties:
        error:
          type: string
          description: Summary of the error type
          example: invalid_token
        error_description:
          type: string
          description: Detailed information about the error
          example: Access token expired
    RegisterCover:
      description: |
        DE: Grundbuchdaten. <br/> EN: General information about the land register sheet.
      type: object
      properties:
        registerCourt:
          description: |
            DE: Amtsgericht. <br/> EN: Land registry/local court.
          type: string
        registerCity:
          description: |
            DE: Grundbuchbezirk. <br/> EN: City of land register.
          type: string
        registerVolume:
          description: |
            DE: Nummer des Bandes. <br/> EN: Number of the volume of the land register.
          type: string
        registerPage:
          description: |
            DE: Nummer des Blattes. <br/> EN: Page in the land register.
          type: string
    PropertiesRegisterInventory:
      description: |
        DE: Grundstück und Eigentum (Eintrag aus dem Bestandsverzeichnis des Grundbuchblattes). <br/> EN: Land and property (Entry from the inventory of the land register sheet).
      type: object
      required:
      - type
      - parcelAndDistrict
      properties:
        type:
          type: string
          x-extensible-enum:
          - OWNERSHIP_INVENTORY
          - JOINT_OWNERSHIP_INVENTORY
        id:
          description: |
            DE: Laufende Nummer des Grundstücks. <br/> EN: Serial number of the property.
          allOf:
          - $ref: '#/components/schemas/PropertyRegisterInventoryId'
        parcelAndDistrict:
          description: |
            DE: Gemarktung und Flurstück. <br/> EN: Cadastral district and land parcel
          type: object
          allOf:
          - $ref: '#/components/schemas/ParcelAndDistrict'
        parcelDesc:
          description: |
            DE: Wirschaftsart und Lage. <br/> EN: Economic type and location.
          type: string
        parcelSize:
          description: |
            DE: Größe des Flurstücks. <br/> DE: Size of the parcel.
          allOf:
          - $ref: '#/components/schemas/SquareMeter'
      discriminator:
        propertyName: type
        mapping:
          OWNERSHIP_INVENTORY: '#/components/schemas/OwnershipInventory'
          JOINT_OWNERSHIP_INVENTORY: '#/components/schemas/JointOwnershipInventory'
    PropertyRegisterInventoryId:
      type: object
      required:
      - id
      description: |
        DE: Laufende Nummer eines Grundstücks/Eigentum. <br/> EN: Serial number of the property.
      properties:
        id:
          type: string
    ParcelAndDistrict:
      description: |
        DE: Information über Gemarktung und Flurstück. <br/> EN: Information about the cadastral district and the land parcel.
      required:
      - parcel
      properties:
        district:
          description: |
            DE: Gemarkung/Bezirk. <br/> EN: Cadastral district.
          type: string
        corridor:
          description: |
            DE: Flur. <br/> EN: Corridor.
          type: string
        parcel:
          description: |
            DE: Flurstück. <br/> EN: Land parcel.
          type: string
    OwnershipInventory:
      description: |
        DE: Eigentum an einem Gründstück/Objekt. <br/> EN: Ownership of a property.
      type: object
      allOf:
      - $ref: '#/components/schemas/PropertiesRegisterInventory'
      - properties:
          type:
            type: string
            default: OWNERSHIP_INVENTORY
    JointOwnershipInventory:
      description: |
        DE: Miteigentumsanteil an einem Gründstück/Objekt. <br/> EN: Co-ownership of a property.
      type: object
      allOf:
      - $ref: '#/components/schemas/PropertiesRegisterInventory'
      - properties:
          type:
            type: string
            default: JOINT_OWNERSHIP_INVENTORY
          commonPropertyShare:
            description: |
              DE: Miteigentumsanteil (https://de.wikipedia.org/wiki/Miteigentumsanteil). EN: Co-ownership share (https://de.wikipedia.org/wiki/Miteigentumsanteil).
            type: number
            format: double
          commonPropertyTotal:
            description: |
              DE: Summe der Miteigentumsanteile. EN: Total Co-ownership share.
            type: number
            format: double
          inventoryUnitProperties:
            description: |
              DE: Sammlung von Sondereigentümen (https://de.wikipedia.org/wiki/Sondereigentum) die mit diesem Miteigentum verbunden sind. <br/> EN: Collection of special properties (inventory units) associated with this co-ownership.
            type: array
            items:
              $ref: '#/components/schemas/InventorySpecialProperty'
    InventorySpecialProperty:
      type: object
      properties:
        number:
          description: |
            DE: Nummer des Sondereigentums (z. B. Wohnungsnummer). <br/> EN: Number of the special property (e.g. apartment number).
          type: string
        type:
          $ref: '#/components/schemas/SpecialPropertyType'
    SpecialPropertyType:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/SpecialPropertyTypeKey'
    SpecialPropertyTypeKey:
      type: string
      description: |
        DE: Sondereigentumstyp (nicht abschließende Aufzählung), z.B. BASEMENT, HOBBY, DRYING_ROOM, ATTIC, OFFICE, APARTMENT, ALL_ROOMS, GARAGE, OUT_PARK, UG_PARK, DUPLEX_PARK, GROUND, TOWNHOUSE_CORNER, TOWNHOUSE_CENTER, SEMIDETACHED_HOUSE. <br/> EN: open ended enum contains unit Property details, possible values are (BASEMENT, HOBBY, DRYING_ROOM, ATTIC, OFFICE, APARTMENT, ALL_ROOMS, GARAGE, OUT_PARK, UG_PARK, DUPLEX_PARK, GROUND, TOWNHOUSE_CORNER, TOWNHOUSE_CENTER, SEMIDETACHED_HOUSE)
      example: BASEMENT
      x-extensible-enum:
      - BASEMENT
      - HOBBY
      - DRYING_ROOM
      - ATTIC
      - OFFICE
      - APARTMENT
      - ALL_ROOMS
      - GARAGE
      - OUT_PARK
      - UG_PARK
      - DUPLEX_PARK
      - GROUND
      - TOWNHOUSE_CORNER
      - TOWNHOUSE_CENTER
      - SEMIDETACHED_HOUSE
      - OTHER
    PropertyRegisterOwnerEntry:
      type: object
      description: |
        DE: Eigentümer (Eintrag aus der zweiten Abteilung des Grundbuchblattes). <br/> EN: Owner (entry from the second section of the land register sheet).
      properties:
        owners:
          description: |
            DE: Sammlung von Eigentümer eines Grundstücks. EN: Collection of owners of the property.
          type: array
          items:
            $ref: '#/components/schemas/PropertyRegisterOwner'
        inventories:
          description: |
            DE: Referenzen zu den Einträgen im Bestandsverzeichnis. <br/> EN: References to the entries in the inventory.
          type: array
          items:
            $ref: '#/components/schemas/PropertyRegisterInventoryId'
    PropertyRegisterRestriction:
      description: |
        DE: Lasten und Beschränkungen (Eintrag aus der zweiten Abteilung des Grundbuchblattes). <br/> EN: Loads and restrictions (entry from the second section of the land register sheet).
      type: object
      properties:
        inventories:
          description: |
            DE: Referenzen zu den Einträgen im Bestandsverzeichnis. <br/> EN: References to the entries in the inventory.
          type: array
          items:
            $ref: '#/components/schemas/PropertyRegisterInventoryId'
        restriction:
          description: |
            DE: Beschreibung der Lasten und Beschränkungen. <br/> EN: Description of burdens and restrictions.
          type: string
        effectiveAfterMortgages:
          description: |
            DE: Tritt die Last/Beschränkung im Rang zurück. D. h. indiziert ob eine mögliche Grundschuld im Rang vor dieser Last/Beschränkung steht <br/> EN: Resets the burden/limitation in rank. I.e. indicates if there is a possible land charge ranking before this burden/restriction.
          type: boolean
    PropertyRegisterMortgage:
      description: |
        DE: Hyptheken, Grundschulden, Rentenschulden (Eintrag aus der dritten Abteilung des Grundbuchblattes). <br/> EN: Mortgages, land charges, annuities (entry from the third section of the land register sheet).
      type: object
      properties:
        serial:
          description: |
            DE: Laufende Nummer im Grundbuch. <br/> EN: Serial number in land register.
          type: string
        rank:
          description: |
            DE: Rangstelle im Grundbuch. <br/> EN: Cadastral reference.
          type: string
        inventories:
          description: |
            DE: Referenzen zu den Einträgen im Bestandsverzeichnis. <br/> EN: References to the entries in the inventory.
          type: array
          items:
            $ref: '#/components/schemas/PropertyRegisterInventoryId'
        nominalAmount:
          description: |
            DE: Im Grundbuch eingetragener Betrag. <br/> EN: Amount entered in the land register.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        cessionClaim:
          $ref: '#/components/schemas/CessionClaim'
        creditor:
          description: |
            EN: Creditor DE: Gläubiger
          type: string
        interest:
          description: |
            EN: Interest DE: Dinglicher Zins
          allOf:
          - $ref: '#/components/schemas/PeriodicalPercentage'
        nonRecurringLoanUndertaking:
          description: |
            EN: One-time value DE: Einmalvalutierung siehe [Einmalvalutierung](https://de.wikipedia.org/wiki/Einmalvalutierungserkl%C3%A4rung)
          type: boolean
        auxiliary:
          description: |
            EN: Additional services DE: Nebenleistungen
          allOf:
          - $ref: '#/components/schemas/Percentage'
        primary:
          description: |
            DE: Flag um anzuzeigen, ob der Darlehensgeber als vorrangiger Gläubiger im Grundbuch eingetragen ist. <br/> EN: Flag to indicate whether the lender is registered as primary creditor in the land register.
          type: boolean
    CessionClaim:
      type: object
      description: |
        DE: Information zur Abtretung der Grundschuld. <br/>
        EN: Information about the cession of the land charge.
      required:
      - requested
      properties:
        requested:
          description: |
            DE: Flag ob eine Abtretung der Grundschuld erwünscht wird. <br/> EN: Flag whether a cession of the land charge is desired
          type: boolean
      discriminator:
        propertyName: requested
        mapping:
          true: '#/components/schemas/CessionClaimRequested'
          false: '#/components/schemas/NoCessionClaim'
    CessionClaimRequested:
      type: object
      description: |
        DE: Information zur beantragten Abtretung der Grundschuld. <br/> EN: Information about the requested cession of the land charge.
      allOf:
      - $ref: '#/components/schemas/CessionClaim'
      - properties:
          requested:
            type: boolean
            default: true
          cessionType:
            $ref: '#/components/schemas/CessionType'
          execSubmission:
            description: |
              DE: Paragraph 800 ZPO (https://www.gesetze-im-internet.de/zpo/__800.html). <br/> EN: Paragraph 800 ZPO (paragraph 800 in code of civil procedure).
            type: boolean
          allCustomersLiable:
            description: |
              DE: Haftung aller Kreditnehmer (Kunden). <br/> EN: Liability of all credit takers (applicants).
            type: boolean
          newRank:
            description: |
              DE: Neuer Anspruchsrang. <br/> EN: New claim rank.
            type: string
          cessionAmount:
            description: |
              DE: Abtretungsbetrag. <br/>
              EN: Cession amount.
            allOf:
            - $ref: '#/components/schemas/EuroAmount'
    CessionType:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/CessionTypeKey'
    CessionTypeKey:
      type: string
      description: |
        DE: Abschnittstyp in der Abteilung III des Grundbuches (nicht abschließende Aufzählung), z.B. LETTER, BOOK <br/> EN: Open ended enum contains type of section III of the land register, possible values are (LETTER, BOOK).
      example: LETTER
      x-extensible-enum:
      - LETTER
      - BOOK
      - OTHER
    NoCessionClaim:
      type: object
      description: |
        DE: Eine Abtretung dieser Grundschuld ist nicht erwünscht. <br/> EN: A cession of this land charge is not desired.
      allOf:
      - $ref: '#/components/schemas/CessionClaim'
      - properties:
          requested:
            type: boolean
            default: false
    FinancingOfferStatus:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/FinancingOfferStatusKey'
    FinancingOfferStatusKey:
      description: |
        DE: Status des Finanzierungsangebots. <br/>
        EN: Financing offer status.
      type: string
      x-extensible-enum:
      - ACCEPTED
      - REJECTED
    OfferFinancingNeed:
      description: |
        DE: Information über den Finanzierungswunsch der finanziert werden sollten. <br/>
        EN: Information about the financing need.
      type: object
      properties:
        amount:
          description: |
            DE: Gewünschter Finanzierungsbetrag. <br/>
            EN: Wanted amount to be financed.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        costs:
          $ref: '#/components/schemas/OfferFinancingNeedCost'
        equity:
          description: |
            DE: In die Finanzierung eingebrachtes Eigenkapital. <br/>
            EN: Own equity used for the financing.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
    OfferFinancingNeedCost:
      description: |
        DE: Kosten verbunden mit der gewünschten Finanzierung. <br/>
        EN: Costs associated with the wanted financing.
      type: object
      properties:
        mortgageProperty:
          description: |
            DE: Gesamtkosten Finanzierungsobjekt. <br/>
            EN: Total costs associated with lending object.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        acquisition:
          description: |
            DE: Gesamtkosten relevant zum Erwerb einer Immobilie. <br/>
            EN: Total costs associated with acquisition of a property.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
    FinancingStructures:
      description: |
        DE: Information über die Struktur der Finanzierung. <br/>
        EN: Information about the financing structure.
      type: object
      properties:
        amount:
          description: |
            DE: Darlehensbetrag. <br/>
            EN: Loan amount.
          allOf:
          - $ref: '#/components/schemas/EuroAmount'
        interest:
          description: |
            DE: Effektiver Zins pro Periode. <br/>
            EN: Effective interest per period.
          allOf:
          - $ref: '#/components/schemas/PeriodicalPercentage'
        burden:
          description: |
            DE: Periodische Rate (z.B. monatliche Rate). <br/>
            EN: Periodical payment amount (e.g. rate per month).
          allOf:
          - $ref: '#/components/schemas/PeriodicalEuroAmount'
        components:
          description: |
            DE: Tranchen die eine Finanzierungsangebot abbilden. <br/>
            EN: Tranches that are associated with financing offer.
          type: array
          items:
            $ref: '#/components/schemas/Loan'
          minItems: 1
    KfwProgram:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/KfwProgramKey'
    KfwProgramKey:
      type: string
      description: |
        DE: KFW-Förderprogramm (nicht abschließende Aufzählung), z.B. Wohneigen, Wohn159, Energie153-40, Energie151, Energie152, Energie167. <br/> EN: Open ended enum contains possible programs for Kfw, possible values are Wohneigen, Wohn159, Energie153-40, Energie151, Energie152, Energie167.
      example: Wohneigen
      x-extensible-enum:
      - Wohneigen
      - Wohn159
      - Energie153-40
      - Energie151
      - Energie152
      - Energie167
    KfwReservationInfo:
      type: object
      description: |
        DE: Zusätzliche Information zur KFW-Darlehensreservierung. <br/> EN: Additional Information about the Kfw Loan reservations
      properties:
        id:
          type: string
          description: |
            DE: Identifizierungsnummer einer sofortigen (Kfw) Bestätigung. <br/> EN: Identification nummer for a immediate (Kfw) confirmation.
        callType:
          $ref: '#/components/schemas/KfwCallType'
        conditionReservationDate:
          description: |
            DE: Konditionsreservierungsdatum. <br/>
            EN: Condition reservation date.
          allOf:
          - $ref: '#/components/schemas/ISODate'
        validity:
          description: |
            DE: Ablaufdatum der Kondition. <br/>
            EN: Condition expiry date.
          allOf:
          - $ref: '#/components/schemas/ISODate'
    KfwCallType:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/KfwCallTypeKey'
    KfwCallTypeKey:
      type: string
      description: |
        DE: Art der KFW-Reservierung (nicht abschließende Aufzählung), z.B. LIGHT, PLUS. <br/> EN: Open ended enum contains Kfw reservation process call type, possible values are LIGHT, PLUS.
      example: PLUS
      x-extensible-enum:
      - LIGHT
      - PLUS
      - OTHER
    UploadSubmissionDocumentLegacyCommand:
      type: object
      required:
      - mediaId
      - type
      - uploadedAt
      - name
      properties:
        trigger:
          $ref: '#/components/schemas/CommandTrigger'
        mediaId:
          type: string
        type:
          $ref: '#/components/schemas/UploadedDocumentType'
        uploadedAt:
          $ref: '#/components/schemas/ISODateTime'
        name:
          type: string
        label:
          type: string
        uploadedBy:
          $ref: '#/components/schemas/LoanPartnerProcessingInfo'
    UploadedDocumentType:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/UploadedDocumentTypeKey'
    UploadedDocumentTypeKey:
      type: string
      example: CONTRACT
      x-extensible-enum:
      - CONTRACT
      - CONTRACT_ADDENDA
      - LAND_REGISTER_EXTRACT
      - PAYOUT_REQUIREMENT
      - OTHER
    Cursor:
      type: object
      description: |
        A cursor refers to a random string of characters which marks a specific item in a collection of data.

        The cursor will always point to the item, however it will be invalidated if the item is deleted or removed.
      properties:
        before:
          type: string
          description: |
            This is the cursor that points to the start of the page of data that has been returned.
        after:
          type: string
          description: This is the cursor that points to the end of the page of data
            that has been returned.
    AuxProductType:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/AuxProductTypeKey'
    AuxProductTypeKey:
      type: string
      description: |
        DE: Typ des Nachrangdarlehens (nicht abschließende Aufzählung), z.B. DSL_PRIVAT, OYAK_ANKER, HANSEATIC_ALL. <br/> EN: Open ended enum contains auxiliary loan product types, possible values are DSL_PRIVAT, OYAK_ANKER, HANSEATIC_ALL.
      example: HANSEATIC_ALL
      x-extensible-enum:
      - DSL_PRIVAT
      - HANSEATIC_ALL
      - OYAK_ANKER
      - OTHER
    FinancingApplicationCreationCommand:
      type: object
      required:
      - data
      properties:
        trigger:
          $ref: '#/components/schemas/CommandTrigger'
        data:
          $ref: '#/components/schemas/FinancingApplicationCommandData'
  parameters:
    applicant-id:
      name: applicantId
      in: path
      required: true
      schema:
        type: string
      description: Id for the requested applicant.
    command-id:
      name: commandId
      in: path
      required: true
      schema:
        type: string
      description: Id of the requested command
    estate-id:
      name: estateId
      in: path
      required: true
      schema:
        type: string
      description: Id for the requested estate.
    sbms-correspondence-limit:
      name: limit
      in: query
      description: Specifies how many items to return at one time (max 40). <br> A
        query may return fewer than the value of limit due to filtering.
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 40
        default: 20
    financial-standing-id:
      name: financialStandingId
      in: path
      required: true
      schema:
        type: string
      description: Id for the requested financial standing.
    until:
      name: until
      in: query
      description: |-
        A UTC date-time value that points to the end of the range of time-based data. If not provided, current date-time is used.

        Defined by date-time - [RFC3339](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
      required: false
      schema:
        type: string
        format: date-time
        example: 2019-12-29T10:22:50Z
    credit-loan-id:
      name: creditLoanId
      in: path
      required: true
      schema:
        type: string
      description: Id for the requested credit loan.
    financial-standing-filter:
      name: type
      in: query
      required: false
      schema:
        type: string
        enum:
        - debt
        - equity
        - income
        - expense
      description: query parameter to restrict financial state associated with the
        provided type.
    submission-id:
      name: submissionId
      in: path
      required: true
      schema:
        type: string
      description: Id for the requested submission.
    protocol-type-filter:
      name: protocolType
      in: query
      required: false
      schema:
        type: string
        enum:
        - data
        - status
      description: query parameter to restrict submissions associated with the provided
        protocol type.
    sbms-sort:
      name: sort
      in: query
      style: form
      required: false
      description: |-
        To indicate sorting direction, fields may be prefixed with `+` ascending or `-` descending.

        Note: sorting applies only within a single result page when multiple pages are returned.
      example: ?sort=+submittedAt
      schema:
        type: string
        enum:
        - +submittedAt
        - -submittedAt
    informer-id:
      name: informerId
      in: path
      required: true
      schema:
        type: string
      description: Id of the requested informer
    embed:
      name: embed
      in: query
      style: form
      required: false
      schema:
        type: boolean
      description: |-
        Flag to expand or embed sub-resources in the response resource.

        By default is set to `FALSE` where only a **ref** to the sub-resources will be returned. By set it to `TRUE` the sub-resources content will be embedded in the response which might affect the payload size
    document-id:
      name: documentId
      in: path
      required: true
      schema:
        type: string
      description: Id for the requested submission document.
    handover-report-name:
      name: name
      in: path
      required: true
      schema:
        type: string
      description: Name for the requested handover report.
      example: HANDOVER_PROTOCOL
    debt-id:
      name: debtId
      in: path
      required: true
      schema:
        type: string
      description: Id for the requested existing mortgage.
    calculation-type:
      name: calculationType
      in: path
      required: true
      schema:
        type: string
        enum:
        - household
        - condition
        - lending_value
      description: Subtype of the calculation data.
    correspondence-item-id:
      name: itemId
      in: path
      required: true
      schema:
        type: string
      description: Id for the requested submission correspondence item.
    correspondence-type-filter:
      name: correspondenceType
      in: query
      required: false
      schema:
        type: string
        enum:
        - message
        - note
      description: query parameter to restrict submissions associated with the provided
        correspondence type.
    sbms-limit:
      name: limit
      in: query
      description: |-
        Specifies how many items to return at one time (max 50).

        A query may return fewer than the value of limit due to filtering.
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 50
        default: 20
    sbms-correspondence-sort:
      name: sort
      in: query
      style: form
      required: false
      description: Comma-separated list of fields to define the sort order.<br> To
        indicate sorting direction, fields may be prefixed with `+` ascending or `-`
        descending. <br> **e.g.** /correspondence?sort=+createdAt <br> ***Note***
        sorting applies only within a single result page when multiple pages are returned.
        <br>
      example: sort=+createdAt
      schema:
        type: array
        items:
          type: string
          enum:
          - +createdAt
          - -createdAt
    cursor-after:
      name: after
      in: query
      description: Cursor that points to the end of the page of data that has been
        returned.
      required: false
      schema:
        type: string
    financing-application-id:
      name: financingApplicationId
      in: path
      required: true
      schema:
        type: string
      description: Id of the financing application
    cursor-before:
      name: before
      in: query
      description: Cursor that points to the start of the page of data that has been
        returned.
      required: false
      schema:
        type: string
    since:
      name: since
      in: query
      description: |-
        A UTC date-time value that points to the start of the range of time-based data.

        Defined by date-time - [RFC3339](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
      required: true
      schema:
        type: string
        format: date-time
        example: 2019-12-29T10:22:50Z
    sbms-protocol-sort:
      name: sort
      in: query
      style: form
      required: false
      description: Comma-separated list of fields to define the sort order.<br> To
        indicate sorting direction, fields may be prefixed with `+` ascending or `-`
        descending. <br> **e.g.** /protocol?sort=+createdAt <br> ***Note*** sorting
        applies only within a single result page when multiple pages are returned.
        <br>
      example: sort=+createdAt
      schema:
        type: array
        items:
          type: string
          enum:
          - +createdAt
          - -createdAt
